{
    "ecalls.cpp.o": [
        "sgx_accept",
        "sgx_connect",
        "ssl_conn_handle",
        "ssl_conn_init",
        "ssl_conn_init.cold",
        "ssl_conn_teardown",
        "ssl_conn_teardown.cold",
        "hprintf(char const*, ...) [clone .constprop.0]"
    ],
    "Enclave_t.c.o": [
        "ocall_mbedtls_net_accept",
        "ocall_mbedtls_net_bind",
        "ocall_mbedtls_net_connect",
        "ocall_mbedtls_net_free",
        "ocall_mbedtls_net_recv",
        "ocall_mbedtls_net_recv_timeout",
        "ocall_mbedtls_net_send",
        "ocall_mbedtls_net_set_block",
        "ocall_mbedtls_net_set_nonblock",
        "ocall_mbedtls_net_usleep",
        "ocall_print_string",
        "sgx_dummy",
        "sgx_oc_cpuidex",
        "sgx_sgx_accept",
        "sgx_sgx_connect",
        "sgx_ssl_conn_handle",
        "sgx_ssl_conn_init",
        "sgx_ssl_conn_teardown",
        "sgx_thread_set_multiple_untrusted_events_ocall",
        "sgx_thread_set_untrusted_event_ocall",
        "sgx_thread_setwait_untrusted_events_ocall",
        "sgx_thread_wait_untrusted_event_ocall"
    ],
    "Log.c.o": [],
    "pprint.c.o": [
        "dump_buf",
        "hexdump",
        "hexdump.part.0",
        "string_dump"
    ],
    "s_client.c.o": [
        "my_debug",
        "my_recv",
        "my_send",
        "my_verify",
        "ssl_client"
    ],
    "s_server.c.o": [
        "my_debug",
        "my_recv",
        "my_send",
        "psk_callback",
        "psk_free",
        "psk_parse",
        "ssl_server",
        "term_handler",
        "unhexify"
    ],
    "ssl_conn_hdlr.cpp.o": [
        "_GLOBAL__sub_I_ssl_conn_hdlr.cpp",
        "TLSConnectionHandler::handle(long, thread_info_t*)",
        "TLSConnectionHandler::mydebug(void*, int, char const*, int, char const*)",
        "TLSConnectionHandler::TLSConnectionHandler()",
        "TLSConnectionHandler::TLSConnectionHandler()",
        "TLSConnectionHandler::TLSConnectionHandler() [clone .cold]",
        "TLSConnectionHandler::~TLSConnectionHandler()",
        "TLSConnectionHandler::~TLSConnectionHandler()"
    ],
    "/home/leone/Documents/sgxfuzz/Enclaves/mbedtls-SGX/build/trusted/libmbedtls_SGX_t.a": [
        "aes_gen_tables",
        "mbedtls_aes_crypt_cbc",
        "mbedtls_aes_crypt_cfb128",
        "mbedtls_aes_crypt_cfb8",
        "mbedtls_aes_crypt_ctr",
        "mbedtls_aes_crypt_ecb",
        "mbedtls_aes_decrypt",
        "mbedtls_aes_encrypt",
        "mbedtls_aes_free",
        "mbedtls_aes_free.part.0",
        "mbedtls_aes_init",
        "mbedtls_aes_self_test",
        "mbedtls_aes_setkey_dec",
        "mbedtls_aes_setkey_enc",
        "mbedtls_internal_aes_decrypt",
        "mbedtls_internal_aes_encrypt",
        "mbedtls_arc4_crypt",
        "mbedtls_arc4_free",
        "mbedtls_arc4_init",
        "mbedtls_arc4_self_test",
        "mbedtls_arc4_setup",
        "mbedtls_asn1_find_named_data",
        "mbedtls_asn1_free_named_data",
        "mbedtls_asn1_free_named_data_list",
        "mbedtls_asn1_free_named_data.part.0",
        "mbedtls_asn1_get_alg",
        "mbedtls_asn1_get_alg_null",
        "mbedtls_asn1_get_bitstring",
        "mbedtls_asn1_get_bitstring_null",
        "mbedtls_asn1_get_bool",
        "mbedtls_asn1_get_int",
        "mbedtls_asn1_get_len",
        "mbedtls_asn1_get_mpi",
        "mbedtls_asn1_get_sequence_of",
        "mbedtls_asn1_get_tag",
        "mbedtls_asn1_store_named_data",
        "mbedtls_asn1_write_algorithm_identifier",
        "mbedtls_asn1_write_bitstring",
        "mbedtls_asn1_write_bool",
        "mbedtls_asn1_write_ia5_string",
        "mbedtls_asn1_write_int",
        "mbedtls_asn1_write_len",
        "mbedtls_asn1_write_mpi",
        "mbedtls_asn1_write_null",
        "mbedtls_asn1_write_octet_string",
        "mbedtls_asn1_write_oid",
        "mbedtls_asn1_write_printable_string",
        "mbedtls_asn1_write_raw_buffer",
        "mbedtls_asn1_write_tag",
        "mbedtls_base64_decode",
        "mbedtls_base64_encode",
        "mbedtls_base64_encode.part.0",
        "mbedtls_base64_self_test",
        "mbedtls_mpi_add_abs",
        "mbedtls_mpi_add_int",
        "mbedtls_mpi_add_mpi",
        "mbedtls_mpi_bitlen",
        "mbedtls_mpi_cmp_abs",
        "mbedtls_mpi_cmp_int",
        "mbedtls_mpi_cmp_mpi",
        "mbedtls_mpi_copy",
        "mbedtls_mpi_div_int",
        "mbedtls_mpi_div_mpi",
        "mbedtls_mpi_exp_mod",
        "mbedtls_mpi_fill_random",
        "mbedtls_mpi_free",
        "mbedtls_mpi_gcd",
        "mbedtls_mpi_gen_prime",
        "mbedtls_mpi_get_bit",
        "mbedtls_mpi_grow",
        "mbedtls_mpi_init",
        "mbedtls_mpi_inv_mod",
        "mbedtls_mpi_is_prime",
        "mbedtls_mpi_lsb",
        "mbedtls_mpi_lset",
        "mbedtls_mpi_mod_int",
        "mbedtls_mpi_mod_int.part.0",
        "mbedtls_mpi_mod_mpi",
        "mbedtls_mpi_mul_int",
        "mbedtls_mpi_mul_mpi",
        "mbedtls_mpi_read_binary",
        "mbedtls_mpi_read_string",
        "mbedtls_mpi_safe_cond_assign",
        "mbedtls_mpi_safe_cond_swap",
        "mbedtls_mpi_self_test",
        "mbedtls_mpi_set_bit",
        "mbedtls_mpi_shift_l",
        "mbedtls_mpi_shift_r",
        "mbedtls_mpi_shrink",
        "mbedtls_mpi_size",
        "mbedtls_mpi_sub_abs",
        "mbedtls_mpi_sub_int",
        "mbedtls_mpi_sub_mpi",
        "mbedtls_mpi_swap",
        "mbedtls_mpi_write_binary",
        "mbedtls_mpi_write_string",
        "mpi_check_small_factors.part.0",
        "mpi_miller_rabin",
        "mpi_montmul.isra.0",
        "mpi_mul_hlp",
        "mpi_sub_hlp",
        "mpi_write_hlp",
        "blowfish_enc",
        "mbedtls_blowfish_crypt_cbc",
        "mbedtls_blowfish_crypt_cfb64",
        "mbedtls_blowfish_crypt_ctr",
        "mbedtls_blowfish_crypt_ecb",
        "mbedtls_blowfish_free",
        "mbedtls_blowfish_init",
        "mbedtls_blowfish_setkey",
        "camellia_feistel",
        "mbedtls_camellia_crypt_cbc",
        "mbedtls_camellia_crypt_cfb128",
        "mbedtls_camellia_crypt_ctr",
        "mbedtls_camellia_crypt_ecb",
        "mbedtls_camellia_free",
        "mbedtls_camellia_init",
        "mbedtls_camellia_self_test",
        "mbedtls_camellia_setkey_dec",
        "mbedtls_camellia_setkey_enc",
        "ccm_auth_crypt",
        "mbedtls_ccm_auth_decrypt",
        "mbedtls_ccm_encrypt_and_tag",
        "mbedtls_ccm_free",
        "mbedtls_ccm_init",
        "mbedtls_ccm_self_test",
        "mbedtls_ccm_setkey",
        "add_one_and_zeros_padding",
        "add_pkcs_padding",
        "add_zeros_and_len_padding",
        "add_zeros_padding",
        "get_no_padding",
        "get_one_and_zeros_padding",
        "get_pkcs_padding",
        "get_zeros_and_len_padding",
        "get_zeros_padding",
        "mbedtls_cipher_auth_decrypt",
        "mbedtls_cipher_auth_encrypt",
        "mbedtls_cipher_check_tag",
        "mbedtls_cipher_crypt",
        "mbedtls_cipher_finish",
        "mbedtls_cipher_free",
        "mbedtls_cipher_info_from_string",
        "mbedtls_cipher_info_from_type",
        "mbedtls_cipher_info_from_values",
        "mbedtls_cipher_init",
        "mbedtls_cipher_list",
        "mbedtls_cipher_reset",
        "mbedtls_cipher_set_iv",
        "mbedtls_cipher_setkey",
        "mbedtls_cipher_set_padding_mode",
        "mbedtls_cipher_set_padding_mode.cold",
        "mbedtls_cipher_setup",
        "mbedtls_cipher_update",
        "mbedtls_cipher_update_ad",
        "mbedtls_cipher_write_tag",
        "aes_crypt_cbc_wrap",
        "aes_crypt_cfb128_wrap",
        "aes_crypt_ctr_wrap",
        "aes_crypt_ecb_wrap",
        "aes_ctx_alloc",
        "aes_ctx_free",
        "aes_setkey_dec_wrap",
        "aes_setkey_enc_wrap",
        "arc4_crypt_stream_wrap",
        "arc4_ctx_alloc",
        "arc4_ctx_free",
        "arc4_setkey_wrap",
        "blowfish_crypt_cbc_wrap",
        "blowfish_crypt_cfb64_wrap",
        "blowfish_crypt_ctr_wrap",
        "blowfish_crypt_ecb_wrap",
        "blowfish_ctx_alloc",
        "blowfish_ctx_free",
        "blowfish_setkey_wrap",
        "camellia_crypt_cbc_wrap",
        "camellia_crypt_cfb128_wrap",
        "camellia_crypt_ctr_wrap",
        "camellia_crypt_ecb_wrap",
        "camellia_ctx_alloc",
        "camellia_ctx_free",
        "camellia_setkey_dec_wrap",
        "camellia_setkey_enc_wrap",
        "ccm_aes_setkey_wrap",
        "ccm_camellia_setkey_wrap",
        "ccm_ctx_alloc",
        "ccm_ctx_free",
        "des3_crypt_cbc_wrap",
        "des3_crypt_ecb_wrap",
        "des3_ctx_alloc",
        "des3_ctx_free",
        "des3_set2key_dec_wrap",
        "des3_set2key_enc_wrap",
        "des3_set3key_dec_wrap",
        "des3_set3key_enc_wrap",
        "des_crypt_cbc_wrap",
        "des_crypt_ecb_wrap",
        "des_ctx_alloc",
        "des_ctx_free",
        "des_setkey_dec_wrap",
        "des_setkey_enc_wrap",
        "gcm_aes_setkey_wrap",
        "gcm_camellia_setkey_wrap",
        "gcm_ctx_alloc",
        "gcm_ctx_free",
        "block_cipher_df",
        "ctr_drbg_self_test_entropy",
        "ctr_drbg_update_internal",
        "mbedtls_ctr_drbg_free",
        "mbedtls_ctr_drbg_free.part.0",
        "mbedtls_ctr_drbg_init",
        "mbedtls_ctr_drbg_random",
        "mbedtls_ctr_drbg_random_with_add",
        "mbedtls_ctr_drbg_reseed",
        "mbedtls_ctr_drbg_seed",
        "mbedtls_ctr_drbg_seed_entropy_len",
        "mbedtls_ctr_drbg_self_test",
        "mbedtls_ctr_drbg_set_entropy_len",
        "mbedtls_ctr_drbg_set_prediction_resistance",
        "mbedtls_ctr_drbg_set_reseed_interval",
        "mbedtls_ctr_drbg_update",
        "mbedtls_debug_print_buf",
        "mbedtls_debug_print_crt",
        "mbedtls_debug_print_ecp",
        "mbedtls_debug_print_ecp.part.0",
        "mbedtls_debug_print_mpi",
        "mbedtls_debug_print_mpi.part.0",
        "mbedtls_debug_print_msg",
        "mbedtls_debug_print_ret",
        "mbedtls_debug_set_threshold",
        "des3_set2key",
        "des3_set3key",
        "mbedtls_des3_crypt_cbc",
        "mbedtls_des3_crypt_cbc.part.0",
        "mbedtls_des3_crypt_ecb",
        "mbedtls_des3_free",
        "mbedtls_des3_init",
        "mbedtls_des3_set2key_dec",
        "mbedtls_des3_set2key_enc",
        "mbedtls_des3_set3key_dec",
        "mbedtls_des3_set3key_enc",
        "mbedtls_des_crypt_cbc",
        "mbedtls_des_crypt_cbc.part.0",
        "mbedtls_des_crypt_ecb",
        "mbedtls_des_free",
        "mbedtls_des_init",
        "mbedtls_des_key_check_key_parity",
        "mbedtls_des_key_check_weak",
        "mbedtls_des_key_set_parity",
        "mbedtls_des_self_test",
        "mbedtls_des_setkey",
        "mbedtls_des_setkey_dec",
        "mbedtls_des_setkey_enc",
        "dhm_check_range",
        "dhm_read_bignum",
        "mbedtls_dhm_calc_secret",
        "mbedtls_dhm_free",
        "mbedtls_dhm_init",
        "mbedtls_dhm_make_params",
        "mbedtls_dhm_make_public",
        "mbedtls_dhm_parse_dhm",
        "mbedtls_dhm_read_params",
        "mbedtls_dhm_read_public",
        "mbedtls_dhm_self_test",
        "mbedtls_ecdh_calc_secret",
        "mbedtls_ecdh_compute_shared",
        "mbedtls_ecdh_free",
        "mbedtls_ecdh_gen_public",
        "mbedtls_ecdh_get_params",
        "mbedtls_ecdh_init",
        "mbedtls_ecdh_make_params",
        "mbedtls_ecdh_make_public",
        "mbedtls_ecdh_read_params",
        "mbedtls_ecdh_read_public",
        "derive_mpi",
        "mbedtls_ecdsa_free",
        "mbedtls_ecdsa_from_keypair",
        "mbedtls_ecdsa_genkey",
        "mbedtls_ecdsa_init",
        "mbedtls_ecdsa_read_signature",
        "mbedtls_ecdsa_sign",
        "mbedtls_ecdsa_verify",
        "mbedtls_ecdsa_write_signature",
        "ecp_add_mixed",
        "ecp_double_jac",
        "ecp_modp",
        "ecp_mul_comb",
        "ecp_normalize_jac",
        "ecp_normalize_jac_many",
        "ecp_safe_invert_jac",
        "ecp_select_comb",
        "mbedtls_ecp_check_privkey",
        "mbedtls_ecp_check_pubkey",
        "mbedtls_ecp_check_pub_priv",
        "mbedtls_ecp_copy",
        "mbedtls_ecp_curve_info_from_grp_id",
        "mbedtls_ecp_curve_info_from_name",
        "mbedtls_ecp_curve_info_from_tls_id",
        "mbedtls_ecp_curve_list",
        "mbedtls_ecp_gen_key",
        "mbedtls_ecp_gen_keypair",
        "mbedtls_ecp_gen_keypair_base",
        "mbedtls_ecp_group_copy",
        "mbedtls_ecp_group_free",
        "mbedtls_ecp_group_init",
        "mbedtls_ecp_group_init.part.0",
        "mbedtls_ecp_grp_id_list",
        "mbedtls_ecp_is_zero",
        "mbedtls_ecp_keypair_free",
        "mbedtls_ecp_keypair_init",
        "mbedtls_ecp_mul",
        "mbedtls_ecp_muladd",
        "mbedtls_ecp_mul_shortcuts",
        "mbedtls_ecp_point_cmp",
        "mbedtls_ecp_point_free",
        "mbedtls_ecp_point_free.part.0",
        "mbedtls_ecp_point_init",
        "mbedtls_ecp_point_init.part.0",
        "mbedtls_ecp_point_read_binary",
        "mbedtls_ecp_point_read_string",
        "mbedtls_ecp_point_write_binary",
        "mbedtls_ecp_self_test",
        "mbedtls_ecp_set_zero",
        "mbedtls_ecp_tls_read_group",
        "mbedtls_ecp_tls_read_point",
        "mbedtls_ecp_tls_write_group",
        "mbedtls_ecp_tls_write_point",
        "ecp_mod_p192",
        "ecp_mod_p192k1",
        "ecp_mod_p224",
        "ecp_mod_p224k1",
        "ecp_mod_p255",
        "ecp_mod_p256",
        "ecp_mod_p256k1",
        "ecp_mod_p384",
        "ecp_mod_p521",
        "mbedtls_ecp_group_load",
        "entropy_dummy_source",
        "entropy_gather_internal.part.0",
        "entropy_update",
        "mbedtls_entropy_add_source",
        "mbedtls_entropy_free",
        "mbedtls_entropy_func",
        "mbedtls_entropy_gather",
        "mbedtls_entropy_init",
        "mbedtls_entropy_self_test",
        "mbedtls_entropy_source_self_test",
        "mbedtls_entropy_source_self_test_gather.constprop.0",
        "mbedtls_entropy_update_manual",
        "mbedtls_strerror",
        "gcm_mult",
        "mbedtls_gcm_auth_decrypt",
        "mbedtls_gcm_crypt_and_tag",
        "mbedtls_gcm_finish",
        "mbedtls_gcm_free",
        "mbedtls_gcm_init",
        "mbedtls_gcm_self_test",
        "mbedtls_gcm_setkey",
        "mbedtls_gcm_starts",
        "mbedtls_gcm_update",
        "hmac_drbg_self_test_entropy",
        "mbedtls_hmac_drbg_free",
        "mbedtls_hmac_drbg_free.part.0",
        "mbedtls_hmac_drbg_init",
        "mbedtls_hmac_drbg_random",
        "mbedtls_hmac_drbg_random_with_add",
        "mbedtls_hmac_drbg_reseed",
        "mbedtls_hmac_drbg_seed",
        "mbedtls_hmac_drbg_seed_buf",
        "mbedtls_hmac_drbg_self_test",
        "mbedtls_hmac_drbg_set_entropy_len",
        "mbedtls_hmac_drbg_set_prediction_resistance",
        "mbedtls_hmac_drbg_set_reseed_interval",
        "mbedtls_hmac_drbg_update",
        "mbedtls_md",
        "mbedtls_md_clone",
        "mbedtls_md_finish",
        "mbedtls_md_free",
        "mbedtls_md_get_name",
        "mbedtls_md_get_size",
        "mbedtls_md_get_type",
        "mbedtls_md_hmac",
        "mbedtls_md_hmac_finish",
        "mbedtls_md_hmac_reset",
        "mbedtls_md_hmac_starts",
        "mbedtls_md_hmac_update",
        "mbedtls_md_info_from_string",
        "mbedtls_md_info_from_type",
        "mbedtls_md_init",
        "mbedtls_md_init_ctx",
        "mbedtls_md_list",
        "mbedtls_md_process",
        "mbedtls_md_setup",
        "mbedtls_md_starts",
        "mbedtls_md_update",
        "mbedtls_md5",
        "mbedtls_md5_clone",
        "mbedtls_md5_finish",
        "mbedtls_md5_free",
        "mbedtls_md5_init",
        "mbedtls_md5_process",
        "mbedtls_md5_self_test",
        "mbedtls_md5_starts",
        "mbedtls_md5_update",
        "mbedtls_md5_update.part.0",
        "md5_clone_wrap",
        "md5_ctx_alloc",
        "md5_ctx_free",
        "md5_finish_wrap",
        "md5_process_wrap",
        "md5_starts_wrap",
        "md5_update_wrap",
        "ripemd160_clone_wrap",
        "ripemd160_ctx_alloc",
        "ripemd160_ctx_free",
        "ripemd160_finish_wrap",
        "ripemd160_process_wrap",
        "ripemd160_starts_wrap",
        "ripemd160_update_wrap",
        "sha1_clone_wrap",
        "sha1_ctx_alloc",
        "sha1_ctx_free",
        "sha1_finish_wrap",
        "sha1_process_wrap",
        "sha1_starts_wrap",
        "sha1_update_wrap",
        "sha224_clone_wrap",
        "sha224_ctx_alloc",
        "sha224_ctx_free",
        "sha224_finish_wrap",
        "sha224_process_wrap",
        "sha224_starts_wrap",
        "sha224_update_wrap",
        "sha224_wrap",
        "sha256_starts_wrap",
        "sha256_wrap",
        "sha384_clone_wrap",
        "sha384_ctx_alloc",
        "sha384_ctx_free",
        "sha384_finish_wrap",
        "sha384_process_wrap",
        "sha384_starts_wrap",
        "sha384_update_wrap",
        "sha384_wrap",
        "sha512_starts_wrap",
        "sha512_wrap",
        "mbedtls_oid_get_attr_short_name",
        "mbedtls_oid_get_cipher_alg",
        "mbedtls_oid_get_ec_grp",
        "mbedtls_oid_get_extended_key_usage",
        "mbedtls_oid_get_md_alg",
        "mbedtls_oid_get_numeric_string",
        "mbedtls_oid_get_oid_by_ec_grp",
        "mbedtls_oid_get_oid_by_md",
        "mbedtls_oid_get_oid_by_pk_alg",
        "mbedtls_oid_get_oid_by_sig_alg",
        "mbedtls_oid_get_pk_alg",
        "mbedtls_oid_get_pkcs12_pbe_alg",
        "mbedtls_oid_get_sig_alg",
        "mbedtls_oid_get_sig_alg_desc",
        "mbedtls_oid_get_x509_ext_type",
        "oid_sig_alg_from_asn1.part.0",
        "mbedtls_pem_free",
        "mbedtls_pem_init",
        "mbedtls_pem_read_buffer",
        "mbedtls_pem_write_buffer",
        "pem_aes_decrypt",
        "pem_des3_decrypt",
        "pem_get_iv",
        "pem_pbkdf1",
        "mbedtls_pk_can_do",
        "mbedtls_pk_check_pair",
        "mbedtls_pk_debug",
        "mbedtls_pk_decrypt",
        "mbedtls_pk_encrypt",
        "mbedtls_pk_free",
        "mbedtls_pk_get_bitlen",
        "mbedtls_pk_get_name",
        "mbedtls_pk_get_type",
        "mbedtls_pk_info_from_type",
        "mbedtls_pk_init",
        "mbedtls_pk_setup",
        "mbedtls_pk_setup_rsa_alt",
        "mbedtls_pk_sign",
        "mbedtls_pk_verify",
        "mbedtls_pk_verify_ext",
        "ecdsa_alloc_wrap",
        "ecdsa_can_do",
        "ecdsa_free_wrap",
        "ecdsa_sign_wrap",
        "ecdsa_verify_wrap",
        "eckey_alloc_wrap",
        "eckey_can_do",
        "eckey_check_pair",
        "eckey_debug",
        "eckeydh_can_do",
        "eckey_free_wrap",
        "eckey_get_bitlen",
        "eckey_sign_wrap",
        "eckey_verify_wrap",
        "rsa_alloc_wrap",
        "rsa_alt_alloc_wrap",
        "rsa_alt_can_do",
        "rsa_alt_check_pair",
        "rsa_alt_decrypt_wrap",
        "rsa_alt_free_wrap",
        "rsa_alt_get_bitlen",
        "rsa_alt_sign_wrap",
        "rsa_can_do",
        "rsa_check_pair_wrap",
        "rsa_debug",
        "rsa_decrypt_wrap",
        "rsa_encrypt_wrap",
        "rsa_free_wrap",
        "rsa_get_bitlen",
        "rsa_sign_wrap",
        "rsa_verify_wrap",
        "mbedtls_pkcs12_derivation",
        "mbedtls_pkcs12_pbe",
        "mbedtls_pkcs12_pbe_sha1_rc4_128",
        "pkcs12_pbe_derive_key_iv",
        "mbedtls_pkcs5_pbes2",
        "mbedtls_pkcs5_pbkdf2_hmac",
        "mbedtls_pkcs5_self_test",
        "mbedtls_pk_parse_key",
        "mbedtls_pk_parse_public_key",
        "mbedtls_pk_parse_subpubkey",
        "pk_get_pk_alg",
        "pk_parse_key_pkcs1_der",
        "pk_parse_key_pkcs8_encrypted_der",
        "pk_parse_key_pkcs8_unencrypted_der",
        "pk_parse_key_sec1_der",
        "pk_use_ecparams",
        "mbedtls_pk_write_key_der",
        "mbedtls_pk_write_key_pem",
        "mbedtls_pk_write_pubkey",
        "mbedtls_pk_write_pubkey_der",
        "mbedtls_pk_write_pubkey_pem",
        "pk_write_ec_param.isra.0",
        "pk_write_ec_pubkey",
        "mbedtls_platform_setup",
        "mbedtls_platform_teardown",
        "mbedtls_ripemd160",
        "mbedtls_ripemd160_clone",
        "mbedtls_ripemd160_finish",
        "mbedtls_ripemd160_free",
        "mbedtls_ripemd160_init",
        "mbedtls_ripemd160_process",
        "mbedtls_ripemd160_self_test",
        "mbedtls_ripemd160_starts",
        "mbedtls_ripemd160_update",
        "mbedtls_ripemd160_update.part.0",
        "mbedtls_rsa_check_privkey",
        "mbedtls_rsa_check_privkey.part.0",
        "mbedtls_rsa_check_pubkey",
        "mbedtls_rsa_check_pub_priv",
        "mbedtls_rsa_copy",
        "mbedtls_rsa_free",
        "mbedtls_rsa_gen_key",
        "mbedtls_rsa_init",
        "mbedtls_rsa_pkcs1_decrypt",
        "mbedtls_rsa_pkcs1_encrypt",
        "mbedtls_rsa_pkcs1_sign",
        "mbedtls_rsa_pkcs1_verify",
        "mbedtls_rsa_private",
        "mbedtls_rsa_public",
        "mbedtls_rsa_rsaes_oaep_decrypt",
        "mbedtls_rsa_rsaes_oaep_encrypt",
        "mbedtls_rsa_rsaes_pkcs1_v15_decrypt",
        "mbedtls_rsa_rsaes_pkcs1_v15_encrypt",
        "mbedtls_rsa_rsassa_pkcs1_v15_sign",
        "mbedtls_rsa_rsassa_pkcs1_v15_verify",
        "mbedtls_rsa_rsassa_pss_sign",
        "mbedtls_rsa_rsassa_pss_verify",
        "mbedtls_rsa_rsassa_pss_verify_ext",
        "mbedtls_rsa_set_padding",
        "mgf_mask",
        "mbedtls_sha1",
        "mbedtls_sha1_clone",
        "mbedtls_sha1_finish",
        "mbedtls_sha1_free",
        "mbedtls_sha1_free.part.0",
        "mbedtls_sha1_init",
        "mbedtls_sha1_process",
        "mbedtls_sha1_self_test",
        "mbedtls_sha1_starts",
        "mbedtls_sha1_update",
        "mbedtls_sha1_update.part.0",
        "mbedtls_sha256",
        "mbedtls_sha256_clone",
        "mbedtls_sha256_finish",
        "mbedtls_sha256_free",
        "mbedtls_sha256_free.part.0",
        "mbedtls_sha256_init",
        "mbedtls_sha256_process",
        "mbedtls_sha256_self_test",
        "mbedtls_sha256_starts",
        "mbedtls_sha256_update",
        "mbedtls_sha256_update.part.0",
        "mbedtls_sha512",
        "mbedtls_sha512_clone",
        "mbedtls_sha512_finish",
        "mbedtls_sha512_free",
        "mbedtls_sha512_free.part.0",
        "mbedtls_sha512_init",
        "mbedtls_sha512_process",
        "mbedtls_sha512_self_test",
        "mbedtls_sha512_starts",
        "mbedtls_sha512_update",
        "mbedtls_sha512_update.part.0",
        "mbedtls_ssl_ciphersuite_from_id",
        "mbedtls_ssl_ciphersuite_from_string",
        "mbedtls_ssl_ciphersuite_from_string.part.0",
        "mbedtls_ssl_ciphersuite_uses_ec",
        "mbedtls_ssl_ciphersuite_uses_psk",
        "mbedtls_ssl_get_ciphersuite_id",
        "mbedtls_ssl_get_ciphersuite_name",
        "mbedtls_ssl_get_ciphersuite_sig_alg",
        "mbedtls_ssl_get_ciphersuite_sig_pk_alg",
        "mbedtls_ssl_list_ciphersuites",
        "mbedtls_ssl_handshake_client_step",
        "ssl_check_server_ecdh_params",
        "ssl_parse_server_key_exchange",
        "ssl_write_client_hello",
        "ssl_write_encrypted_pms",
        "mbedtls_ssl_cookie_check",
        "mbedtls_ssl_cookie_free",
        "mbedtls_ssl_cookie_init",
        "mbedtls_ssl_cookie_set_timeout",
        "mbedtls_ssl_cookie_setup",
        "mbedtls_ssl_cookie_write",
        "ssl_cookie_hmac",
        "mbedtls_ssl_conf_dtls_cookies",
        "mbedtls_ssl_handshake_server_step",
        "mbedtls_ssl_set_client_transport_id",
        "ssl_parse_client_dh_public",
        "ssl_parse_client_hello",
        "ssl_parse_client_psk_identity",
        "ssl_parse_encrypted_pms",
        "ssl_write_server_key_exchange",
        "ssl_write_server_key_exchange.cold",
        "mbedtls_ssl_ticket_free",
        "mbedtls_ssl_ticket_init",
        "mbedtls_ssl_ticket_parse",
        "mbedtls_ssl_ticket_setup",
        "mbedtls_ssl_ticket_write",
        "ssl_ticket_gen_key",
        "mbedtls_ssl_check_cert_usage",
        "mbedtls_ssl_check_curve",
        "mbedtls_ssl_check_sig_hash",
        "mbedtls_ssl_close_notify",
        "mbedtls_ssl_conf_alpn_protocols",
        "mbedtls_ssl_conf_arc4_support",
        "mbedtls_ssl_conf_authmode",
        "mbedtls_ssl_conf_ca_chain",
        "mbedtls_ssl_conf_cbc_record_splitting",
        "mbedtls_ssl_conf_cert_profile",
        "mbedtls_ssl_conf_cert_req_ca_list",
        "mbedtls_ssl_conf_ciphersuites",
        "mbedtls_ssl_conf_ciphersuites_for_version",
        "mbedtls_ssl_conf_curves",
        "mbedtls_ssl_conf_dbg",
        "mbedtls_ssl_conf_dhm_min_bitlen",
        "mbedtls_ssl_conf_dh_param",
        "mbedtls_ssl_conf_dh_param_ctx",
        "mbedtls_ssl_conf_dtls_anti_replay",
        "mbedtls_ssl_conf_dtls_badmac_limit",
        "mbedtls_ssl_conf_encrypt_then_mac",
        "mbedtls_ssl_conf_endpoint",
        "mbedtls_ssl_conf_export_keys_cb",
        "mbedtls_ssl_conf_extended_master_secret",
        "mbedtls_ssl_conf_fallback",
        "mbedtls_ssl_conf_handshake_timeout",
        "mbedtls_ssl_config_defaults",
        "mbedtls_ssl_config_free",
        "mbedtls_ssl_config_init",
        "mbedtls_ssl_conf_legacy_renegotiation",
        "mbedtls_ssl_conf_max_frag_len",
        "mbedtls_ssl_conf_max_version",
        "mbedtls_ssl_conf_min_version",
        "mbedtls_ssl_conf_own_cert",
        "mbedtls_ssl_conf_psk",
        "mbedtls_ssl_conf_psk_cb",
        "mbedtls_ssl_conf_read_timeout",
        "mbedtls_ssl_conf_renegotiation",
        "mbedtls_ssl_conf_renegotiation_enforced",
        "mbedtls_ssl_conf_renegotiation_period",
        "mbedtls_ssl_conf_rng",
        "mbedtls_ssl_conf_session_cache",
        "mbedtls_ssl_conf_session_tickets",
        "mbedtls_ssl_conf_session_tickets_cb",
        "mbedtls_ssl_conf_sig_hashes",
        "mbedtls_ssl_conf_sni",
        "mbedtls_ssl_conf_transport",
        "mbedtls_ssl_conf_truncated_hmac",
        "mbedtls_ssl_conf_verify",
        "mbedtls_ssl_derive_keys",
        "mbedtls_ssl_dtls_replay_check",
        "mbedtls_ssl_dtls_replay_update",
        "mbedtls_ssl_fetch_input",
        "mbedtls_ssl_flush_output",
        "mbedtls_ssl_free",
        "mbedtls_ssl_get_alpn_protocol",
        "mbedtls_ssl_get_bytes_avail",
        "mbedtls_ssl_get_ciphersuite",
        "mbedtls_ssl_get_max_frag_len",
        "mbedtls_ssl_get_peer_cert",
        "mbedtls_ssl_get_record_expansion",
        "mbedtls_ssl_get_session",
        "mbedtls_ssl_get_verify_result",
        "mbedtls_ssl_get_version",
        "mbedtls_ssl_handle_message_type",
        "mbedtls_ssl_handshake",
        "mbedtls_ssl_handshake_free",
        "mbedtls_ssl_handshake_free.part.0",
        "mbedtls_ssl_handshake_step",
        "mbedtls_ssl_handshake_wrapup",
        "mbedtls_ssl_hash_from_md_alg",
        "mbedtls_ssl_init",
        "mbedtls_ssl_md_alg_from_hash",
        "mbedtls_ssl_optimize_checksum",
        "mbedtls_ssl_parse_certificate",
        "mbedtls_ssl_parse_change_cipher_spec",
        "mbedtls_ssl_parse_finished",
        "mbedtls_ssl_pk_alg_from_sig",
        "mbedtls_ssl_prepare_handshake_record",
        "mbedtls_ssl_psk_derive_premaster",
        "mbedtls_ssl_read",
        "mbedtls_ssl_read_record",
        "mbedtls_ssl_read_record_layer",
        "mbedtls_ssl_read_version",
        "mbedtls_ssl_recv_flight_completed",
        "mbedtls_ssl_renegotiate",
        "mbedtls_ssl_resend",
        "mbedtls_ssl_reset_checksum",
        "mbedtls_ssl_send_alert_message",
        "mbedtls_ssl_send_fatal_handshake_failure",
        "mbedtls_ssl_send_flight_completed",
        "mbedtls_ssl_session_free",
        "mbedtls_ssl_session_init",
        "mbedtls_ssl_session_reset",
        "mbedtls_ssl_set_bio",
        "mbedtls_ssl_set_calc_verify_md",
        "mbedtls_ssl_set_hostname",
        "mbedtls_ssl_set_hs_authmode",
        "mbedtls_ssl_set_hs_ca_chain",
        "mbedtls_ssl_set_hs_own_cert",
        "mbedtls_ssl_set_hs_psk",
        "mbedtls_ssl_set_session",
        "mbedtls_ssl_set_timer_cb",
        "mbedtls_ssl_setup",
        "mbedtls_ssl_sig_from_pk",
        "mbedtls_ssl_sig_from_pk_alg",
        "mbedtls_ssl_sig_hash_set_add",
        "mbedtls_ssl_sig_hash_set_const_hash",
        "mbedtls_ssl_sig_hash_set_find",
        "mbedtls_ssl_transform_free",
        "mbedtls_ssl_transform_free.part.0",
        "mbedtls_ssl_update_handshake_status",
        "mbedtls_ssl_write",
        "mbedtls_ssl_write_certificate",
        "mbedtls_ssl_write_change_cipher_spec",
        "mbedtls_ssl_write_finished",
        "mbedtls_ssl_write_record",
        "mbedtls_ssl_write_version",
        "ssl3_prf",
        "ssl_append_key_cert",
        "ssl_calc_finished_ssl",
        "ssl_calc_finished_tls",
        "ssl_calc_finished_tls_sha256",
        "ssl_calc_finished_tls_sha384",
        "ssl_calc_verify_ssl",
        "ssl_calc_verify_tls",
        "ssl_calc_verify_tls_sha256",
        "ssl_calc_verify_tls_sha384",
        "ssl_check_ctr_renegotiate",
        "ssl_check_timer",
        "ssl_cookie_check_dummy",
        "ssl_cookie_write_dummy",
        "ssl_flight_free",
        "ssl_handshake_init",
        "ssl_handshake_wrapup_free_hs_transform",
        "ssl_mac",
        "ssl_resend_hello_request",
        "ssl_session_copy",
        "ssl_session_reset_int",
        "ssl_set_timer.part.0",
        "ssl_start_renegotiation",
        "ssl_swap_epochs",
        "ssl_update_checksum_md5sha1",
        "ssl_update_checksum_sha256",
        "ssl_update_checksum_sha384",
        "ssl_update_checksum_start",
        "ssl_write_hello_request",
        "ssl_write_real",
        "tls1_prf",
        "tls_prf_generic",
        "tls_prf_sha256",
        "tls_prf_sha384",
        "mbedtls_version_get_number",
        "mbedtls_version_get_string",
        "mbedtls_version_get_string_full",
        "mbedtls_version_check_feature",
        "mbedtls_x509_dn_gets",
        "mbedtls_x509_get_alg",
        "mbedtls_x509_get_alg_null",
        "mbedtls_x509_get_ext",
        "mbedtls_x509_get_name",
        "mbedtls_x509_get_rsassa_pss_params",
        "mbedtls_x509_get_serial",
        "mbedtls_x509_get_sig",
        "mbedtls_x509_get_sig_alg",
        "mbedtls_x509_get_time",
        "mbedtls_x509_key_size_helper",
        "mbedtls_x509_self_test",
        "mbedtls_x509_serial_gets",
        "mbedtls_x509_sig_alg_gets",
        "mbedtls_x509_time_is_future",
        "mbedtls_x509_time_is_past",
        "mbedtls_x509_set_extension",
        "mbedtls_x509_string_to_names",
        "mbedtls_x509_write_extensions",
        "mbedtls_x509_write_names",
        "mbedtls_x509_write_sig",
        "mbedtls_x509_crl_free",
        "mbedtls_x509_crl_free.part.0",
        "mbedtls_x509_crl_info",
        "mbedtls_x509_crl_init",
        "mbedtls_x509_crl_parse",
        "mbedtls_x509_crl_parse_der",
        "mbedtls_x509_crt_check_extended_key_usage",
        "mbedtls_x509_crt_check_key_usage",
        "mbedtls_x509_crt_check_key_usage.part.0",
        "mbedtls_x509_crt_free",
        "mbedtls_x509_crt_free.part.0",
        "mbedtls_x509_crt_info",
        "mbedtls_x509_crt_init",
        "mbedtls_x509_crt_is_revoked",
        "mbedtls_x509_crt_parse",
        "mbedtls_x509_crt_parse_der",
        "mbedtls_x509_crt_parse_der.part.0",
        "mbedtls_x509_crt_verify",
        "mbedtls_x509_crt_verify_info",
        "mbedtls_x509_crt_verify_with_profile",
        "x509_check_wildcard.isra.0",
        "x509_crt_check_parent",
        "x509_crt_verify_child",
        "x509_crt_verifycrl.part.0",
        "x509_crt_verify_top",
        "x509_name_cmp",
        "x509_profile_check_key.isra.0",
        "mbedtls_x509_csr_free",
        "mbedtls_x509_csr_free.part.0",
        "mbedtls_x509_csr_info",
        "mbedtls_x509_csr_init",
        "mbedtls_x509_csr_parse",
        "mbedtls_x509_csr_parse_der",
        "mbedtls_x509write_crt_der",
        "mbedtls_x509write_crt_free",
        "mbedtls_x509write_crt_init",
        "mbedtls_x509write_crt_pem",
        "mbedtls_x509write_crt_set_authority_key_identifier",
        "mbedtls_x509write_crt_set_basic_constraints",
        "mbedtls_x509write_crt_set_extension",
        "mbedtls_x509write_crt_set_issuer_key",
        "mbedtls_x509write_crt_set_issuer_name",
        "mbedtls_x509write_crt_set_key_usage",
        "mbedtls_x509write_crt_set_md_alg",
        "mbedtls_x509write_crt_set_ns_cert_type",
        "mbedtls_x509write_crt_set_serial",
        "mbedtls_x509write_crt_set_subject_key",
        "mbedtls_x509write_crt_set_subject_key_identifier",
        "mbedtls_x509write_crt_set_subject_name",
        "mbedtls_x509write_crt_set_validity",
        "mbedtls_x509write_crt_set_version",
        "x509_write_time.constprop.0",
        "mbedtls_x509write_csr_der",
        "mbedtls_x509write_csr_free",
        "mbedtls_x509write_csr_init",
        "mbedtls_x509write_csr_pem",
        "mbedtls_x509write_csr_set_extension",
        "mbedtls_x509write_csr_set_key",
        "mbedtls_x509write_csr_set_key_usage",
        "mbedtls_x509write_csr_set_md_alg",
        "mbedtls_x509write_csr_set_ns_cert_type",
        "mbedtls_x509write_csr_set_subject_name",
        "mbedtls_xtea_crypt_cbc",
        "mbedtls_xtea_crypt_ecb",
        "mbedtls_xtea_free",
        "mbedtls_xtea_init",
        "mbedtls_xtea_self_test",
        "mbedtls_xtea_setup",
        "ocall_mbedtls_net_accept",
        "ocall_mbedtls_net_bind",
        "ocall_mbedtls_net_connect",
        "ocall_mbedtls_net_free",
        "ocall_mbedtls_net_recv",
        "ocall_mbedtls_net_recv_timeout",
        "ocall_mbedtls_net_send",
        "ocall_mbedtls_net_set_block",
        "ocall_mbedtls_net_set_nonblock",
        "ocall_mbedtls_net_usleep",
        "ocall_print_string",
        "sgx_dummy",
        "mbedtls_hardware_poll",
        "mbedtls_sgx_drbg_random",
        "printf_sgx",
        "dummy",
        "hprintf.constprop.0",
        "mbedtls_net_accept_ocall",
        "mbedtls_net_bind_ocall",
        "mbedtls_net_connect_ocall",
        "mbedtls_net_free_ocall",
        "mbedtls_net_init_ocall",
        "mbedtls_net_recv_ocall",
        "mbedtls_net_recv_timeout_ocall",
        "mbedtls_net_send_ocall",
        "mbedtls_net_set_block_ocall",
        "mbedtls_net_set_nonblock_ocall",
        "mbedtls_net_usleep_ocall"
    ]
}