{
    "enclave_t.o": [
        "ocall_alpn_select_cb",
        "ocall_bio_create",
        "ocall_bio_ctrl",
        "ocall_bio_destroy",
        "ocall_bio_read",
        "ocall_bio_write",
        "ocall_calloc",
        "ocall_close",
        "ocall_crypto_ex_free_cb",
        "ocall_crypto_set_id_cb",
        "ocall_crypto_set_locking_cb",
        "ocall_execute_ssl_ctx_info_callback",
        "ocall_exit",
        "ocall_fclose",
        "ocall_fcntl",
        "ocall_fflush",
        "ocall_fgets",
        "ocall_fopen",
        "ocall_free",
        "ocall_fstat",
        "ocall_fsync",
        "ocall_ftruncate",
        "ocall_fwrite",
        "ocall_fwrite_copy",
        "ocall_get_cpuid_for_openssl",
        "ocall_getcwd",
        "ocall__getpagesize",
        "ocall_getpid",
        "ocall_get_session_cb",
        "ocall_gettimeofday",
        "ocall_getuid",
        "ocall_lseek",
        "ocall_lstat",
        "ocall_malloc",
        "ocall_mmap",
        "ocall_nanosleep",
        "ocall_new_session_callback",
        "ocall_next_protos_advertised_cb",
        "ocall_open",
        "ocall_open64",
        "ocall_pem_password_cb",
        "ocall_println_string",
        "ocall_print_string",
        "ocall_read",
        "ocall_realloc",
        "ocall_remove_session_cb",
        "ocall_sgx_thread_sleep",
        "ocall_sgx_thread_wake_up",
        "ocall_sk_pop_free_cb",
        "ocall_ssl_ctx_callback_ctrl",
        "ocall_ssl_ctx_set_next_proto_select_cb",
        "ocall_SSL_CTX_set_tmp_dh_cb",
        "ocall_stat",
        "ocall_time",
        "ocall_unlink",
        "ocall_write",
        "sgx_ecall_ASN1_INTEGER_to_BN",
        "sgx_ecall_BASIC_CONSTRAINTS_free",
        "sgx_ecall_BIO_ctrl",
        "sgx_ecall_BIO_free",
        "sgx_ecall_BIO_int_ctrl",
        "sgx_ecall_BIO_new",
        "sgx_ecall_BIO_new_file",
        "sgx_ecall_BIO_s_file",
        "sgx_ecall_BN_bin2bn",
        "sgx_ecall_BN_clear_bit",
        "sgx_ecall_BN_dec2bn",
        "sgx_ecall_BN_dup",
        "sgx_ecall_BN_free",
        "sgx_ecall_BN_is_bit_set",
        "sgx_ecall_BN_is_zero",
        "sgx_ecall_BN_new",
        "sgx_ecall_BN_num_bits",
        "sgx_ecall_BN_set_word",
        "sgx_ecall_BN_to_ASN1_INTEGER",
        "sgx_ecall_CONF_modules_unload",
        "sgx_ecall_CRYPTO_add_lock",
        "sgx_ecall_CRYPTO_set_dynlock_create_callback",
        "sgx_ecall_CRYPTO_set_dynlock_destroy_callback",
        "sgx_ecall_CRYPTO_set_dynlock_lock_callback",
        "sgx_ecall_CRYPTO_set_id_callback",
        "sgx_ecall_CRYPTO_set_locking_callback",
        "sgx_ecall_d2i_SSL_SESSION",
        "sgx_ecall_DH_free",
        "sgx_ecall_DH_new",
        "sgx_ecall_EC_GROUP_free",
        "sgx_ecall_EC_KEY_free",
        "sgx_ecall_EC_KEY_new_by_curve_name",
        "sgx_ecall_ENGINE_get_id",
        "sgx_ecall_ENGINE_get_name",
        "sgx_ecall_ENGINE_load_builtin_engines",
        "sgx_ecall_ERR_clear_error",
        "sgx_ecall_ERR_error_string",
        "sgx_ecall_ERR_error_string_n",
        "sgx_ecall_ERR_free_strings",
        "sgx_ecall_ERR_get_error",
        "sgx_ecall_ERR_load_crypto_strings",
        "sgx_ecall_ERR_peek_error",
        "sgx_ecall_ERR_peek_error_line_data",
        "sgx_ecall_ERR_peek_last_error",
        "sgx_ecall_ERR_remove_state",
        "sgx_ecall_EVP_cleanup",
        "sgx_ecall_EVP_DigestFinal_ex",
        "sgx_ecall_EVP_DigestInit_ex",
        "sgx_ecall_EVP_DigestUpdate",
        "sgx_ecall_EVP_get_digestbyname",
        "sgx_ecall_EVP_MD_CTX_create",
        "sgx_ecall_EVP_MD_CTX_destroy",
        "sgx_ecall_EVP_MD_type",
        "sgx_ecall_EVP_PKEY_bits",
        "sgx_ecall_EVP_PKEY_free",
        "sgx_ecall_EVP_PKEY_type",
        "sgx_ecall_EVP_sha1",
        "sgx_ecall_GENERAL_NAME_free",
        "sgx_ecall_i2d_SSL_SESSION",
        "sgx_ecall_MD5_Final",
        "sgx_ecall_MD5_Init",
        "sgx_ecall_MD5_Update",
        "sgx_ecall_OBJ_create",
        "sgx_ecall_OBJ_nid2sn",
        "sgx_ecall_OBJ_obj2nid",
        "sgx_ecall_OBJ_sn2nid",
        "sgx_ecall_OBJ_txt2nid",
        "sgx_ecall_OPENSSL_add_all_algorithms_noconf",
        "sgx_ecall_OPENSSL_config",
        "sgx_ecall_OPENSSL_load_builtin_modules",
        "sgx_ecall_PEM_ASN1_write",
        "sgx_ecall_PEM_read_bio_DHparams",
        "sgx_ecall_PEM_read_bio_ECPKParameters",
        "sgx_ecall_PEM_read_bio_PrivateKey",
        "sgx_ecall_PEM_read_bio_X509",
        "sgx_ecall_PEM_read_bio_X509_AUX",
        "sgx_ecall_sk_new_null",
        "sgx_ecall_sk_num",
        "sgx_ecall_sk_pop_free",
        "sgx_ecall_sk_value",
        "sgx_ecall_ssl3_get_cipher_name_by_char",
        "sgx_ecall_SSL_accept",
        "sgx_ecall_SSL_CIPHER_description",
        "sgx_ecall_SSL_CIPHER_get_name",
        "sgx_ecall_SSL_connect",
        "sgx_ecall_SSL_ctrl",
        "sgx_ecall_SSL_CTX_callback_ctrl",
        "sgx_ecall_SSL_CTX_check_private_key",
        "sgx_ecall_SSL_CTX_ctrl",
        "sgx_ecall_SSL_CTX_free",
        "sgx_ecall_SSL_CTX_get_cert_store",
        "sgx_ecall_SSL_CTX_get_client_CA_list",
        "sgx_ecall_SSL_CTX_get_ex_data",
        "sgx_ecall_SSL_CTX_get_ex_new_index",
        "sgx_ecall_SSL_CTX_get_timeout",
        "sgx_ecall_SSL_CTX_get_verify_callback",
        "sgx_ecall_SSL_CTX_get_verify_mode",
        "sgx_ecall_SSL_CTX_new",
        "sgx_ecall_SSL_CTX_sess_set_get_cb",
        "sgx_ecall_SSL_CTX_sess_set_new_cb",
        "sgx_ecall_SSL_CTX_sess_set_remove_cb",
        "sgx_ecall_SSL_CTX_set_alpn_select_cb",
        "sgx_ecall_SSL_CTX_set_cert_verify_callback",
        "sgx_ecall_SSL_CTX_set_cipher_list",
        "sgx_ecall_SSL_CTX_set_default_passwd_cb",
        "sgx_ecall_SSL_CTX_set_default_verify_paths",
        "sgx_ecall_SSL_CTX_set_ex_data",
        "sgx_ecall_SSL_CTX_set_info_callback",
        "sgx_ecall_SSL_CTX_set_next_protos_advertised_cb",
        "sgx_ecall_SSL_CTX_set_next_proto_select_cb",
        "sgx_ecall_SSL_CTX_set_session_id_context",
        "sgx_ecall_SSL_CTX_set_timeout",
        "sgx_ecall_SSL_CTX_set_tmp_dh_callback",
        "sgx_ecall_SSL_CTX_set_tmp_rsa_callback",
        "sgx_ecall_SSL_CTX_set_verify",
        "sgx_ecall_SSL_CTX_set_verify_depth",
        "sgx_ecall_SSL_CTX_use_certificate",
        "sgx_ecall_SSL_CTX_use_certificate_chain_file",
        "sgx_ecall_SSL_CTX_use_certificate_file",
        "sgx_ecall_SSL_CTX_use_PrivateKey",
        "sgx_ecall_SSL_CTX_use_PrivateKey_file",
        "sgx_ecall_SSL_do_handshake",
        "sgx_ecall_SSLeay_version",
        "sgx_ecall_SSL_free",
        "sgx_ecall_SSL_get_certificate",
        "sgx_ecall_SSL_get_ciphers",
        "sgx_ecall_SSL_get_current_cipher",
        "sgx_ecall_SSL_get_error",
        "sgx_ecall_SSL_get_ex_new_index",
        "sgx_ecall_SSL_get_peer_certificate",
        "sgx_ecall_SSL_get_privatekey",
        "sgx_ecall_SSL_get_rbio",
        "sgx_ecall_SSL_get_servername",
        "sgx_ecall_SSL_get_shutdown",
        "sgx_ecall_SSL_get_SSL_CTX",
        "sgx_ecall_SSL_get_verify_mode",
        "sgx_ecall_SSL_get_verify_result",
        "sgx_ecall_SSL_get_version_as_int",
        "sgx_ecall_SSL_get_wbio",
        "sgx_ecall_SSL_library_init",
        "sgx_ecall_SSL_load_error_strings",
        "sgx_ecall_SSL_new",
        "sgx_ecall_SSL_pending",
        "sgx_ecall_SSL_read",
        "sgx_ecall_SSL_select_next_proto",
        "sgx_ecall_SSL_SESSION_get_id",
        "sgx_ecall_SSL_SESSION_set_timeout",
        "sgx_ecall_SSL_set_accept_state",
        "sgx_ecall_SSL_set_alpn_protos",
        "sgx_ecall_SSL_set_bio",
        "sgx_ecall_SSL_set_cipher_list",
        "sgx_ecall_SSL_set_connect_state",
        "sgx_ecall_SSL_set_fd",
        "sgx_ecall_SSL_set_info_callback",
        "sgx_ecall_SSL_set_quiet_shutdown",
        "sgx_ecall_SSL_set_session_id_context",
        "sgx_ecall_SSL_set_shutdown",
        "sgx_ecall_SSL_set_SSL_CTX",
        "sgx_ecall_SSL_set_verify",
        "sgx_ecall_SSL_set_verify_result",
        "sgx_ecall_SSL_shutdown",
        "sgx_ecall_SSL_state",
        "sgx_ecall_SSL_state_string_long",
        "sgx_ecall_SSL_use_certificate",
        "sgx_ecall_SSL_use_PrivateKey",
        "sgx_ecall_SSLv23_client_method",
        "sgx_ecall_SSLv23_method",
        "sgx_ecall_SSLv23_server_method",
        "sgx_ecall_SSL_write",
        "sgx_ecall_start_sgx_thread",
        "sgx_ecall_tls_processing_module_init",
        "sgx_ecall_X509_add_ext",
        "sgx_ecall_X509_alias_get0",
        "sgx_ecall_X509_BC_get_pathlen",
        "sgx_ecall_X509_check_issued",
        "sgx_ecall_X509_check_private_key",
        "sgx_ecall_X509_digest",
        "sgx_ecall_X509_free",
        "sgx_ecall_X509_get_algorithm",
        "sgx_ecall_X509_get_cert_key_algor_algorithm",
        "sgx_ecall_X509_get_ex_data",
        "sgx_ecall_X509_get_ex_new_index",
        "sgx_ecall_X509_get_ext",
        "sgx_ecall_X509_get_ext_by_NID",
        "sgx_ecall_X509_get_ext_d2i",
        "sgx_ecall_X509_get_notAfter",
        "sgx_ecall_X509_get_notBefore",
        "sgx_ecall_X509_get_serialNumber",
        "sgx_ecall_X509_get_subject_name",
        "sgx_ecall_X509_NAME_add_entry_by_NID",
        "sgx_ecall_X509_NAME_delete_entry",
        "sgx_ecall_X509_NAME_ENTRY_free",
        "sgx_ecall_X509_NAME_ENTRY_get_data",
        "sgx_ecall_X509_NAME_get_entry",
        "sgx_ecall_X509_NAME_get_index_by_NID",
        "sgx_ecall_X509_NAME_get_text_by_NID",
        "sgx_ecall_X509_NAME_oneline",
        "sgx_ecall_X509_new",
        "sgx_ecall_X509_pubkey_digest",
        "sgx_ecall_X509_set_ex_data",
        "sgx_ecall_X509_set_issuer_name",
        "sgx_ecall_X509_set_notAfter",
        "sgx_ecall_X509_set_notBefore",
        "sgx_ecall_X509_set_pubkey",
        "sgx_ecall_X509_set_subject_name",
        "sgx_ecall_X509_set_version",
        "sgx_ecall_X509_sign",
        "sgx_oc_cpuidex",
        "sgx_thread_set_multiple_untrusted_events_ocall",
        "sgx_thread_set_untrusted_event_ocall",
        "sgx_thread_setwait_untrusted_events_ocall",
        "sgx_thread_wait_untrusted_event_ocall"
    ],
    "enclaveshim_ocalls.o": [
        "accept",
        "access",
        "asprintf",
        "__assert_fail",
        "bind",
        "bio_alloc_from_pool",
        "bio_dealloc_from_pool",
        "clock_gettime",
        "close",
        "closedir",
        "closelog",
        "connect",
        "__ctype_b_loc",
        "__ctype_tolower_loc",
        "dl_iterate_phdr",
        "execute_async_bio_ctrl",
        "execute_async_bio_destroy",
        "execute_async_bio_read",
        "execute_async_bio_write",
        "execute_async_ocall_free",
        "execute_async_ocall_malloc",
        "execute_bio_ocall_free",
        "execute_bio_ocall_malloc",
        "exit",
        "fchmod",
        "fchown",
        "fclose",
        "fcntl",
        "fdopen",
        "feof",
        "ferror",
        "fflush",
        "fgets",
        "fileno",
        "fopen",
        "fopen64",
        "fprintf",
        "fputc",
        "fputs",
        "fread",
        "freeaddrinfo",
        "fseek",
        "fstatfs",
        "fstatvfs",
        "fsync",
        "ftell",
        "fwrite",
        "getaddrinfo",
        "getauxval",
        "get_bio_mempool",
        "get_cpuid_for_openssl",
        "getcwd",
        "getenv",
        "geteuid",
        "gethostbyname",
        "getnameinfo",
        "getpeername",
        "getpgid",
        "getpid",
        "getppid",
        "getpriority",
        "getrusage",
        "getsid",
        "getsockname",
        "getsockopt",
        "gettimeofday",
        "gmtime",
        "gmtime_r",
        "inet_pton",
        "ioctl",
        "__isoc99_sscanf",
        "listen",
        "localtime",
        "lseek",
        "lseek64",
        "make_asynchronous_ocall",
        "mkdir",
        "mmap",
        "mmap64",
        "mremap",
        "munmap",
        "my_asprintf",
        "my_fprintf",
        "my_fstat",
        "my_ftruncate",
        "my_lstat",
        "my_printf",
        "my_stat",
        "my_strdup",
        "my_strndup",
        "my_vasprintf",
        "my_vfprintf",
        "my_vprintf",
        "nanosleep",
        "ocall_alpn_select_cb_async_wrapper",
        "ocall_init_async_ocalls",
        "ocall_SSL_CTX_set_tmp_dh_cb_wrapper",
        "open",
        "open64",
        "opendir",
        "openlog",
        "perror",
        "print_error_message",
        "printf",
        "puts",
        "raise",
        "read",
        "readdir",
        "readlink",
        "recvfrom",
        "rmdir",
        "sendto",
        "setsockopt",
        "shutdown",
        "sigaction",
        "signal",
        "sigpending",
        "sigprocmask",
        "sleep",
        "socket",
        "sprintf",
        "ssl_ctx_set_next_proto_select_async_cb_wrapper",
        "statfs",
        "statvfs",
        "syscall",
        "syslog",
        "tcgetattr",
        "tcsetattr",
        "time",
        "timegm",
        "unlink",
        "utimes",
        "write",
        "__xstat"
    ],
    "tls_processing_interface.o": [
        "ecall_tls_processing_module_init",
        "hprintf.constprop.0",
        "tls_processing_free_connection",
        "tls_processing_new_connection",
        "tls_processing_register_free_connection_cb",
        "tls_processing_register_new_connection_cb",
        "tls_processing_register_set_ssl_type_cb",
        "tls_processing_register_ssl_read_processing_cb",
        "tls_processing_register_ssl_write_processing_cb",
        "tls_processing_set_ssl_type",
        "tls_processing_ssl_read",
        "tls_processing_ssl_write"
    ],
    "ecall_queue.o": [
        "delmpmc",
        "mpmc_dequeue",
        "mpmc_dequeue_result",
        "mpmc_enqueue",
        "mpmc_enqueue_result",
        "mpmc_get_msg_at_slot",
        "mpmc_pause",
        "mpmc_slot_taken",
        "mpmc_wait_for_enqueue",
        "mpmc_wait_for_result",
        "newmpmc"
    ],
    "mpmc_queue.o": [
        "mpmc_queue_dequeue",
        "mpmc_queue_enqueue",
        "mpmc_queue_new"
    ],
    "lthread.o": [
        "_exec",
        "__initschedqueue",
        "lthread_cancel",
        "lthread_cond_broadcast",
        "lthread_cond_create",
        "lthread_cond_signal",
        "lthread_cond_wait",
        "lthread_create",
        "lthread_current",
        "lthread_detach",
        "lthread_detach2",
        "lthread_exit",
        "_lthread_free",
        "lthread_get_data",
        "lthread_get_task_args",
        "lthread_id",
        "lthread_init",
        "lthread_join",
        "_lthread_key_destructor",
        "lthread_print_timestamp",
        "_lthread_renice",
        "_lthread_resume",
        "lthread_self",
        "lthread_set_data",
        "lthread_set_funcname",
        "lthread_sleep",
        "lthread_tls_current",
        "lthread_wakeup",
        "_lthread_yield",
        "lthread_yield",
        "pthread_getspecific",
        "pthread_key_create",
        "pthread_key_delete",
        "pthread_setspecific",
        "sched_create",
        "_sched_free",
        "__switch",
        "_switch",
        "trampoline__getpagesize"
    ],
    "lthread_sched.o": [
        "_lthread_cancel_event",
        "_lthread_desched_event",
        "_lthread_desched_sleep",
        "lthread_rb_sleep_RB_FIND",
        "lthread_rb_sleep_RB_INSERT",
        "lthread_rb_sleep_RB_INSERT_COLOR",
        "lthread_rb_sleep_RB_MINMAX",
        "lthread_rb_sleep_RB_NEXT",
        "lthread_rb_sleep_RB_NFIND",
        "lthread_rb_sleep_RB_PREV",
        "lthread_rb_sleep_RB_REMOVE",
        "lthread_rb_sleep_RB_REMOVE_COLOR",
        "lthread_rb_wait_RB_FIND",
        "lthread_rb_wait_RB_INSERT",
        "lthread_rb_wait_RB_INSERT_COLOR",
        "lthread_rb_wait_RB_MINMAX",
        "lthread_rb_wait_RB_NEXT",
        "lthread_rb_wait_RB_NFIND",
        "lthread_rb_wait_RB_PREV",
        "lthread_rb_wait_RB_REMOVE",
        "lthread_rb_wait_RB_REMOVE_COLOR",
        "lthread_run",
        "_lthread_sched_busy_sleep",
        "_lthread_sched_event",
        "_lthread_sched_sleep"
    ],
    "mempool.o": [
        "AddrFromIndex",
        "create_pool",
        "destroy_pool",
        "IndexFromAddr",
        "pool_alloc",
        "pool_dealloc"
    ],
    "aes/aes-elf-x86_64.o": [
        "AES_cbc_encrypt",
        "AES_decrypt",
        "AES_encrypt",
        "AES_set_decrypt_key",
        "AES_set_encrypt_key",
        "asm_AES_cbc_encrypt",
        "asm_AES_decrypt",
        "asm_AES_encrypt",
        "_x86_64_AES_decrypt",
        "_x86_64_AES_decrypt_compact",
        "_x86_64_AES_encrypt",
        "_x86_64_AES_encrypt_compact",
        "_x86_64_AES_set_encrypt_key"
    ],
    "aes/bsaes-elf-x86_64.o": [
        "bsaes_cbc_encrypt",
        "_bsaes_const",
        "bsaes_ctr32_encrypt_blocks",
        "_bsaes_decrypt8",
        "_bsaes_encrypt8",
        "_bsaes_encrypt8_bitslice",
        "_bsaes_key_convert",
        "bsaes_xts_decrypt",
        "bsaes_xts_encrypt"
    ],
    "aes/vpaes-elf-x86_64.o": [
        "vpaes_cbc_encrypt",
        "_vpaes_consts",
        "vpaes_decrypt",
        "_vpaes_decrypt_core",
        "vpaes_encrypt",
        "_vpaes_encrypt_core",
        "_vpaes_preheat",
        "_vpaes_schedule_192_smear",
        "_vpaes_schedule_core",
        "_vpaes_schedule_low_round",
        "_vpaes_schedule_mangle",
        "_vpaes_schedule_round",
        "_vpaes_schedule_transform",
        "vpaes_set_decrypt_key",
        "vpaes_set_encrypt_key"
    ],
    "aes/aesni-elf-x86_64.o": [
        "aesni_cbc_encrypt",
        "aesni_ccm64_decrypt_blocks",
        "aesni_ccm64_encrypt_blocks",
        "aesni_ctr32_encrypt_blocks",
        "aesni_decrypt",
        "_aesni_decrypt3",
        "_aesni_decrypt4",
        "_aesni_decrypt6",
        "_aesni_decrypt8",
        "aesni_ecb_encrypt",
        "aesni_encrypt",
        "_aesni_encrypt3",
        "_aesni_encrypt4",
        "_aesni_encrypt6",
        "_aesni_encrypt8",
        "aesni_set_decrypt_key",
        "__aesni_set_encrypt_key",
        "aesni_set_encrypt_key",
        "aesni_xts_decrypt",
        "aesni_xts_encrypt"
    ],
    "aes/aesni-sha1-elf-x86_64.o": [
        "aesni_cbc_sha1_enc",
        "aesni_cbc_sha1_enc_ssse3",
        "K_XX_XX"
    ],
    "bn/modexp512-elf-x86_64.o": [
        "end_main_loop_a3b",
        "init_loop",
        "loop_0",
        "loop_1",
        "loop_2",
        "loop_3",
        "main_loop_a3b",
        "mod_exp_512",
        "mont_mul_a3b",
        "mont_reduce",
        "MULADD_128x512",
        "sqr_2",
        "sqr_reduce"
    ],
    "bn/mont-elf-x86_64.o": [
        "bn_mul4x_mont",
        "bn_mul_mont",
        "bn_sqr4x_mont"
    ],
    "bn/mont5-elf-x86_64.o": [
        "bn_gather5",
        "bn_mul4x_mont_gather5",
        "bn_mul_mont_gather5",
        "bn_scatter5"
    ],
    "bn/gf2m-elf-x86_64.o": [
        "bn_GF2m_mul_2x2",
        "_mul_1x1"
    ],
    "camellia/cmll-elf-x86_64.o": [
        "Camellia_cbc_encrypt",
        "Camellia_DecryptBlock",
        "Camellia_DecryptBlock_Rounds",
        "Camellia_Ekeygen",
        "Camellia_EncryptBlock",
        "Camellia_EncryptBlock_Rounds",
        "_x86_64_Camellia_decrypt",
        "_x86_64_Camellia_encrypt"
    ],
    "md5/md5-elf-x86_64.o": [
        "md5_block_asm_data_order"
    ],
    "modes/ghash-elf-x86_64.o": [
        "gcm_ghash_4bit",
        "gcm_ghash_clmul",
        "gcm_gmult_4bit",
        "gcm_gmult_clmul",
        "gcm_init_clmul"
    ],
    "rc4/rc4-elf-x86_64.o": [
        "RC4",
        "RC4_options",
        "RC4_set_key"
    ],
    "rc4/rc4-md5-elf-x86_64.o": [
        "rc4_md5_enc"
    ],
    "sha/sha1-elf-x86_64.o": [
        "K_XX_XX",
        "sha1_block_data_order",
        "sha1_block_data_order_ssse3",
        "_ssse3_shortcut"
    ],
    "whrlpool/wp-elf-x86_64.o": [
        "whirlpool_block"
    ],
    "sha/sha256-elf-x86_64.o": [
        "K256",
        "sha256_block_data_order"
    ],
    "sha/sha512-elf-x86_64.o": [
        "K512",
        "sha512_block_data_order"
    ],
    "cpuid-elf-x86_64.o": [
        "OPENSSL_atomic_add",
        "OPENSSL_ia32_cpuid",
        "OPENSSL_wipe_cpu"
    ],
    "cpt_err.o": [
        "ERR_load_CRYPTO_strings"
    ],
    "cryptlib.o": [
        "CRYPTO_add_lock",
        "CRYPTO_destroy_dynlockid",
        "CRYPTO_get_add_lock_callback",
        "CRYPTO_get_dynlock_create_callback",
        "CRYPTO_get_dynlock_destroy_callback",
        "CRYPTO_get_dynlock_lock_callback",
        "CRYPTO_get_dynlock_value",
        "CRYPTO_get_id_callback",
        "CRYPTO_get_locking_callback",
        "CRYPTO_get_lock_name",
        "CRYPTO_get_new_dynlockid",
        "CRYPTO_get_new_lockid",
        "CRYPTO_lock",
        "CRYPTO_memcmp",
        "CRYPTO_num_locks",
        "CRYPTO_set_add_lock_callback",
        "CRYPTO_set_dynlock_create_callback",
        "crypto_set_dynlock_create_fake_cb",
        "CRYPTO_set_dynlock_destroy_callback",
        "crypto_set_dynlock_destroy_fake_cb",
        "CRYPTO_set_dynlock_lock_callback",
        "crypto_set_dynlock_lock_fake_cb",
        "CRYPTO_set_id_callback",
        "crypto_set_id_fake_cb",
        "CRYPTO_set_locking_callback",
        "crypto_set_locking_fake_cb",
        "CRYPTO_thread_id",
        "CRYPTO_THREADID_cmp",
        "CRYPTO_THREADID_cpy",
        "CRYPTO_THREADID_current",
        "CRYPTO_THREADID_get_callback",
        "CRYPTO_THREADID_hash",
        "CRYPTO_THREADID_set_callback",
        "CRYPTO_THREADID_set_numeric",
        "CRYPTO_THREADID_set_pointer",
        "ecall_CRYPTO_add_lock",
        "ecall_CRYPTO_set_dynlock_create_callback",
        "ecall_CRYPTO_set_dynlock_destroy_callback",
        "ecall_CRYPTO_set_dynlock_lock_callback",
        "ecall_CRYPTO_set_id_callback",
        "ecall_CRYPTO_set_locking_callback",
        "hprintf.constprop.0",
        "OPENSSL_cpu_caps",
        "OPENSSL_cpuid_setup",
        "OpenSSLDie",
        "OPENSSL_showfatal.constprop.0"
    ],
    "cversion.o": [
        "ecall_SSLeay_version",
        "hprintf.constprop.0",
        "SSLeay",
        "SSLeay_version"
    ],
    "ex_data.o": [
        "CRYPTO_cleanup_all_ex_data",
        "CRYPTO_dup_ex_data",
        "CRYPTO_ex_data_new_class",
        "CRYPTO_free_ex_data",
        "CRYPTO_get_ex_data",
        "CRYPTO_get_ex_data_implementation",
        "CRYPTO_get_ex_new_index",
        "CRYPTO_new_ex_data",
        "CRYPTO_set_ex_data",
        "CRYPTO_set_ex_data_implementation",
        "def_cleanup_cb",
        "def_cleanup_util_cb",
        "def_get_class",
        "ex_class_item_LHASH_COMP",
        "ex_class_item_LHASH_HASH",
        "ex_data_check",
        "impl_check",
        "int_cleanup",
        "int_dup_ex_data",
        "int_free_ex_data",
        "int_get_new_index",
        "int_new_class",
        "int_new_ex_data"
    ],
    "malloc-wrapper.o": [
        "CRYPTO_free",
        "CRYPTO_free_locked",
        "CRYPTO_get_locked_mem_ex_functions",
        "CRYPTO_get_locked_mem_functions",
        "CRYPTO_get_mem_debug_functions",
        "CRYPTO_get_mem_debug_options",
        "CRYPTO_get_mem_ex_functions",
        "CRYPTO_get_mem_functions",
        "CRYPTO_malloc",
        "CRYPTO_malloc_locked",
        "CRYPTO_realloc",
        "CRYPTO_realloc_clean",
        "CRYPTO_remalloc",
        "CRYPTO_set_locked_mem_ex_functions",
        "CRYPTO_set_locked_mem_functions",
        "CRYPTO_set_mem_debug_functions",
        "CRYPTO_set_mem_debug_options",
        "CRYPTO_set_mem_ex_functions",
        "CRYPTO_set_mem_functions",
        "CRYPTO_strdup"
    ],
    "mem_clr.o": [
        "OPENSSL_cleanse"
    ],
    "mem_dbg.o": [
        "CRYPTO_dbg_free",
        "CRYPTO_dbg_get_options",
        "CRYPTO_dbg_malloc",
        "CRYPTO_dbg_realloc",
        "CRYPTO_dbg_set_options",
        "CRYPTO_is_mem_check_on",
        "CRYPTO_mem_ctrl",
        "CRYPTO_mem_leaks",
        "CRYPTO_mem_leaks_cb",
        "CRYPTO_mem_leaks_fp",
        "CRYPTO_pop_info",
        "CRYPTO_push_info_",
        "CRYPTO_remove_all_info"
    ],
    "o_init.o": [
        "OPENSSL_init"
    ],
    "o_str.o": [
        "OPENSSL_strcasecmp",
        "OPENSSL_strncasecmp"
    ],
    "o_time.o": [
        "OPENSSL_gmtime_adj"
    ],
    "hashmap.o": [
        "findPrimeGreaterThan",
        "hashmapCount",
        "hashmapCreate",
        "hashmapDelete",
        "hashmapGet",
        "hashmapInsert",
        "hashmapRemove",
        "rehash"
    ],
    "aes/aes_cfb.o": [
        "AES_cfb128_encrypt",
        "AES_cfb1_encrypt",
        "AES_cfb8_encrypt"
    ],
    "aes/aes_ctr.o": [
        "AES_ctr128_encrypt"
    ],
    "aes/aes_ecb.o": [
        "AES_ecb_encrypt"
    ],
    "aes/aes_ige.o": [
        "AES_ige_encrypt"
    ],
    "aes/aes_misc.o": [
        "AES_options"
    ],
    "aes/aes_ofb.o": [
        "AES_ofb128_encrypt"
    ],
    "aes/aes_wrap.o": [
        "AES_unwrap_key",
        "AES_wrap_key"
    ],
    "asn1/a_bitstr.o": [
        "ASN1_BIT_STRING_check",
        "ASN1_BIT_STRING_get_bit",
        "ASN1_BIT_STRING_set",
        "ASN1_BIT_STRING_set_bit",
        "c2i_ASN1_BIT_STRING",
        "i2c_ASN1_BIT_STRING"
    ],
    "asn1/a_bool.o": [
        "d2i_ASN1_BOOLEAN",
        "i2d_ASN1_BOOLEAN"
    ],
    "asn1/a_bytes.o": [
        "d2i_ASN1_bytes",
        "d2i_ASN1_type_bytes",
        "i2d_ASN1_bytes"
    ],
    "asn1/a_d2i_fp.o": [
        "ASN1_d2i_bio",
        "ASN1_d2i_fp",
        "asn1_d2i_read_bio.constprop.0",
        "ASN1_item_d2i_bio",
        "ASN1_item_d2i_fp"
    ],
    "asn1/a_digest.o": [
        "ASN1_item_digest"
    ],
    "asn1/a_dup.o": [
        "ASN1_dup",
        "ASN1_item_dup"
    ],
    "asn1/a_enum.o": [
        "ASN1_ENUMERATED_get",
        "ASN1_ENUMERATED_set",
        "ASN1_ENUMERATED_to_BN",
        "BN_to_ASN1_ENUMERATED"
    ],
    "asn1/a_i2d_fp.o": [
        "ASN1_i2d_bio",
        "ASN1_i2d_fp",
        "ASN1_item_i2d_bio",
        "ASN1_item_i2d_fp"
    ],
    "asn1/a_int.o": [
        "ASN1_INTEGER_cmp",
        "ASN1_INTEGER_dup",
        "ASN1_INTEGER_get",
        "ASN1_INTEGER_set",
        "ASN1_INTEGER_to_BN",
        "BN_to_ASN1_INTEGER",
        "c2i_ASN1_INTEGER",
        "d2i_ASN1_UINTEGER",
        "ecall_ASN1_INTEGER_to_BN",
        "ecall_BN_to_ASN1_INTEGER",
        "hprintf.constprop.0",
        "i2c_ASN1_INTEGER"
    ],
    "asn1/a_mbstr.o": [
        "ASN1_mbstring_copy",
        "ASN1_mbstring_ncopy",
        "cpy_asc",
        "cpy_bmp",
        "cpy_univ",
        "cpy_utf8",
        "in_utf8",
        "out_utf8",
        "traverse_string",
        "type_str"
    ],
    "asn1/a_object.o": [
        "a2d_ASN1_OBJECT",
        "ASN1_OBJECT_create",
        "ASN1_OBJECT_free",
        "ASN1_OBJECT_new",
        "c2i_ASN1_OBJECT",
        "d2i_ASN1_OBJECT",
        "i2a_ASN1_OBJECT",
        "i2d_ASN1_OBJECT",
        "i2t_ASN1_OBJECT"
    ],
    "asn1/a_octet.o": [
        "ASN1_OCTET_STRING_cmp",
        "ASN1_OCTET_STRING_dup",
        "ASN1_OCTET_STRING_set"
    ],
    "asn1/a_print.o": [
        "ASN1_PRINTABLE_type",
        "ASN1_UNIVERSALSTRING_to_string"
    ],
    "asn1/a_set.o": [
        "d2i_ASN1_SET",
        "i2d_ASN1_SET",
        "SetBlobCmp"
    ],
    "asn1/a_sign.o": [
        "ASN1_item_sign",
        "ASN1_item_sign_ctx"
    ],
    "asn1/a_strex.o": [
        "ASN1_STRING_print_ex",
        "ASN1_STRING_print_ex_fp",
        "ASN1_STRING_to_UTF8",
        "do_buf",
        "do_esc_char",
        "do_hex_dump",
        "do_name_ex",
        "do_print_ex",
        "send_bio_chars",
        "send_fp_chars",
        "X509_NAME_print_ex",
        "X509_NAME_print_ex_fp"
    ],
    "asn1/a_strnid.o": [
        "ASN1_STRING_get_default_mask",
        "ASN1_STRING_set_by_NID",
        "ASN1_STRING_set_default_mask",
        "ASN1_STRING_set_default_mask_asc",
        "ASN1_STRING_TABLE_add",
        "ASN1_STRING_TABLE_cleanup",
        "ASN1_STRING_TABLE_get",
        "sk_table_cmp",
        "st_free",
        "table_cmp_BSEARCH_CMP_FN"
    ],
    "asn1/a_time.o": [
        "ASN1_TIME_free",
        "ASN1_TIME_new",
        "d2i_ASN1_TIME",
        "i2d_ASN1_TIME"
    ],
    "asn1/a_time_tm.o": [
        "ASN1_GENERALIZEDTIME_adj",
        "ASN1_GENERALIZEDTIME_check",
        "ASN1_GENERALIZEDTIME_set",
        "ASN1_GENERALIZEDTIME_set_string",
        "ASN1_TIME_adj",
        "ASN1_TIME_adj_internal",
        "ASN1_TIME_check",
        "asn1_time_parse",
        "ASN1_TIME_set",
        "ASN1_TIME_set_string",
        "ASN1_TIME_set_string_internal",
        "ASN1_TIME_to_generalizedtime",
        "asn1_tm_cmp",
        "ASN1_UTCTIME_adj",
        "ASN1_UTCTIME_check",
        "ASN1_UTCTIME_cmp_time_t",
        "ASN1_UTCTIME_set",
        "ASN1_UTCTIME_set_string",
        "gentime_string_from_tm",
        "rfc5280_string_from_tm",
        "utctime_string_from_tm"
    ],
    "asn1/a_type.o": [
        "ASN1_TYPE_cmp",
        "ASN1_TYPE_get",
        "ASN1_TYPE_set",
        "ASN1_TYPE_set1"
    ],
    "asn1/a_utf8.o": [
        "UTF8_getc",
        "UTF8_putc"
    ],
    "asn1/a_verify.o": [
        "ASN1_item_verify"
    ],
    "asn1/ameth_lib.o": [
        "ameth_cmp",
        "ameth_cmp_BSEARCH_CMP_FN",
        "EVP_PKEY_asn1_add0",
        "EVP_PKEY_asn1_add_alias",
        "EVP_PKEY_asn1_copy",
        "EVP_PKEY_asn1_find",
        "EVP_PKEY_asn1_find_str",
        "EVP_PKEY_asn1_find_str.cold",
        "EVP_PKEY_asn1_free",
        "EVP_PKEY_asn1_free.part.0",
        "EVP_PKEY_asn1_get0",
        "EVP_PKEY_asn1_get0_info",
        "EVP_PKEY_asn1_get_count",
        "EVP_PKEY_asn1_new",
        "EVP_PKEY_asn1_set_ctrl",
        "EVP_PKEY_asn1_set_free",
        "EVP_PKEY_asn1_set_param",
        "EVP_PKEY_asn1_set_private",
        "EVP_PKEY_asn1_set_public",
        "EVP_PKEY_get0_asn1"
    ],
    "asn1/asn1_err.o": [
        "ERR_load_ASN1_strings"
    ],
    "asn1/asn1_gen.o": [
        "append_exp",
        "asn1_cb",
        "ASN1_generate_nconf",
        "ASN1_generate_v3",
        "bitstr_cb",
        "parse_tagging.part.0"
    ],
    "asn1/asn1_lib.o": [
        "asn1_add_error",
        "ASN1_check_infinite_end",
        "ASN1_const_check_infinite_end",
        "asn1_const_Finish",
        "_asn1_Finish",
        "asn1_Finish",
        "ASN1_get_object",
        "asn1_GetSequence",
        "ASN1_object_size",
        "ASN1_put_eoc",
        "ASN1_put_object",
        "ASN1_STRING_cmp",
        "ASN1_STRING_copy",
        "ASN1_STRING_data",
        "ASN1_STRING_dup",
        "ASN1_STRING_free",
        "ASN1_STRING_length",
        "ASN1_STRING_length_set",
        "ASN1_STRING_new",
        "ASN1_STRING_set",
        "ASN1_STRING_set0",
        "ASN1_STRING_type",
        "ASN1_STRING_type_new"
    ],
    "asn1/asn1_par.o": [
        "ASN1_parse",
        "asn1_parse2",
        "ASN1_parse_dump",
        "ASN1_tag2str"
    ],
    "asn1/asn_mime.o": [
        "b64_read_asn1",
        "B64_write_ASN1",
        "i2d_ASN1_bio_stream",
        "mime_hdr_addparam.isra.0",
        "mime_hdr_cmp",
        "mime_hdr_find.constprop.0",
        "mime_hdr_free",
        "mime_hdr_new",
        "mime_param_cmp",
        "mime_param_free",
        "mime_parse_hdr",
        "multi_split",
        "PEM_write_bio_ASN1_stream",
        "SMIME_crlf_copy",
        "SMIME_read_ASN1",
        "SMIME_text",
        "SMIME_write_ASN1",
        "strip_end",
        "strip_start"
    ],
    "asn1/asn_moid.o": [
        "ASN1_add_oid_module",
        "oid_module_finish",
        "oid_module_init"
    ],
    "asn1/asn_pack.o": [
        "ASN1_item_pack",
        "ASN1_item_unpack",
        "ASN1_pack_string",
        "ASN1_seq_pack",
        "ASN1_seq_unpack",
        "ASN1_unpack_string"
    ],
    "asn1/bio_asn1.o": [
        "asn1_bio_callback_ctrl",
        "asn1_bio_ctrl",
        "asn1_bio_flush_ex.part.0",
        "asn1_bio_free",
        "asn1_bio_gets",
        "asn1_bio_new",
        "asn1_bio_puts",
        "asn1_bio_read",
        "asn1_bio_setup_ex",
        "asn1_bio_write",
        "BIO_asn1_get_prefix",
        "BIO_asn1_get_suffix",
        "BIO_asn1_set_prefix",
        "BIO_asn1_set_suffix",
        "BIO_f_asn1"
    ],
    "asn1/bio_ndef.o": [
        "BIO_new_NDEF",
        "ndef_prefix",
        "ndef_prefix_free",
        "ndef_suffix",
        "ndef_suffix_free"
    ],
    "asn1/d2i_pr.o": [
        "d2i_AutoPrivateKey",
        "d2i_PrivateKey"
    ],
    "asn1/d2i_pu.o": [
        "d2i_PublicKey"
    ],
    "asn1/evp_asn1.o": [
        "ASN1_TYPE_get_int_octetstring",
        "ASN1_TYPE_get_octetstring",
        "ASN1_TYPE_set_int_octetstring",
        "ASN1_TYPE_set_octetstring"
    ],
    "asn1/f_enum.o": [
        "a2i_ASN1_ENUMERATED",
        "i2a_ASN1_ENUMERATED"
    ],
    "asn1/f_int.o": [
        "a2i_ASN1_INTEGER",
        "i2a_ASN1_INTEGER"
    ],
    "asn1/f_string.o": [
        "a2i_ASN1_STRING",
        "i2a_ASN1_STRING"
    ],
    "asn1/i2d_pr.o": [
        "i2d_PrivateKey"
    ],
    "asn1/i2d_pu.o": [
        "i2d_PublicKey"
    ],
    "asn1/n_pkey.o": [
        "d2i_NETSCAPE_ENCRYPTED_PKEY",
        "d2i_NETSCAPE_PKEY",
        "d2i_Netscape_RSA",
        "d2i_RSA_NET",
        "d2i_RSA_NET_2.isra.0",
        "i2d_NETSCAPE_ENCRYPTED_PKEY",
        "i2d_NETSCAPE_PKEY",
        "i2d_Netscape_RSA",
        "i2d_RSA_NET",
        "NETSCAPE_ENCRYPTED_PKEY_free",
        "NETSCAPE_ENCRYPTED_PKEY_new",
        "NETSCAPE_PKEY_free",
        "NETSCAPE_PKEY_new"
    ],
    "asn1/nsseq.o": [
        "d2i_NETSCAPE_CERT_SEQUENCE",
        "i2d_NETSCAPE_CERT_SEQUENCE",
        "NETSCAPE_CERT_SEQUENCE_free",
        "NETSCAPE_CERT_SEQUENCE_new",
        "nsseq_cb"
    ],
    "asn1/p5_pbe.o": [
        "d2i_PBEPARAM",
        "i2d_PBEPARAM",
        "PBEPARAM_free",
        "PBEPARAM_new",
        "PKCS5_pbe_set",
        "PKCS5_pbe_set0_algor"
    ],
    "asn1/p5_pbev2.o": [
        "d2i_PBE2PARAM",
        "d2i_PBKDF2PARAM",
        "i2d_PBE2PARAM",
        "i2d_PBKDF2PARAM",
        "PBE2PARAM_free",
        "PBE2PARAM_new",
        "PBKDF2PARAM_free",
        "PBKDF2PARAM_new",
        "PKCS5_pbe2_set",
        "PKCS5_pbe2_set_iv",
        "PKCS5_pbkdf2_set"
    ],
    "asn1/p8_pkey.o": [
        "d2i_PKCS8_PRIV_KEY_INFO",
        "i2d_PKCS8_PRIV_KEY_INFO",
        "PKCS8_pkey_get0",
        "PKCS8_pkey_set0",
        "PKCS8_PRIV_KEY_INFO_free",
        "PKCS8_PRIV_KEY_INFO_new",
        "pkey_cb"
    ],
    "asn1/t_bitst.o": [
        "ASN1_BIT_STRING_name_print",
        "ASN1_BIT_STRING_num_asc",
        "ASN1_BIT_STRING_set_asc"
    ],
    "asn1/t_crl.o": [
        "X509_CRL_print",
        "X509_CRL_print_fp"
    ],
    "asn1/t_pkey.o": [
        "ASN1_bn_print"
    ],
    "asn1/t_req.o": [
        "X509_REQ_print",
        "X509_REQ_print_ex",
        "X509_REQ_print_fp"
    ],
    "asn1/t_spki.o": [
        "NETSCAPE_SPKI_print"
    ],
    "asn1/t_x509.o": [
        "ASN1_GENERALIZEDTIME_print",
        "ASN1_STRING_print",
        "ASN1_TIME_print",
        "ASN1_UTCTIME_print",
        "X509_NAME_print",
        "X509_ocspid_print",
        "X509_print",
        "X509_print_ex",
        "X509_print_ex_fp",
        "X509_print_fp",
        "X509_signature_dump",
        "X509_signature_print"
    ],
    "asn1/t_x509a.o": [
        "X509_CERT_AUX_print"
    ],
    "asn1/tasn_dec.o": [
        "asn1_check_tlen",
        "asn1_collect.constprop.0",
        "asn1_d2i_ex_primitive",
        "asn1_ex_c2i",
        "ASN1_item_d2i",
        "ASN1_item_ex_d2i",
        "ASN1_tag2bit",
        "ASN1_template_d2i",
        "asn1_template_ex_d2i",
        "asn1_template_noexp_d2i"
    ],
    "asn1/tasn_enc.o": [
        "asn1_ex_i2c",
        "asn1_i2d_ex_primitive",
        "ASN1_item_ex_i2d",
        "asn1_item_flags_i2d",
        "ASN1_item_i2d",
        "ASN1_item_ndef_i2d",
        "asn1_template_ex_i2d",
        "ASN1_template_i2d",
        "der_cmp"
    ],
    "asn1/tasn_fre.o": [
        "asn1_item_combine_free",
        "ASN1_item_ex_free",
        "ASN1_item_free",
        "ASN1_primitive_free",
        "ASN1_template_free",
        "smart_free"
    ],
    "asn1/tasn_new.o": [
        "asn1_item_clear",
        "asn1_item_ex_combine_new",
        "ASN1_item_ex_new",
        "ASN1_item_new",
        "asn1_primitive_clear",
        "ASN1_primitive_new",
        "ASN1_template_new"
    ],
    "asn1/tasn_prn.o": [
        "ASN1_item_print",
        "asn1_item_print_ctx",
        "ASN1_PCTX_free",
        "ASN1_PCTX_get_cert_flags",
        "ASN1_PCTX_get_flags",
        "ASN1_PCTX_get_nm_flags",
        "ASN1_PCTX_get_oid_flags",
        "ASN1_PCTX_get_str_flags",
        "ASN1_PCTX_new",
        "ASN1_PCTX_set_cert_flags",
        "ASN1_PCTX_set_flags",
        "ASN1_PCTX_set_nm_flags",
        "ASN1_PCTX_set_oid_flags",
        "ASN1_PCTX_set_str_flags",
        "asn1_print_fsname.isra.0",
        "asn1_template_print_ctx"
    ],
    "asn1/tasn_typ.o": [
        "ASN1_BIT_STRING_free",
        "ASN1_BIT_STRING_new",
        "ASN1_BMPSTRING_free",
        "ASN1_BMPSTRING_new",
        "ASN1_ENUMERATED_free",
        "ASN1_ENUMERATED_new",
        "ASN1_GENERALIZEDTIME_free",
        "ASN1_GENERALIZEDTIME_new",
        "ASN1_GENERALSTRING_free",
        "ASN1_GENERALSTRING_new",
        "ASN1_IA5STRING_free",
        "ASN1_IA5STRING_new",
        "ASN1_INTEGER_free",
        "ASN1_INTEGER_new",
        "ASN1_NULL_free",
        "ASN1_NULL_new",
        "ASN1_OCTET_STRING_free",
        "ASN1_OCTET_STRING_new",
        "ASN1_PRINTABLE_free",
        "ASN1_PRINTABLE_new",
        "ASN1_PRINTABLESTRING_free",
        "ASN1_PRINTABLESTRING_new",
        "ASN1_T61STRING_free",
        "ASN1_T61STRING_new",
        "ASN1_TYPE_free",
        "ASN1_TYPE_new",
        "ASN1_UNIVERSALSTRING_free",
        "ASN1_UNIVERSALSTRING_new",
        "ASN1_UTCTIME_free",
        "ASN1_UTCTIME_new",
        "ASN1_UTF8STRING_free",
        "ASN1_UTF8STRING_new",
        "ASN1_VISIBLESTRING_free",
        "ASN1_VISIBLESTRING_new",
        "d2i_ASN1_BIT_STRING",
        "d2i_ASN1_BMPSTRING",
        "d2i_ASN1_ENUMERATED",
        "d2i_ASN1_GENERALIZEDTIME",
        "d2i_ASN1_GENERALSTRING",
        "d2i_ASN1_IA5STRING",
        "d2i_ASN1_INTEGER",
        "d2i_ASN1_NULL",
        "d2i_ASN1_OCTET_STRING",
        "d2i_ASN1_PRINTABLE",
        "d2i_ASN1_PRINTABLESTRING",
        "d2i_ASN1_SEQUENCE_ANY",
        "d2i_ASN1_SET_ANY",
        "d2i_ASN1_T61STRING",
        "d2i_ASN1_TYPE",
        "d2i_ASN1_UNIVERSALSTRING",
        "d2i_ASN1_UTCTIME",
        "d2i_ASN1_UTF8STRING",
        "d2i_ASN1_VISIBLESTRING",
        "d2i_DIRECTORYSTRING",
        "d2i_DISPLAYTEXT",
        "DIRECTORYSTRING_free",
        "DIRECTORYSTRING_new",
        "DISPLAYTEXT_free",
        "DISPLAYTEXT_new",
        "i2d_ASN1_BIT_STRING",
        "i2d_ASN1_BMPSTRING",
        "i2d_ASN1_ENUMERATED",
        "i2d_ASN1_GENERALIZEDTIME",
        "i2d_ASN1_GENERALSTRING",
        "i2d_ASN1_IA5STRING",
        "i2d_ASN1_INTEGER",
        "i2d_ASN1_NULL",
        "i2d_ASN1_OCTET_STRING",
        "i2d_ASN1_PRINTABLE",
        "i2d_ASN1_PRINTABLESTRING",
        "i2d_ASN1_SEQUENCE_ANY",
        "i2d_ASN1_SET_ANY",
        "i2d_ASN1_T61STRING",
        "i2d_ASN1_TYPE",
        "i2d_ASN1_UNIVERSALSTRING",
        "i2d_ASN1_UTCTIME",
        "i2d_ASN1_UTF8STRING",
        "i2d_ASN1_VISIBLESTRING",
        "i2d_DIRECTORYSTRING",
        "i2d_DISPLAYTEXT"
    ],
    "asn1/tasn_utl.o": [
        "asn1_do_adb",
        "asn1_do_lock",
        "asn1_enc_free",
        "asn1_enc_init",
        "asn1_enc_restore",
        "asn1_enc_save",
        "asn1_get_choice_selector",
        "asn1_get_field_ptr",
        "asn1_set_choice_selector"
    ],
    "asn1/x_algor.o": [
        "d2i_X509_ALGOR",
        "d2i_X509_ALGORS",
        "i2d_X509_ALGOR",
        "i2d_X509_ALGORS",
        "X509_ALGOR_cmp",
        "X509_ALGOR_dup",
        "X509_ALGOR_free",
        "X509_ALGOR_get0",
        "X509_ALGOR_new",
        "X509_ALGOR_set0",
        "X509_ALGOR_set_md"
    ],
    "asn1/x_attrib.o": [
        "d2i_X509_ATTRIBUTE",
        "i2d_X509_ATTRIBUTE",
        "X509_ATTRIBUTE_create",
        "X509_ATTRIBUTE_dup",
        "X509_ATTRIBUTE_free",
        "X509_ATTRIBUTE_new"
    ],
    "asn1/x_bignum.o": [
        "bn_c2i",
        "bn_free",
        "bn_i2c",
        "bn_new"
    ],
    "asn1/x_crl.o": [
        "crl_cb",
        "crl_inf_cb",
        "d2i_X509_CRL",
        "d2i_X509_CRL_INFO",
        "d2i_X509_REVOKED",
        "def_crl_lookup",
        "def_crl_verify",
        "i2d_X509_CRL",
        "i2d_X509_CRL_INFO",
        "i2d_X509_REVOKED",
        "X509_CRL_add0_revoked",
        "X509_CRL_dup",
        "X509_CRL_free",
        "X509_CRL_get0_by_cert",
        "X509_CRL_get0_by_serial",
        "X509_CRL_get_meth_data",
        "X509_CRL_INFO_free",
        "X509_CRL_INFO_new",
        "X509_CRL_METHOD_free",
        "X509_CRL_METHOD_new",
        "X509_CRL_new",
        "X509_CRL_set_default_method",
        "X509_CRL_set_meth_data",
        "X509_CRL_verify",
        "X509_REVOKED_cmp",
        "X509_REVOKED_free",
        "X509_REVOKED_new"
    ],
    "asn1/x_exten.o": [
        "d2i_X509_EXTENSION",
        "d2i_X509_EXTENSIONS",
        "i2d_X509_EXTENSION",
        "i2d_X509_EXTENSIONS",
        "X509_EXTENSION_dup",
        "X509_EXTENSION_free",
        "X509_EXTENSION_new"
    ],
    "asn1/x_info.o": [
        "X509_INFO_free",
        "X509_INFO_new"
    ],
    "asn1/x_long.o": [
        "long_c2i",
        "long_free",
        "long_i2c",
        "long_new",
        "long_print"
    ],
    "asn1/x_name.o": [
        "d2i_X509_NAME",
        "d2i_X509_NAME_ENTRY",
        "ecall_X509_NAME_ENTRY_free",
        "hprintf.constprop.0",
        "i2d_name_canon",
        "i2d_X509_NAME",
        "i2d_X509_NAME_ENTRY",
        "local_sk_X509_NAME_ENTRY_free",
        "local_sk_X509_NAME_ENTRY_pop_free",
        "x509_name_canon",
        "X509_NAME_dup",
        "X509_NAME_ENTRY_dup",
        "X509_NAME_ENTRY_free",
        "X509_NAME_ENTRY_new",
        "x509_name_ex_d2i",
        "x509_name_ex_free",
        "x509_name_ex_i2d",
        "x509_name_ex_new",
        "x509_name_ex_print",
        "X509_NAME_free",
        "X509_NAME_new",
        "X509_NAME_set"
    ],
    "asn1/x_nx509.o": [
        "d2i_NETSCAPE_X509",
        "i2d_NETSCAPE_X509",
        "NETSCAPE_X509_free",
        "NETSCAPE_X509_new"
    ],
    "asn1/x_pkey.o": [
        "X509_PKEY_free",
        "X509_PKEY_new"
    ],
    "asn1/x_pubkey.o": [
        "d2i_DSA_PUBKEY",
        "d2i_EC_PUBKEY",
        "d2i_PUBKEY",
        "d2i_RSA_PUBKEY",
        "d2i_X509_PUBKEY",
        "i2d_DSA_PUBKEY",
        "i2d_EC_PUBKEY",
        "i2d_PUBKEY",
        "i2d_RSA_PUBKEY",
        "i2d_X509_PUBKEY",
        "pubkey_cb",
        "X509_PUBKEY_free",
        "X509_PUBKEY_get",
        "X509_PUBKEY_get0_param",
        "X509_PUBKEY_new",
        "X509_PUBKEY_set",
        "X509_PUBKEY_set0_param",
        "X509_PUBKEY_set.part.0"
    ],
    "asn1/x_req.o": [
        "d2i_X509_REQ",
        "d2i_X509_REQ_INFO",
        "i2d_X509_REQ",
        "i2d_X509_REQ_INFO",
        "rinf_cb",
        "X509_REQ_dup",
        "X509_REQ_free",
        "X509_REQ_INFO_free",
        "X509_REQ_INFO_new",
        "X509_REQ_new"
    ],
    "asn1/x_sig.o": [
        "d2i_X509_SIG",
        "i2d_X509_SIG",
        "X509_SIG_free",
        "X509_SIG_new"
    ],
    "asn1/x_spki.o": [
        "d2i_NETSCAPE_SPKAC",
        "d2i_NETSCAPE_SPKI",
        "i2d_NETSCAPE_SPKAC",
        "i2d_NETSCAPE_SPKI",
        "NETSCAPE_SPKAC_free",
        "NETSCAPE_SPKAC_new",
        "NETSCAPE_SPKI_free",
        "NETSCAPE_SPKI_new"
    ],
    "asn1/x_val.o": [
        "d2i_X509_VAL",
        "i2d_X509_VAL",
        "X509_VAL_free",
        "X509_VAL_new"
    ],
    "asn1/x_x509.o": [
        "d2i_X509",
        "d2i_X509_AUX",
        "d2i_X509_CINF",
        "ecall_X509_free",
        "ecall_X509_get_ex_data",
        "ecall_X509_get_ex_new_index",
        "ecall_X509_new",
        "ecall_X509_set_ex_data",
        "hprintf.constprop.0",
        "i2d_X509",
        "i2d_X509_AUX",
        "i2d_X509_CINF",
        "x509_cb",
        "X509_CINF_free",
        "X509_CINF_new",
        "X509_dup",
        "X509_free",
        "X509_get_ex_data",
        "X509_get_ex_new_index",
        "X509_new",
        "X509_set_ex_data"
    ],
    "asn1/x_x509a.o": [
        "aux_get",
        "d2i_X509_CERT_AUX",
        "d2i_X509_CERT_PAIR",
        "ecall_X509_alias_get0",
        "hprintf.constprop.0",
        "i2d_X509_CERT_AUX",
        "i2d_X509_CERT_PAIR",
        "X509_add1_reject_object",
        "X509_add1_trust_object",
        "X509_alias_get0",
        "X509_alias_set1",
        "X509_CERT_AUX_free",
        "X509_CERT_AUX_new",
        "X509_CERT_PAIR_free",
        "X509_CERT_PAIR_new",
        "X509_keyid_get0",
        "X509_keyid_set1",
        "X509_reject_clear",
        "X509_trust_clear"
    ],
    "bf/bf_cfb64.o": [
        "BF_cfb64_encrypt"
    ],
    "bf/bf_ecb.o": [
        "BF_ecb_encrypt",
        "BF_options"
    ],
    "bf/bf_enc.o": [
        "BF_cbc_encrypt",
        "BF_decrypt",
        "BF_encrypt"
    ],
    "bf/bf_ofb64.o": [
        "BF_ofb64_encrypt"
    ],
    "bf/bf_skey.o": [
        "BF_set_key"
    ],
    "bio/b_dump.o": [
        "BIO_dump",
        "BIO_dump_cb",
        "BIO_dump_fp",
        "BIO_dump_indent",
        "BIO_dump_indent_cb",
        "BIO_dump_indent_fp",
        "write_bio",
        "write_fp"
    ],
    "bio/b_posix.o": [
        "BIO_sock_cleanup",
        "BIO_socket_nbio",
        "BIO_sock_init"
    ],
    "bio/b_print.o": [
        "BIO_printf",
        "BIO_snprintf",
        "BIO_vprintf",
        "BIO_vsnprintf"
    ],
    "bio/b_sock.o": [
        "BIO_accept",
        "BIO_get_accept_socket",
        "BIO_gethostbyname",
        "BIO_get_host_ip",
        "BIO_get_port",
        "BIO_set_tcp_ndelay",
        "BIO_sock_error",
        "BIO_socket_ioctl"
    ],
    "bio/bf_buff.o": [
        "BIO_f_buffer",
        "buffer_callback_ctrl",
        "buffer_ctrl",
        "buffer_free",
        "buffer_gets",
        "buffer_new",
        "buffer_puts",
        "buffer_read",
        "buffer_write",
        "buffer_write.part.0"
    ],
    "bio/bf_nbio.o": [
        "BIO_f_nbio_test",
        "nbiof_callback_ctrl",
        "nbiof_ctrl",
        "nbiof_free",
        "nbiof_gets",
        "nbiof_new",
        "nbiof_puts",
        "nbiof_read",
        "nbiof_write"
    ],
    "bio/bf_null.o": [
        "BIO_f_null",
        "nullf_callback_ctrl",
        "nullf_ctrl",
        "nullf_free",
        "nullf_gets",
        "nullf_new",
        "nullf_puts",
        "nullf_read",
        "nullf_write"
    ],
    "bio/bio_cb.o": [
        "BIO_debug_callback"
    ],
    "bio/bio_err.o": [
        "ERR_load_BIO_strings"
    ],
    "bio/bio_lib.o": [
        "BIO_callback_ctrl",
        "BIO_clear_flags",
        "BIO_copy_next_retry",
        "BIO_ctrl",
        "BIO_ctrl_pending",
        "BIO_ctrl_wpending",
        "BIO_dup_chain",
        "bio_fake_bgets",
        "bio_fake_bputs",
        "bio_fake_bread",
        "bio_fake_bwrite",
        "bio_fake_create",
        "bio_fake_ctrl",
        "bio_fake_destroy",
        "BIO_find_type",
        "BIO_free",
        "BIO_free_all",
        "BIO_get_callback",
        "BIO_get_callback_arg",
        "BIO_get_ex_data",
        "BIO_get_ex_new_index",
        "BIO_get_retry_BIO",
        "BIO_get_retry_reason",
        "BIO_gets",
        "BIO_indent",
        "BIO_int_ctrl",
        "BIO_method_name",
        "BIO_method_type",
        "BIO_new",
        "BIO_next",
        "BIO_number_read",
        "BIO_number_written",
        "BIO_pop",
        "BIO_ptr_ctrl",
        "BIO_push",
        "BIO_push.part.0",
        "BIO_puts",
        "BIO_read",
        "BIO_set",
        "BIO_set_callback",
        "BIO_set_callback_arg",
        "BIO_set_ex_data",
        "BIO_set_flags",
        "BIO_set_from_ecall",
        "BIO_test_flags",
        "BIO_vfree",
        "BIO_write",
        "ecall_BIO_ctrl",
        "ecall_BIO_free",
        "ecall_BIO_int_ctrl",
        "ecall_BIO_new",
        "get_bio_methods_map",
        "hprintf.constprop.0"
    ],
    "bio/bss_acpt.o": [
        "acpt_ctrl",
        "acpt_free",
        "acpt_new",
        "acpt_puts",
        "acpt_read",
        "acpt_state",
        "acpt_write",
        "BIO_new_accept",
        "BIO_s_accept"
    ],
    "bio/bss_bio.o": [
        "bio_ctrl",
        "BIO_ctrl_get_read_request",
        "BIO_ctrl_get_write_guarantee",
        "BIO_ctrl_reset_read_request",
        "bio_free",
        "bio_new",
        "BIO_new_bio_pair",
        "BIO_nread",
        "bio_nread0",
        "BIO_nread0",
        "BIO_nwrite",
        "bio_nwrite0",
        "BIO_nwrite0",
        "bio_puts",
        "bio_read",
        "BIO_s_bio",
        "bio_write"
    ],
    "bio/bss_conn.o": [
        "BIO_CONNECT_free",
        "BIO_CONNECT_new",
        "BIO_new_connect",
        "BIO_s_connect",
        "conn_callback_ctrl",
        "conn_close_socket.isra.0",
        "conn_ctrl",
        "conn_free",
        "conn_new",
        "conn_puts",
        "conn_read",
        "conn_state",
        "conn_write"
    ],
    "bio/bss_dgram.o": [
        "BIO_dgram_non_fatal_error",
        "BIO_dgram_should_retry.part.0",
        "BIO_new_dgram",
        "BIO_s_datagram",
        "dgram_ctrl",
        "dgram_free",
        "dgram_new",
        "dgram_puts",
        "dgram_read",
        "dgram_write"
    ],
    "bio/bss_fd.o": [
        "BIO_fd_non_fatal_error",
        "BIO_fd_should_retry",
        "BIO_fd_should_retry.part.0",
        "BIO_new_fd",
        "BIO_s_fd",
        "fd_ctrl",
        "fd_free",
        "fd_gets",
        "fd_new",
        "fd_puts",
        "fd_read",
        "fd_write"
    ],
    "bio/bss_file.o": [
        "BIO_new_file",
        "BIO_new_fp",
        "BIO_s_file",
        "ecall_BIO_new_file",
        "ecall_BIO_s_file",
        "file_ctrl",
        "file_free",
        "file_free.part.0",
        "file_gets",
        "file_new",
        "file_puts",
        "file_read",
        "file_write",
        "hprintf.constprop.0"
    ],
    "bio/bss_log.o": [],
    "bio/bss_mem.o": [
        "BIO_new_mem_buf",
        "BIO_s_mem",
        "mem_ctrl",
        "mem_free",
        "mem_gets",
        "mem_new",
        "mem_puts",
        "mem_read",
        "mem_write"
    ],
    "bio/bss_null.o": [
        "BIO_s_null",
        "null_ctrl",
        "null_free",
        "null_gets",
        "null_new",
        "null_puts",
        "null_read",
        "null_write"
    ],
    "bio/bss_sock.o": [
        "BIO_new_socket",
        "BIO_sock_non_fatal_error",
        "BIO_sock_should_retry",
        "BIO_sock_should_retry.part.0",
        "BIO_s_socket",
        "sock_ctrl",
        "sock_free",
        "sock_new",
        "sock_puts",
        "sock_read",
        "sock_write"
    ],
    "bn/bn_add.o": [
        "BN_add",
        "BN_sub",
        "BN_uadd",
        "BN_usub"
    ],
    "bn/bn_asm.o": [
        "bn_add_words",
        "bn_div_words",
        "bn_mul_add_words",
        "bn_mul_comba4",
        "bn_mul_comba8",
        "bn_mul_words",
        "bn_sqr_comba4",
        "bn_sqr_comba8",
        "bn_sqr_words",
        "bn_sub_words"
    ],
    "bn/bn_blind.o": [
        "BN_BLINDING_convert",
        "BN_BLINDING_convert_ex",
        "BN_BLINDING_create_param",
        "BN_BLINDING_free",
        "BN_BLINDING_free.part.0",
        "BN_BLINDING_get_flags",
        "BN_BLINDING_get_thread_id",
        "BN_BLINDING_invert",
        "BN_BLINDING_invert_ex",
        "BN_BLINDING_new",
        "BN_BLINDING_set_flags",
        "BN_BLINDING_set_thread_id",
        "BN_BLINDING_thread_id",
        "BN_BLINDING_update"
    ],
    "bn/bn_const.o": [
        "get_rfc2409_prime_1024",
        "get_rfc2409_prime_768",
        "get_rfc3526_prime_1536",
        "get_rfc3526_prime_2048",
        "get_rfc3526_prime_3072",
        "get_rfc3526_prime_4096",
        "get_rfc3526_prime_6144",
        "get_rfc3526_prime_8192"
    ],
    "bn/bn_ctx.o": [
        "BN_CTX_end",
        "BN_CTX_free",
        "BN_CTX_get",
        "BN_CTX_init",
        "BN_CTX_new",
        "BN_CTX_start"
    ],
    "bn/bn_depr.o": [
        "BN_generate_prime",
        "BN_is_prime",
        "BN_is_prime_fasttest"
    ],
    "bn/bn_div.o": [
        "BN_div"
    ],
    "bn/bn_err.o": [
        "ERR_load_BN_strings"
    ],
    "bn/bn_exp.o": [
        "BN_exp",
        "BN_mod_exp",
        "BN_mod_exp_mont",
        "BN_mod_exp_mont_consttime",
        "BN_mod_exp_mont_word",
        "BN_mod_exp_recp",
        "BN_mod_exp_simple",
        "MOD_EXP_CTIME_COPY_FROM_PREBUF"
    ],
    "bn/bn_exp2.o": [
        "BN_mod_exp2_mont"
    ],
    "bn/bn_gcd.o": [
        "BN_gcd",
        "BN_mod_inverse"
    ],
    "bn/bn_gf2m.o": [
        "BN_GF2m_add",
        "BN_GF2m_arr2poly",
        "BN_GF2m_mod",
        "BN_GF2m_mod_arr",
        "BN_GF2m_mod_div",
        "BN_GF2m_mod_div_arr",
        "BN_GF2m_mod_exp",
        "BN_GF2m_mod_exp_arr",
        "BN_GF2m_mod_inv",
        "BN_GF2m_mod_inv_arr",
        "BN_GF2m_mod_mul",
        "BN_GF2m_mod_mul_arr",
        "BN_GF2m_mod_solve_quad",
        "BN_GF2m_mod_solve_quad_arr",
        "BN_GF2m_mod_sqr",
        "BN_GF2m_mod_sqr_arr",
        "BN_GF2m_mod_sqrt",
        "BN_GF2m_mod_sqrt_arr",
        "BN_GF2m_poly2arr"
    ],
    "bn/bn_kron.o": [
        "BN_kronecker"
    ],
    "bn/bn_lib.o": [
        "BN_bin2bn",
        "BN_bn2bin",
        "BN_clear",
        "BN_clear_bit",
        "BN_clear_free",
        "BN_cmp",
        "bn_cmp_part_words",
        "bn_cmp_words",
        "BN_consttime_swap",
        "BN_copy",
        "BN_dup",
        "bn_dup_expand",
        "bn_expand",
        "bn_expand2",
        "bn_expand2.part.0",
        "bn_expand_internal",
        "BN_free",
        "BN_get_params",
        "BN_get_word",
        "BN_init",
        "BN_is_bit_set",
        "BN_is_zero",
        "BN_mask_bits",
        "BN_new",
        "BN_num_bits",
        "BN_num_bits_word",
        "BN_set_bit",
        "BN_set_negative",
        "BN_set_params",
        "BN_set_word",
        "BN_swap",
        "BN_ucmp",
        "BN_value_one",
        "ecall_BN_bin2bn",
        "ecall_BN_clear_bit",
        "ecall_BN_dup",
        "ecall_BN_free",
        "ecall_BN_is_bit_set",
        "ecall_BN_is_zero",
        "ecall_BN_new",
        "ecall_BN_num_bits",
        "ecall_BN_set_word",
        "hprintf.constprop.0"
    ],
    "bn/bn_mod.o": [
        "BN_mod_add",
        "BN_mod_add_quick",
        "BN_mod_lshift",
        "BN_mod_lshift1",
        "BN_mod_lshift1_quick",
        "BN_mod_lshift_quick",
        "BN_mod_mul",
        "BN_mod_sqr",
        "BN_mod_sub",
        "BN_mod_sub_quick",
        "BN_nnmod"
    ],
    "bn/bn_mont.o": [
        "BN_from_montgomery",
        "BN_from_montgomery_word",
        "BN_mod_mul_montgomery",
        "BN_MONT_CTX_copy",
        "BN_MONT_CTX_free",
        "BN_MONT_CTX_free.part.0",
        "BN_MONT_CTX_init",
        "BN_MONT_CTX_new",
        "BN_MONT_CTX_set",
        "BN_MONT_CTX_set_locked"
    ],
    "bn/bn_mpi.o": [
        "BN_bn2mpi",
        "BN_mpi2bn"
    ],
    "bn/bn_mul.o": [
        "bn_add_part_words",
        "BN_mul",
        "bn_mul_high",
        "bn_mul_low_normal",
        "bn_mul_low_recursive",
        "bn_mul_normal",
        "bn_mul_part_recursive",
        "bn_mul_recursive",
        "bn_sub_part_words"
    ],
    "bn/bn_nist.o": [
        "BN_get0_nist_prime_192",
        "BN_get0_nist_prime_224",
        "BN_get0_nist_prime_256",
        "BN_get0_nist_prime_384",
        "BN_get0_nist_prime_521",
        "BN_nist_mod_192",
        "BN_nist_mod_224",
        "BN_nist_mod_256",
        "BN_nist_mod_384",
        "BN_nist_mod_521"
    ],
    "bn/bn_prime.o": [
        "BN_GENCB_call",
        "BN_generate_prime_ex",
        "BN_is_prime_ex",
        "BN_is_prime_fasttest_ex",
        "probable_prime"
    ],
    "bn/bn_print.o": [
        "BN_asc2bn",
        "BN_bn2dec",
        "BN_bn2hex",
        "BN_dec2bn",
        "BN_hex2bn",
        "BN_options",
        "BN_print",
        "BN_print_fp",
        "ecall_BN_dec2bn",
        "hprintf.constprop.0"
    ],
    "bn/bn_rand.o": [
        "BN_bntest_rand",
        "BN_pseudo_rand",
        "BN_pseudo_rand_range",
        "bnrand",
        "BN_rand",
        "bn_rand_range",
        "BN_rand_range"
    ],
    "bn/bn_recp.o": [
        "BN_div_recp",
        "BN_mod_mul_reciprocal",
        "BN_reciprocal",
        "BN_RECP_CTX_free",
        "BN_RECP_CTX_init",
        "BN_RECP_CTX_new",
        "BN_RECP_CTX_set"
    ],
    "bn/bn_shift.o": [
        "BN_lshift",
        "BN_lshift1",
        "BN_rshift",
        "BN_rshift1"
    ],
    "bn/bn_sqr.o": [
        "BN_sqr",
        "bn_sqr_normal",
        "bn_sqr_recursive"
    ],
    "bn/bn_sqrt.o": [
        "BN_mod_sqrt"
    ],
    "bn/bn_word.o": [
        "BN_add_word",
        "BN_div_word",
        "BN_mod_word",
        "BN_mul_word",
        "BN_sub_word"
    ],
    "bn/bn_x931p.o": [
        "bn_x931_derive_pi",
        "BN_X931_derive_prime_ex",
        "BN_X931_derive_prime_ex.part.0",
        "BN_X931_generate_prime_ex",
        "BN_X931_generate_Xpq"
    ],
    "buffer/buf_err.o": [
        "ERR_load_BUF_strings"
    ],
    "buffer/buf_str.o": [
        "BUF_memdup",
        "BUF_strdup",
        "BUF_strlcat",
        "BUF_strlcpy",
        "BUF_strndup"
    ],
    "buffer/buffer.o": [
        "BUF_MEM_free",
        "BUF_MEM_grow",
        "BUF_MEM_grow_clean",
        "BUF_MEM_new",
        "BUF_reverse"
    ],
    "camellia/cmll_cfb.o": [
        "Camellia_cfb128_encrypt",
        "Camellia_cfb1_encrypt",
        "Camellia_cfb8_encrypt"
    ],
    "camellia/cmll_ctr.o": [
        "Camellia_ctr128_encrypt"
    ],
    "camellia/cmll_ecb.o": [
        "Camellia_ecb_encrypt"
    ],
    "camellia/cmll_misc.o": [
        "Camellia_decrypt",
        "Camellia_encrypt",
        "Camellia_set_key"
    ],
    "camellia/cmll_ofb.o": [
        "Camellia_ofb128_encrypt"
    ],
    "cast/c_cfb64.o": [
        "CAST_cfb64_encrypt"
    ],
    "cast/c_ecb.o": [
        "CAST_ecb_encrypt"
    ],
    "cast/c_enc.o": [
        "CAST_cbc_encrypt",
        "CAST_decrypt",
        "CAST_encrypt"
    ],
    "cast/c_ofb64.o": [
        "CAST_ofb64_encrypt"
    ],
    "cast/c_skey.o": [
        "CAST_set_key"
    ],
    "chacha/chacha.o": [
        "ChaCha",
        "chacha_encrypt_bytes.part.0",
        "ChaCha_set_iv",
        "ChaCha_set_key",
        "CRYPTO_chacha_20"
    ],
    "cmac/cm_ameth.o": [
        "cmac_key_free",
        "cmac_size"
    ],
    "cmac/cm_pmeth.o": [
        "cmac_signctx",
        "cmac_signctx_init",
        "int_update",
        "pkey_cmac_cleanup",
        "pkey_cmac_copy",
        "pkey_cmac_ctrl",
        "pkey_cmac_ctrl_str",
        "pkey_cmac_init",
        "pkey_cmac_keygen"
    ],
    "cmac/cmac.o": [
        "CMAC_CTX_cleanup",
        "CMAC_CTX_copy",
        "CMAC_CTX_free",
        "CMAC_CTX_get0_cipher_ctx",
        "CMAC_CTX_new",
        "CMAC_Final",
        "CMAC_Init",
        "CMAC_resume",
        "CMAC_Update",
        "make_kn"
    ],
    "comp/c_rle.o": [
        "COMP_rle",
        "rle_compress_block",
        "rle_expand_block"
    ],
    "comp/c_zlib.o": [
        "COMP_zlib",
        "COMP_zlib_cleanup"
    ],
    "comp/comp_err.o": [
        "ERR_load_COMP_strings"
    ],
    "comp/comp_lib.o": [
        "COMP_compress_block",
        "COMP_CTX_free",
        "COMP_CTX_new",
        "COMP_expand_block"
    ],
    "conf/conf_api.o": [
        "_CONF_add_string",
        "_CONF_free_data",
        "_CONF_get_section",
        "_CONF_get_section_values",
        "_CONF_get_string",
        "_CONF_new_data",
        "_CONF_new_section",
        "conf_value_LHASH_COMP",
        "conf_value_LHASH_HASH",
        "value_free_hash_LHASH_DOALL_ARG",
        "value_free_stack_LHASH_DOALL"
    ],
    "conf/conf_def.o": [
        "def_create",
        "def_destroy",
        "def_destroy_data",
        "def_dump",
        "def_init_default",
        "def_init_WIN32",
        "def_is_number",
        "def_load",
        "def_load_bio",
        "def_to_int",
        "dump_value_LHASH_DOALL_ARG",
        "eat_alpha_numeric.isra.0",
        "NCONF_default",
        "NCONF_WIN32",
        "str_copy"
    ],
    "conf/conf_err.o": [
        "ERR_load_CONF_strings"
    ],
    "conf/conf_lib.o": [
        "CONF_dump_bio",
        "CONF_dump_fp",
        "CONF_free",
        "CONF_get_number",
        "CONF_get_section",
        "CONF_get_string",
        "CONF_load",
        "CONF_load_bio",
        "CONF_load_fp",
        "CONF_set_default_method",
        "CONF_set_nconf",
        "NCONF_dump_bio",
        "NCONF_dump_fp",
        "NCONF_free",
        "NCONF_free_data",
        "NCONF_get_number_e",
        "NCONF_get_section",
        "NCONF_get_string",
        "NCONF_load",
        "NCONF_load_bio",
        "NCONF_load_fp",
        "NCONF_new"
    ],
    "conf/conf_mall.o": [
        "ecall_OPENSSL_load_builtin_modules",
        "hprintf.constprop.0",
        "OPENSSL_load_builtin_modules"
    ],
    "conf/conf_mod.o": [
        "CONF_get1_default_config_file",
        "CONF_imodule_get_flags",
        "CONF_imodule_get_module",
        "CONF_imodule_get_name",
        "CONF_imodule_get_usr_data",
        "CONF_imodule_get_value",
        "CONF_imodule_set_flags",
        "CONF_imodule_set_usr_data",
        "CONF_module_add",
        "CONF_module_get_usr_data",
        "CONF_module_set_usr_data",
        "CONF_modules_finish",
        "CONF_modules_free",
        "CONF_modules_load",
        "CONF_modules_load_file",
        "CONF_modules_unload",
        "CONF_parse_list",
        "ecall_CONF_modules_unload",
        "hprintf.constprop.0",
        "module_add"
    ],
    "conf/conf_sap.o": [
        "ecall_OPENSSL_config",
        "hprintf.constprop.0",
        "OPENSSL_config",
        "OPENSSL_no_config"
    ],
    "des/cbc_cksm.o": [
        "DES_cbc_cksum"
    ],
    "des/cbc_enc.o": [
        "DES_cbc_encrypt"
    ],
    "des/cfb64ede.o": [
        "DES_ede3_cfb64_encrypt",
        "DES_ede3_cfb_encrypt"
    ],
    "des/cfb64enc.o": [
        "DES_cfb64_encrypt"
    ],
    "des/cfb_enc.o": [
        "DES_cfb_encrypt"
    ],
    "des/des_enc.o": [
        "DES_decrypt3",
        "DES_ede3_cbc_encrypt",
        "DES_encrypt1",
        "DES_encrypt2",
        "DES_encrypt3",
        "DES_ncbc_encrypt"
    ],
    "des/ecb3_enc.o": [
        "DES_ecb3_encrypt"
    ],
    "des/ecb_enc.o": [
        "DES_ecb_encrypt",
        "DES_options"
    ],
    "des/ede_cbcm_enc.o": [
        "DES_ede3_cbcm_encrypt"
    ],
    "des/enc_read.o": [
        "DES_enc_read"
    ],
    "des/enc_writ.o": [
        "DES_enc_write"
    ],
    "des/fcrypt.o": [
        "DES_crypt",
        "DES_fcrypt"
    ],
    "des/fcrypt_b.o": [
        "fcrypt_body"
    ],
    "des/ofb64ede.o": [
        "DES_ede3_ofb64_encrypt"
    ],
    "des/ofb64enc.o": [
        "DES_ofb64_encrypt"
    ],
    "des/ofb_enc.o": [
        "DES_ofb_encrypt"
    ],
    "des/pcbc_enc.o": [
        "DES_pcbc_encrypt"
    ],
    "des/qud_cksm.o": [
        "DES_quad_cksum"
    ],
    "des/rand_key.o": [
        "DES_random_key"
    ],
    "des/set_key.o": [
        "DES_check_key_parity",
        "DES_is_weak_key",
        "DES_key_sched",
        "DES_set_key",
        "DES_set_key_checked",
        "DES_set_key_unchecked",
        "DES_set_odd_parity"
    ],
    "des/str2key.o": [
        "DES_string_to_2keys",
        "DES_string_to_key"
    ],
    "des/xcbc_enc.o": [
        "DES_xcbc_encrypt"
    ],
    "dh/dh_ameth.o": [
        "dh_bits",
        "dh_cmp_parameters",
        "dh_copy_parameters",
        "dh_missing_parameters",
        "dh_param_decode",
        "dh_param_encode",
        "dh_param_print",
        "DHparams_print",
        "dh_private_print",
        "dh_priv_decode",
        "dh_priv_encode",
        "dh_pub_cmp",
        "dh_pub_decode",
        "dh_pub_encode",
        "dh_public_print",
        "do_dh_print.isra.0",
        "int_dh_free",
        "int_dh_size",
        "update_buflen.part.0"
    ],
    "dh/dh_asn1.o": [
        "d2i_DHparams",
        "dh_cb",
        "DHparams_dup",
        "i2d_DHparams"
    ],
    "dh/dh_check.o": [
        "DH_check",
        "DH_check_pub_key"
    ],
    "dh/dh_depr.o": [
        "DH_generate_parameters"
    ],
    "dh/dh_err.o": [
        "ERR_load_DH_strings"
    ],
    "dh/dh_gen.o": [
        "DH_generate_parameters_ex"
    ],
    "dh/dh_key.o": [
        "compute_key",
        "dh_bn_mod_exp",
        "DH_compute_key",
        "dh_finish",
        "DH_generate_key",
        "dh_init",
        "DH_OpenSSL",
        "generate_key"
    ],
    "dh/dh_lib.o": [
        "DH_free",
        "DH_get_default_method",
        "DH_get_ex_data",
        "DH_get_ex_new_index",
        "DH_new",
        "DH_new_method",
        "DH_set_default_method",
        "DH_set_ex_data",
        "DH_set_method",
        "DH_size",
        "DH_up_ref",
        "ecall_DH_free",
        "ecall_DH_new",
        "hprintf.constprop.0"
    ],
    "dh/dh_pmeth.o": [
        "pkey_dh_cleanup",
        "pkey_dh_copy",
        "pkey_dh_ctrl",
        "pkey_dh_ctrl_str",
        "pkey_dh_derive",
        "pkey_dh_init",
        "pkey_dh_keygen",
        "pkey_dh_paramgen"
    ],
    "dh/dh_prn.o": [
        "DHparams_print_fp"
    ],
    "dsa/dsa_ameth.o": [
        "do_dsa_print",
        "dsa_bits",
        "dsa_cmp_parameters",
        "dsa_copy_parameters",
        "dsa_missing_parameters",
        "dsa_param_decode",
        "dsa_param_encode",
        "dsa_param_print",
        "dsa_pkey_ctrl",
        "dsa_priv_decode",
        "dsa_priv_encode",
        "dsa_priv_print",
        "dsa_pub_cmp",
        "dsa_pub_decode",
        "dsa_pub_encode",
        "dsa_pub_print",
        "dsa_sig_print",
        "int_dsa_free",
        "int_dsa_size",
        "old_dsa_priv_decode",
        "old_dsa_priv_encode",
        "update_buflen.part.0"
    ],
    "dsa/dsa_asn1.o": [
        "d2i_DSAparams",
        "d2i_DSAPrivateKey",
        "d2i_DSAPublicKey",
        "d2i_DSA_SIG",
        "dsa_cb",
        "DSAparams_dup",
        "DSA_sign",
        "DSA_verify",
        "i2d_DSAparams",
        "i2d_DSAPrivateKey",
        "i2d_DSAPublicKey",
        "i2d_DSA_SIG",
        "sig_cb"
    ],
    "dsa/dsa_depr.o": [
        "DSA_generate_parameters"
    ],
    "dsa/dsa_err.o": [
        "ERR_load_DSA_strings"
    ],
    "dsa/dsa_gen.o": [
        "dsa_builtin_paramgen",
        "DSA_generate_parameters_ex"
    ],
    "dsa/dsa_key.o": [
        "DSA_generate_key"
    ],
    "dsa/dsa_lib.o": [
        "DSA_dup_DH",
        "DSA_free",
        "DSA_get_default_method",
        "DSA_get_ex_data",
        "DSA_get_ex_new_index",
        "DSA_new",
        "DSA_new_method",
        "DSA_set_default_method",
        "DSA_set_ex_data",
        "DSA_set_method",
        "DSA_size",
        "DSA_up_ref"
    ],
    "dsa/dsa_ossl.o": [
        "dsa_do_sign",
        "dsa_do_verify",
        "dsa_finish",
        "dsa_init",
        "DSA_OpenSSL",
        "dsa_sign_setup"
    ],
    "dsa/dsa_pmeth.o": [
        "pkey_dsa_cleanup",
        "pkey_dsa_copy",
        "pkey_dsa_ctrl",
        "pkey_dsa_ctrl_str",
        "pkey_dsa_init",
        "pkey_dsa_keygen",
        "pkey_dsa_paramgen",
        "pkey_dsa_sign",
        "pkey_dsa_verify"
    ],
    "dsa/dsa_prn.o": [
        "DSAparams_print",
        "DSAparams_print_fp",
        "DSA_print",
        "DSA_print_fp"
    ],
    "dsa/dsa_sign.o": [
        "DSA_do_sign",
        "DSA_SIG_free",
        "DSA_SIG_new",
        "DSA_sign_setup"
    ],
    "dsa/dsa_vrf.o": [
        "DSA_do_verify"
    ],
    "ec/ec2_mult.o": [
        "ec_GF2m_have_precompute_mult",
        "ec_GF2m_montgomery_point_multiply",
        "ec_GF2m_precompute_mult",
        "ec_GF2m_simple_mul"
    ],
    "ec/ec2_oct.o": [
        "ec_GF2m_simple_oct2point",
        "ec_GF2m_simple_point2oct",
        "ec_GF2m_simple_set_compressed_coordinates"
    ],
    "ec/ec2_smpl.o": [
        "ec_GF2m_simple_add",
        "ec_GF2m_simple_cmp",
        "ec_GF2m_simple_dbl",
        "ec_GF2m_simple_field_div",
        "ec_GF2m_simple_field_mul",
        "ec_GF2m_simple_field_sqr",
        "ec_GF2m_simple_group_check_discriminant",
        "ec_GF2m_simple_group_clear_finish",
        "ec_GF2m_simple_group_copy",
        "ec_GF2m_simple_group_finish",
        "ec_GF2m_simple_group_get_curve",
        "ec_GF2m_simple_group_get_degree",
        "ec_GF2m_simple_group_init",
        "ec_GF2m_simple_group_set_curve",
        "ec_GF2m_simple_invert",
        "ec_GF2m_simple_is_at_infinity",
        "ec_GF2m_simple_is_on_curve",
        "ec_GF2m_simple_make_affine",
        "EC_GF2m_simple_method",
        "ec_GF2m_simple_point_clear_finish",
        "ec_GF2m_simple_point_copy",
        "ec_GF2m_simple_point_finish",
        "ec_GF2m_simple_point_get_affine_coordinates",
        "ec_GF2m_simple_point_init",
        "ec_GF2m_simple_point_set_affine_coordinates",
        "ec_GF2m_simple_point_set_to_infinity",
        "ec_GF2m_simple_points_make_affine"
    ],
    "ec/ec_ameth.o": [
        "do_EC_KEY_print",
        "ec_bits",
        "ec_cmp_parameters",
        "ec_copy_parameters",
        "eckey_param2type",
        "eckey_param_decode",
        "eckey_param_encode",
        "eckey_param_print",
        "eckey_priv_decode",
        "eckey_priv_encode",
        "eckey_priv_print",
        "eckey_pub_cmp",
        "eckey_pub_decode",
        "eckey_pub_encode",
        "eckey_pub_print",
        "eckey_type2param",
        "ec_missing_parameters",
        "ec_pkey_ctrl",
        "int_ec_free",
        "int_ec_size",
        "old_ec_priv_decode",
        "old_ec_priv_encode"
    ],
    "ec/ec_asn1.o": [
        "d2i_ECParameters",
        "d2i_ECPKParameters",
        "d2i_ECPKPARAMETERS",
        "d2i_ECPrivateKey",
        "d2i_EC_PRIVATEKEY",
        "ec_asn1_group2pkparameters",
        "ec_asn1_pkparameters2group",
        "EC_GROUP_get_basis_type",
        "EC_GROUP_get_pentanomial_basis",
        "EC_GROUP_get_trinomial_basis",
        "ECPARAMETERS_free",
        "ECPARAMETERS_new",
        "ECPKPARAMETERS_free",
        "ECPKPARAMETERS_new",
        "EC_PRIVATEKEY_free",
        "EC_PRIVATEKEY_new",
        "i2d_ECParameters",
        "i2d_ECPKParameters",
        "i2d_ECPKPARAMETERS",
        "i2d_ECPrivateKey",
        "i2d_EC_PRIVATEKEY",
        "i2o_ECPublicKey",
        "o2i_ECPublicKey",
        "X9_62_CHARACTERISTIC_TWO_free",
        "X9_62_CHARACTERISTIC_TWO_new",
        "X9_62_PENTANOMIAL_free",
        "X9_62_PENTANOMIAL_new"
    ],
    "ec/ec_check.o": [
        "EC_GROUP_check"
    ],
    "ec/ec_curve.o": [
        "EC_curve_nid2nist",
        "EC_curve_nist2nid",
        "EC_get_builtin_curves",
        "EC_GROUP_new_by_curve_name"
    ],
    "ec/ec_cvt.o": [
        "EC_GROUP_new_curve_GF2m",
        "EC_GROUP_new_curve_GFp"
    ],
    "ec/ec_err.o": [
        "ERR_load_EC_strings"
    ],
    "ec/ec_key.o": [
        "ecall_EC_KEY_free",
        "ecall_EC_KEY_new_by_curve_name",
        "EC_KEY_check_key",
        "EC_KEY_clear_flags",
        "EC_KEY_copy",
        "EC_KEY_dup",
        "EC_KEY_free",
        "EC_KEY_generate_key",
        "EC_KEY_get0_group",
        "EC_KEY_get0_private_key",
        "EC_KEY_get0_public_key",
        "EC_KEY_get_conv_form",
        "EC_KEY_get_enc_flags",
        "EC_KEY_get_flags",
        "EC_KEY_get_key_method_data",
        "EC_KEY_insert_key_method_data",
        "EC_KEY_new",
        "EC_KEY_new_by_curve_name",
        "EC_KEY_precompute_mult",
        "EC_KEY_set_asn1_flag",
        "EC_KEY_set_conv_form",
        "EC_KEY_set_enc_flags",
        "EC_KEY_set_flags",
        "EC_KEY_set_group",
        "EC_KEY_set_private_key",
        "EC_KEY_set_public_key",
        "EC_KEY_set_public_key_affine_coordinates",
        "EC_KEY_up_ref",
        "hprintf.constprop.0"
    ],
    "ec/ec_lib.o": [
        "ecall_EC_GROUP_free",
        "EC_EX_DATA_clear_free_all_data",
        "EC_EX_DATA_clear_free_data",
        "EC_EX_DATA_free_all_data",
        "EC_EX_DATA_free_data",
        "EC_EX_DATA_get_data",
        "EC_EX_DATA_set_data",
        "EC_GROUP_check_discriminant",
        "EC_GROUP_clear_free",
        "EC_GROUP_cmp",
        "EC_GROUP_copy",
        "EC_GROUP_dup",
        "EC_GROUP_free",
        "EC_GROUP_get0_generator",
        "EC_GROUP_get0_seed",
        "EC_GROUP_get_asn1_flag",
        "EC_GROUP_get_cofactor",
        "EC_GROUP_get_curve_GF2m",
        "EC_GROUP_get_curve_GFp",
        "EC_GROUP_get_curve_name",
        "EC_GROUP_get_degree",
        "EC_GROUP_get_order",
        "EC_GROUP_get_point_conversion_form",
        "EC_GROUP_get_seed_len",
        "EC_GROUP_have_precompute_mult",
        "EC_GROUP_method_of",
        "EC_GROUP_new",
        "EC_GROUP_precompute_mult",
        "EC_GROUP_set_asn1_flag",
        "EC_GROUP_set_curve_GF2m",
        "EC_GROUP_set_curve_GFp",
        "EC_GROUP_set_curve_name",
        "EC_GROUP_set_generator",
        "EC_GROUP_set_point_conversion_form",
        "EC_GROUP_set_seed",
        "EC_METHOD_get_field_type",
        "ECParameters_dup",
        "EC_POINT_add",
        "EC_POINT_clear_free",
        "EC_POINT_cmp",
        "EC_POINT_copy",
        "EC_POINT_dbl",
        "EC_POINT_dup",
        "EC_POINT_free",
        "EC_POINT_get_affine_coordinates_GF2m",
        "EC_POINT_get_affine_coordinates_GFp",
        "EC_POINT_get_Jprojective_coordinates_GFp",
        "EC_POINT_invert",
        "EC_POINT_is_at_infinity",
        "EC_POINT_is_on_curve",
        "EC_POINT_make_affine",
        "EC_POINT_method_of",
        "EC_POINT_mul",
        "EC_POINT_new",
        "EC_POINT_set_affine_coordinates_GF2m",
        "EC_POINT_set_affine_coordinates_GFp",
        "EC_POINT_set_Jprojective_coordinates_GFp",
        "EC_POINT_set_to_infinity",
        "EC_POINTs_make_affine",
        "EC_POINTs_mul",
        "hprintf.constprop.0"
    ],
    "ec/ec_mult.o": [
        "compute_wNAF",
        "ec_pre_comp_clear_free",
        "ec_pre_comp_dup",
        "ec_pre_comp_free",
        "ec_wNAF_have_precompute_mult",
        "ec_wNAF_mul",
        "ec_wNAF_precompute_mult"
    ],
    "ec/ec_oct.o": [
        "EC_POINT_oct2point",
        "EC_POINT_point2oct",
        "EC_POINT_set_compressed_coordinates_GF2m",
        "EC_POINT_set_compressed_coordinates_GFp"
    ],
    "ec/ec_pmeth.o": [
        "pkey_ec_cleanup",
        "pkey_ec_copy",
        "pkey_ec_ctrl",
        "pkey_ec_ctrl_str",
        "pkey_ec_derive",
        "pkey_ec_init",
        "pkey_ec_keygen",
        "pkey_ec_paramgen",
        "pkey_ec_sign",
        "pkey_ec_verify"
    ],
    "ec/ec_print.o": [
        "EC_POINT_bn2point",
        "EC_POINT_hex2point",
        "EC_POINT_point2bn",
        "EC_POINT_point2hex"
    ],
    "ec/eck_prn.o": [
        "EC_KEY_print",
        "EC_KEY_print_fp",
        "ECParameters_print",
        "ECParameters_print_fp",
        "ECPKParameters_print",
        "ECPKParameters_print_fp"
    ],
    "ec/ecp_mont.o": [
        "ec_GFp_mont_field_decode",
        "ec_GFp_mont_field_encode",
        "ec_GFp_mont_field_mul",
        "ec_GFp_mont_field_set_to_one",
        "ec_GFp_mont_field_sqr",
        "ec_GFp_mont_group_clear_finish",
        "ec_GFp_mont_group_copy",
        "ec_GFp_mont_group_finish",
        "ec_GFp_mont_group_init",
        "ec_GFp_mont_group_set_curve",
        "EC_GFp_mont_method"
    ],
    "ec/ecp_nist.o": [
        "ec_GFp_nist_field_mul",
        "ec_GFp_nist_field_sqr",
        "ec_GFp_nist_group_copy",
        "ec_GFp_nist_group_set_curve",
        "EC_GFp_nist_method"
    ],
    "ec/ecp_oct.o": [
        "ec_GFp_simple_oct2point",
        "ec_GFp_simple_point2oct",
        "ec_GFp_simple_set_compressed_coordinates"
    ],
    "ec/ecp_smpl.o": [
        "ec_GFp_simple_add",
        "ec_GFp_simple_cmp",
        "ec_GFp_simple_dbl",
        "ec_GFp_simple_field_mul",
        "ec_GFp_simple_field_sqr",
        "ec_GFp_simple_get_Jprojective_coordinates_GFp",
        "ec_GFp_simple_group_check_discriminant",
        "ec_GFp_simple_group_clear_finish",
        "ec_GFp_simple_group_copy",
        "ec_GFp_simple_group_finish",
        "ec_GFp_simple_group_get_curve",
        "ec_GFp_simple_group_get_degree",
        "ec_GFp_simple_group_init",
        "ec_GFp_simple_group_set_curve",
        "ec_GFp_simple_invert",
        "ec_GFp_simple_is_at_infinity",
        "ec_GFp_simple_is_on_curve",
        "ec_GFp_simple_make_affine",
        "EC_GFp_simple_method",
        "ec_GFp_simple_point_clear_finish",
        "ec_GFp_simple_point_copy",
        "ec_GFp_simple_point_finish",
        "ec_GFp_simple_point_get_affine_coordinates",
        "ec_GFp_simple_point_init",
        "ec_GFp_simple_point_set_affine_coordinates",
        "ec_GFp_simple_point_set_to_infinity",
        "ec_GFp_simple_points_make_affine",
        "ec_GFp_simple_set_Jprojective_coordinates_GFp"
    ],
    "ecdh/ech_err.o": [
        "ERR_load_ECDH_strings"
    ],
    "ecdh/ech_key.o": [
        "ecdh_compute_key",
        "ECDH_compute_key",
        "ECDH_OpenSSL"
    ],
    "ecdh/ech_lib.o": [
        "ecdh_check",
        "ecdh_data_dup",
        "ecdh_data_free",
        "ECDH_DATA_new_method.constprop.0",
        "ECDH_get_default_method",
        "ECDH_get_ex_data",
        "ECDH_get_ex_new_index",
        "ECDH_set_default_method",
        "ECDH_set_ex_data",
        "ECDH_set_method",
        "ECDH_size"
    ],
    "ecdsa/ecs_asn1.o": [
        "d2i_ECDSA_SIG",
        "ECDSA_SIG_free",
        "ECDSA_SIG_new",
        "i2d_ECDSA_SIG"
    ],
    "ecdsa/ecs_err.o": [
        "ERR_load_ECDSA_strings"
    ],
    "ecdsa/ecs_lib.o": [
        "ecdsa_check",
        "ecdsa_data_dup",
        "ecdsa_data_free",
        "ECDSA_DATA_new_method.constprop.0",
        "ECDSA_get_default_method",
        "ECDSA_get_ex_data",
        "ECDSA_get_ex_new_index",
        "ECDSA_set_default_method",
        "ECDSA_set_ex_data",
        "ECDSA_set_method",
        "ECDSA_size"
    ],
    "ecdsa/ecs_ossl.o": [
        "ecdsa_do_sign",
        "ecdsa_do_verify",
        "ECDSA_OpenSSL",
        "ecdsa_sign_setup"
    ],
    "ecdsa/ecs_sign.o": [
        "ECDSA_do_sign",
        "ECDSA_do_sign_ex",
        "ECDSA_sign",
        "ECDSA_sign_ex",
        "ECDSA_sign_setup"
    ],
    "ecdsa/ecs_vrf.o": [
        "ECDSA_do_verify",
        "ECDSA_verify"
    ],
    "engine/eng_all.o": [
        "ecall_ENGINE_load_builtin_engines",
        "ENGINE_load_builtin_engines",
        "hprintf.constprop.0"
    ],
    "engine/eng_cnf.o": [
        "ENGINE_add_conf_module",
        "int_engine_init",
        "int_engine_module_finish",
        "int_engine_module_init"
    ],
    "engine/eng_ctrl.o": [
        "ENGINE_cmd_is_executable",
        "ENGINE_ctrl",
        "ENGINE_ctrl_cmd",
        "ENGINE_ctrl_cmd_string"
    ],
    "engine/eng_dyn.o": [
        "ENGINE_load_dynamic"
    ],
    "engine/eng_err.o": [
        "ERR_load_ENGINE_strings"
    ],
    "engine/eng_fat.o": [
        "ENGINE_register_all_complete",
        "ENGINE_register_complete",
        "ENGINE_set_default",
        "ENGINE_set_default_string",
        "int_def_cb"
    ],
    "engine/eng_init.o": [
        "ENGINE_finish",
        "ENGINE_init",
        "engine_unlocked_finish",
        "engine_unlocked_init"
    ],
    "engine/eng_lib.o": [
        "ecall_ENGINE_get_id",
        "ecall_ENGINE_get_name",
        "ENGINE_cleanup",
        "engine_cleanup_add_first",
        "engine_cleanup_add_last",
        "engine_cleanup_cb_free",
        "ENGINE_free",
        "engine_free_util",
        "ENGINE_get_cmd_defns",
        "ENGINE_get_ctrl_function",
        "ENGINE_get_destroy_function",
        "ENGINE_get_ex_data",
        "ENGINE_get_ex_new_index",
        "ENGINE_get_finish_function",
        "ENGINE_get_flags",
        "ENGINE_get_id",
        "ENGINE_get_init_function",
        "ENGINE_get_name",
        "ENGINE_get_static_state",
        "ENGINE_new",
        "engine_set_all_null",
        "ENGINE_set_cmd_defns",
        "ENGINE_set_ctrl_function",
        "ENGINE_set_destroy_function",
        "ENGINE_set_ex_data",
        "ENGINE_set_finish_function",
        "ENGINE_set_flags",
        "ENGINE_set_id",
        "ENGINE_set_init_function",
        "ENGINE_set_name",
        "hprintf.constprop.0"
    ],
    "engine/eng_list.o": [
        "ENGINE_add",
        "ENGINE_by_id",
        "ENGINE_get_first",
        "ENGINE_get_last",
        "ENGINE_get_next",
        "ENGINE_get_prev",
        "engine_list_cleanup",
        "ENGINE_remove",
        "ENGINE_up_ref"
    ],
    "engine/eng_openssl.o": [
        "ENGINE_load_openssl",
        "openssl_ciphers",
        "openssl_digests",
        "openssl_load_privkey",
        "test_rc4_cipher",
        "test_rc4_init_key",
        "test_sha1_final",
        "test_sha1_init",
        "test_sha1_update"
    ],
    "engine/eng_pkey.o": [
        "ENGINE_get_load_privkey_function",
        "ENGINE_get_load_pubkey_function",
        "ENGINE_get_ssl_client_cert_function",
        "ENGINE_load_private_key",
        "ENGINE_load_public_key",
        "ENGINE_load_ssl_client_cert",
        "ENGINE_set_load_privkey_function",
        "ENGINE_set_load_pubkey_function",
        "ENGINE_set_load_ssl_client_cert_function"
    ],
    "engine/eng_table.o": [
        "ENGINE_get_table_flags",
        "engine_pile_LHASH_COMP",
        "engine_pile_LHASH_HASH",
        "ENGINE_set_table_flags",
        "engine_table_cleanup",
        "engine_table_doall",
        "engine_table_register",
        "engine_table_select",
        "engine_table_unregister",
        "int_cb_LHASH_DOALL_ARG",
        "int_cleanup_cb_LHASH_DOALL",
        "int_unregister_cb_LHASH_DOALL_ARG"
    ],
    "engine/tb_asnmth.o": [
        "ENGINE_get_pkey_asn1_meth",
        "ENGINE_get_pkey_asn1_meth_engine",
        "ENGINE_get_pkey_asn1_meths",
        "ENGINE_get_pkey_asn1_meth_str",
        "ENGINE_pkey_asn1_find_str",
        "engine_pkey_asn1_meths_free",
        "ENGINE_register_all_pkey_asn1_meths",
        "ENGINE_register_pkey_asn1_meths",
        "ENGINE_set_default_pkey_asn1_meths",
        "ENGINE_set_pkey_asn1_meths",
        "engine_unregister_all_pkey_asn1_meths",
        "ENGINE_unregister_pkey_asn1_meths",
        "look_str_cb"
    ],
    "engine/tb_cipher.o": [
        "ENGINE_get_cipher",
        "ENGINE_get_cipher_engine",
        "ENGINE_get_ciphers",
        "ENGINE_register_all_ciphers",
        "ENGINE_register_ciphers",
        "ENGINE_set_ciphers",
        "ENGINE_set_default_ciphers",
        "engine_unregister_all_ciphers",
        "ENGINE_unregister_ciphers"
    ],
    "engine/tb_dh.o": [
        "ENGINE_get_default_DH",
        "ENGINE_get_DH",
        "ENGINE_register_all_DH",
        "ENGINE_register_DH",
        "ENGINE_set_default_DH",
        "ENGINE_set_DH",
        "engine_unregister_all_DH",
        "ENGINE_unregister_DH"
    ],
    "engine/tb_digest.o": [
        "ENGINE_get_digest",
        "ENGINE_get_digest_engine",
        "ENGINE_get_digests",
        "ENGINE_register_all_digests",
        "ENGINE_register_digests",
        "ENGINE_set_default_digests",
        "ENGINE_set_digests",
        "engine_unregister_all_digests",
        "ENGINE_unregister_digests"
    ],
    "engine/tb_dsa.o": [
        "ENGINE_get_default_DSA",
        "ENGINE_get_DSA",
        "ENGINE_register_all_DSA",
        "ENGINE_register_DSA",
        "ENGINE_set_default_DSA",
        "ENGINE_set_DSA",
        "engine_unregister_all_DSA",
        "ENGINE_unregister_DSA"
    ],
    "engine/tb_ecdh.o": [
        "ENGINE_get_default_ECDH",
        "ENGINE_get_ECDH",
        "ENGINE_register_all_ECDH",
        "ENGINE_register_ECDH",
        "ENGINE_set_default_ECDH",
        "ENGINE_set_ECDH",
        "engine_unregister_all_ECDH",
        "ENGINE_unregister_ECDH"
    ],
    "engine/tb_ecdsa.o": [
        "ENGINE_get_default_ECDSA",
        "ENGINE_get_ECDSA",
        "ENGINE_register_all_ECDSA",
        "ENGINE_register_ECDSA",
        "ENGINE_set_default_ECDSA",
        "ENGINE_set_ECDSA",
        "engine_unregister_all_ECDSA",
        "ENGINE_unregister_ECDSA"
    ],
    "engine/tb_pkmeth.o": [
        "ENGINE_get_pkey_meth",
        "ENGINE_get_pkey_meth_engine",
        "ENGINE_get_pkey_meths",
        "engine_pkey_meths_free",
        "ENGINE_register_all_pkey_meths",
        "ENGINE_register_pkey_meths",
        "ENGINE_set_default_pkey_meths",
        "ENGINE_set_pkey_meths",
        "engine_unregister_all_pkey_meths",
        "ENGINE_unregister_pkey_meths"
    ],
    "engine/tb_rand.o": [
        "ENGINE_get_default_RAND",
        "ENGINE_get_RAND",
        "ENGINE_register_all_RAND",
        "ENGINE_register_RAND",
        "ENGINE_set_default_RAND",
        "ENGINE_set_RAND",
        "engine_unregister_all_RAND",
        "ENGINE_unregister_RAND"
    ],
    "engine/tb_rsa.o": [
        "ENGINE_get_default_RSA",
        "ENGINE_get_RSA",
        "ENGINE_register_all_RSA",
        "ENGINE_register_RSA",
        "ENGINE_set_default_RSA",
        "ENGINE_set_RSA",
        "engine_unregister_all_RSA",
        "ENGINE_unregister_RSA"
    ],
    "engine/tb_store.o": [
        "ENGINE_get_STORE",
        "ENGINE_register_all_STORE",
        "ENGINE_register_STORE",
        "ENGINE_set_STORE",
        "engine_unregister_all_STORE",
        "ENGINE_unregister_STORE"
    ],
    "err/err.o": [
        "ecall_ERR_clear_error",
        "ecall_ERR_error_string",
        "ecall_ERR_error_string_n",
        "ecall_ERR_free_strings",
        "ecall_ERR_get_error",
        "ecall_ERR_peek_error",
        "ecall_ERR_peek_error_line_data",
        "ecall_ERR_peek_last_error",
        "ecall_ERR_remove_state",
        "ERR_add_error_data",
        "ERR_add_error_vdata",
        "ERR_asprintf_error_data",
        "ERR_clear_error",
        "ERR_error_string",
        "ERR_error_string_n",
        "err_fns_check",
        "ERR_free_strings",
        "ERR_func_error_string",
        "ERR_get_error",
        "ERR_get_error_line",
        "ERR_get_error_line_data",
        "ERR_get_err_state_table",
        "ERR_get_implementation",
        "ERR_get_next_error_library",
        "ERR_get_state",
        "ERR_get_string_table",
        "ERR_lib_error_string",
        "ERR_load_ERR_strings",
        "ERR_load_strings",
        "ERR_peek_error",
        "ERR_peek_error_line",
        "ERR_peek_error_line_data",
        "ERR_peek_last_error",
        "ERR_peek_last_error_line",
        "ERR_peek_last_error_line_data",
        "ERR_pop_to_mark",
        "ERR_put_error",
        "ERR_reason_error_string",
        "ERR_release_err_state_table",
        "ERR_remove_state",
        "ERR_remove_thread_state",
        "ERR_set_error_data",
        "ERR_set_implementation",
        "ERR_set_mark",
        "ERR_STATE_free.part.0",
        "err_state_LHASH_COMP",
        "err_state_LHASH_HASH",
        "err_string_data_LHASH_COMP",
        "err_string_data_LHASH_HASH",
        "ERR_unload_strings",
        "get_error_values",
        "hprintf.constprop.0",
        "int_err_del",
        "int_err_del_item",
        "int_err_get",
        "int_err_get_item",
        "int_err_get_next_lib",
        "int_err_set_item",
        "int_thread_del_item",
        "int_thread_get",
        "int_thread_get_item",
        "int_thread_release",
        "int_thread_set_item"
    ],
    "err/err_all.o": [
        "ecall_ERR_load_crypto_strings",
        "ERR_load_crypto_strings",
        "hprintf.constprop.0"
    ],
    "err/err_prn.o": [
        "ERR_print_errors",
        "ERR_print_errors_cb",
        "ERR_print_errors_fp",
        "print_bio",
        "print_fp"
    ],
    "evp/bio_b64.o": [
        "b64_callback_ctrl",
        "b64_ctrl",
        "b64_free",
        "b64_new",
        "b64_puts",
        "b64_read",
        "b64_write",
        "BIO_f_base64"
    ],
    "evp/bio_enc.o": [
        "BIO_f_cipher",
        "BIO_set_cipher",
        "enc_callback_ctrl",
        "enc_ctrl",
        "enc_free",
        "enc_new",
        "enc_read",
        "enc_write"
    ],
    "evp/bio_md.o": [
        "BIO_f_md",
        "md_callback_ctrl",
        "md_ctrl",
        "md_free",
        "md_gets",
        "md_new",
        "md_read",
        "md_write"
    ],
    "evp/c_all.o": [
        "ecall_OPENSSL_add_all_algorithms_noconf",
        "hprintf.constprop.0",
        "OPENSSL_add_all_algorithms_conf",
        "OPENSSL_add_all_algorithms_noconf",
        "OpenSSL_add_all_ciphers",
        "OpenSSL_add_all_digests"
    ],
    "evp/digest.o": [
        "ecall_EVP_DigestFinal_ex",
        "ecall_EVP_DigestInit_ex",
        "ecall_EVP_DigestUpdate",
        "ecall_EVP_MD_CTX_create",
        "ecall_EVP_MD_CTX_destroy",
        "EVP_Digest",
        "EVP_DigestFinal",
        "EVP_DigestFinal_ex",
        "EVP_DigestInit",
        "EVP_DigestInit_ex",
        "EVP_DigestUpdate",
        "EVP_MD_CTX_cleanup",
        "EVP_MD_CTX_copy",
        "EVP_MD_CTX_copy_ex",
        "EVP_MD_CTX_create",
        "EVP_MD_CTX_ctrl",
        "EVP_MD_CTX_destroy",
        "EVP_MD_CTX_init",
        "hprintf.constprop.0"
    ],
    "evp/e_aes.o": [
        "aead_aes_gcm_cleanup",
        "aead_aes_gcm_init",
        "aead_aes_gcm_open",
        "aead_aes_gcm_seal",
        "aes_cbc_cipher",
        "aes_ccm_cipher",
        "aes_ccm_ctrl",
        "aes_ccm_init_key",
        "aes_cfb1_cipher",
        "aes_cfb8_cipher",
        "aes_cfb_cipher",
        "aes_ctr_cipher",
        "aes_ecb_cipher",
        "aes_gcm_cipher",
        "aes_gcm_cleanup",
        "aes_gcm_ctrl",
        "aes_gcm_init_key",
        "aes_gcm_set_key",
        "aes_init_key",
        "aesni_cbc_cipher",
        "aesni_ccm_init_key",
        "aesni_ecb_cipher",
        "aesni_gcm_init_key",
        "aesni_init_key",
        "aesni_xts_init_key",
        "aes_ofb_cipher",
        "aes_xts_cipher",
        "aes_xts_ctrl",
        "aes_xts_init_key",
        "EVP_aead_aes_128_gcm",
        "EVP_aead_aes_256_gcm",
        "EVP_aes_128_cbc",
        "EVP_aes_128_ccm",
        "EVP_aes_128_cfb1",
        "EVP_aes_128_cfb128",
        "EVP_aes_128_cfb8",
        "EVP_aes_128_ctr",
        "EVP_aes_128_ecb",
        "EVP_aes_128_gcm",
        "EVP_aes_128_ofb",
        "EVP_aes_128_xts",
        "EVP_aes_192_cbc",
        "EVP_aes_192_ccm",
        "EVP_aes_192_cfb1",
        "EVP_aes_192_cfb128",
        "EVP_aes_192_cfb8",
        "EVP_aes_192_ctr",
        "EVP_aes_192_ecb",
        "EVP_aes_192_gcm",
        "EVP_aes_192_ofb",
        "EVP_aes_256_cbc",
        "EVP_aes_256_ccm",
        "EVP_aes_256_cfb1",
        "EVP_aes_256_cfb128",
        "EVP_aes_256_cfb8",
        "EVP_aes_256_ctr",
        "EVP_aes_256_ecb",
        "EVP_aes_256_gcm",
        "EVP_aes_256_ofb",
        "EVP_aes_256_xts"
    ],
    "evp/e_aes_cbc_hmac_sha1.o": [
        "aesni_cbc_hmac_sha1_cipher",
        "aesni_cbc_hmac_sha1_ctrl",
        "aesni_cbc_hmac_sha1_init_key",
        "EVP_aes_128_cbc_hmac_sha1",
        "EVP_aes_256_cbc_hmac_sha1",
        "sha1_update"
    ],
    "evp/e_bf.o": [
        "bf_cbc_cipher",
        "bf_cfb64_cipher",
        "bf_ecb_cipher",
        "bf_init_key",
        "bf_ofb_cipher",
        "EVP_bf_cbc",
        "EVP_bf_cfb64",
        "EVP_bf_ecb",
        "EVP_bf_ofb"
    ],
    "evp/e_camellia.o": [
        "camellia_128_cbc_cipher",
        "camellia_128_cfb128_cipher",
        "camellia_128_cfb1_cipher",
        "camellia_128_cfb8_cipher",
        "camellia_128_ecb_cipher",
        "camellia_128_ofb_cipher",
        "camellia_192_cbc_cipher",
        "camellia_192_cfb128_cipher",
        "camellia_192_cfb1_cipher",
        "camellia_192_cfb8_cipher",
        "camellia_192_ecb_cipher",
        "camellia_192_ofb_cipher",
        "camellia_256_cbc_cipher",
        "camellia_256_cfb128_cipher",
        "camellia_256_cfb1_cipher",
        "camellia_256_cfb8_cipher",
        "camellia_256_ecb_cipher",
        "camellia_256_ofb_cipher",
        "camellia_init_key",
        "EVP_camellia_128_cbc",
        "EVP_camellia_128_cfb1",
        "EVP_camellia_128_cfb128",
        "EVP_camellia_128_cfb8",
        "EVP_camellia_128_ecb",
        "EVP_camellia_128_ofb",
        "EVP_camellia_192_cbc",
        "EVP_camellia_192_cfb1",
        "EVP_camellia_192_cfb128",
        "EVP_camellia_192_cfb8",
        "EVP_camellia_192_ecb",
        "EVP_camellia_192_ofb",
        "EVP_camellia_256_cbc",
        "EVP_camellia_256_cfb1",
        "EVP_camellia_256_cfb128",
        "EVP_camellia_256_cfb8",
        "EVP_camellia_256_ecb",
        "EVP_camellia_256_ofb"
    ],
    "evp/e_cast.o": [
        "cast5_cbc_cipher",
        "cast5_cfb64_cipher",
        "cast5_ecb_cipher",
        "cast5_ofb_cipher",
        "cast_init_key",
        "EVP_cast5_cbc",
        "EVP_cast5_cfb64",
        "EVP_cast5_ecb",
        "EVP_cast5_ofb"
    ],
    "evp/e_chacha.o": [
        "chacha_cipher",
        "chacha_init",
        "EVP_chacha20"
    ],
    "evp/e_chacha20poly1305.o": [
        "aead_chacha20_poly1305_cleanup",
        "aead_chacha20_poly1305_init",
        "aead_chacha20_poly1305_open",
        "aead_chacha20_poly1305_seal",
        "EVP_aead_chacha20_poly1305",
        "EVP_aead_chacha20_poly1305_old",
        "poly1305_update_with_length",
        "poly1305_update_with_pad16"
    ],
    "evp/e_des.o": [
        "des_cbc_cipher",
        "des_cfb1_cipher",
        "des_cfb64_cipher",
        "des_cfb8_cipher",
        "des_ctrl",
        "des_ecb_cipher",
        "des_init_key",
        "des_ofb_cipher",
        "EVP_des_cbc",
        "EVP_des_cfb1",
        "EVP_des_cfb64",
        "EVP_des_cfb8",
        "EVP_des_ecb",
        "EVP_des_ofb"
    ],
    "evp/e_des3.o": [
        "des3_ctrl",
        "des_ede3_cfb1_cipher",
        "des_ede3_cfb8_cipher",
        "des_ede3_init_key",
        "des_ede_cbc_cipher",
        "des_ede_cfb64_cipher",
        "des_ede_ecb_cipher",
        "des_ede_init_key",
        "des_ede_ofb_cipher",
        "EVP_des_ede",
        "EVP_des_ede3",
        "EVP_des_ede3_cbc",
        "EVP_des_ede3_cfb1",
        "EVP_des_ede3_cfb64",
        "EVP_des_ede3_cfb8",
        "EVP_des_ede3_ecb",
        "EVP_des_ede3_ofb",
        "EVP_des_ede_cbc",
        "EVP_des_ede_cfb64",
        "EVP_des_ede_ecb",
        "EVP_des_ede_ofb"
    ],
    "evp/e_gost2814789.o": [
        "EVP_gost2814789_cfb64",
        "EVP_gost2814789_cnt",
        "EVP_gost2814789_ecb",
        "gost2814789_cfb64_cipher",
        "gost2814789_cnt_cipher",
        "gost2814789_ctl",
        "gost2814789_ecb_cipher",
        "gost2814789_get_asn1_params",
        "gost2814789_init_key",
        "gost2814789_set_asn1_params"
    ],
    "evp/e_idea.o": [
        "EVP_idea_cbc",
        "EVP_idea_cfb64",
        "EVP_idea_ecb",
        "EVP_idea_ofb",
        "idea_cbc_cipher",
        "idea_cfb64_cipher",
        "idea_ecb_cipher",
        "idea_init_key",
        "idea_ofb_cipher"
    ],
    "evp/e_null.o": [
        "EVP_enc_null",
        "null_cipher",
        "null_init_key"
    ],
    "evp/e_old.o": [
        "EVP_aes_128_cfb",
        "EVP_aes_192_cfb",
        "EVP_aes_256_cfb",
        "EVP_bf_cfb",
        "EVP_cast5_cfb",
        "EVP_des_cfb",
        "EVP_des_ede3_cfb",
        "EVP_des_ede_cfb",
        "EVP_idea_cfb",
        "EVP_rc2_cfb"
    ],
    "evp/e_rc2.o": [
        "EVP_rc2_40_cbc",
        "EVP_rc2_64_cbc",
        "EVP_rc2_cbc",
        "EVP_rc2_cfb64",
        "EVP_rc2_ecb",
        "EVP_rc2_ofb",
        "rc2_cbc_cipher",
        "rc2_cfb64_cipher",
        "rc2_ctrl",
        "rc2_ecb_cipher",
        "rc2_get_asn1_type_and_iv",
        "rc2_init_key",
        "rc2_ofb_cipher",
        "rc2_set_asn1_type_and_iv"
    ],
    "evp/e_rc4.o": [
        "EVP_rc4",
        "EVP_rc4_40",
        "rc4_cipher",
        "rc4_init_key"
    ],
    "evp/e_rc4_hmac_md5.o": [
        "EVP_rc4_hmac_md5",
        "rc4_hmac_md5_cipher",
        "rc4_hmac_md5_ctrl",
        "rc4_hmac_md5_init_key"
    ],
    "evp/e_xcbc_d.o": [
        "desx_cbc_cipher",
        "desx_cbc_init_key",
        "EVP_desx_cbc"
    ],
    "evp/encode.o": [
        "EVP_DecodeBlock",
        "EVP_DecodeFinal",
        "EVP_DecodeInit",
        "EVP_DecodeUpdate",
        "EVP_EncodeBlock",
        "EVP_EncodeFinal",
        "EVP_EncodeInit",
        "EVP_EncodeUpdate"
    ],
    "evp/evp_aead.o": [
        "EVP_AEAD_CTX_cleanup",
        "EVP_AEAD_CTX_init",
        "EVP_AEAD_CTX_open",
        "EVP_AEAD_CTX_seal",
        "EVP_AEAD_key_length",
        "EVP_AEAD_max_overhead",
        "EVP_AEAD_max_tag_len",
        "EVP_AEAD_nonce_length"
    ],
    "evp/evp_enc.o": [
        "EVP_CIPHER_CTX_cleanup",
        "EVP_CIPHER_CTX_copy",
        "EVP_CIPHER_CTX_ctrl",
        "EVP_CIPHER_CTX_free",
        "EVP_CIPHER_CTX_init",
        "EVP_CIPHER_CTX_new",
        "EVP_CIPHER_CTX_rand_key",
        "EVP_CIPHER_CTX_set_key_length",
        "EVP_CIPHER_CTX_set_padding",
        "EVP_CipherFinal",
        "EVP_CipherFinal_ex",
        "EVP_CipherInit",
        "EVP_CipherInit_ex",
        "EVP_CipherUpdate",
        "EVP_DecryptFinal",
        "EVP_DecryptFinal_ex",
        "EVP_DecryptInit",
        "EVP_DecryptInit_ex",
        "EVP_DecryptUpdate",
        "EVP_EncryptFinal",
        "EVP_EncryptFinal_ex",
        "EVP_EncryptInit",
        "EVP_EncryptInit_ex",
        "EVP_EncryptUpdate"
    ],
    "evp/evp_err.o": [
        "ERR_load_EVP_strings"
    ],
    "evp/evp_key.o": [
        "EVP_BytesToKey",
        "EVP_get_pw_prompt",
        "EVP_read_pw_string",
        "EVP_read_pw_string_min",
        "EVP_set_pw_prompt"
    ],
    "evp/evp_lib.o": [
        "ecall_EVP_MD_type",
        "EVP_Cipher",
        "EVP_CIPHER_asn1_to_param",
        "EVP_CIPHER_block_size",
        "EVP_CIPHER_CTX_block_size",
        "EVP_CIPHER_CTX_cipher",
        "EVP_CIPHER_CTX_clear_flags",
        "EVP_CIPHER_CTX_flags",
        "EVP_CIPHER_CTX_get_app_data",
        "EVP_CIPHER_CTX_iv_length",
        "EVP_CIPHER_CTX_key_length",
        "EVP_CIPHER_CTX_nid",
        "EVP_CIPHER_CTX_set_app_data",
        "EVP_CIPHER_CTX_set_flags",
        "EVP_CIPHER_CTX_test_flags",
        "EVP_CIPHER_flags",
        "EVP_CIPHER_get_asn1_iv",
        "EVP_CIPHER_iv_length",
        "EVP_CIPHER_key_length",
        "EVP_CIPHER_nid",
        "EVP_CIPHER_param_to_asn1",
        "EVP_CIPHER_set_asn1_iv",
        "EVP_CIPHER_type",
        "EVP_MD_block_size",
        "EVP_MD_CTX_clear_flags",
        "EVP_MD_CTX_md",
        "EVP_MD_CTX_set_flags",
        "EVP_MD_CTX_test_flags",
        "EVP_MD_flags",
        "EVP_MD_pkey_type",
        "EVP_MD_size",
        "EVP_MD_type",
        "hprintf.constprop.0"
    ],
    "evp/evp_pbe.o": [
        "EVP_PBE_alg_add",
        "EVP_PBE_alg_add_type",
        "EVP_PBE_CipherInit",
        "EVP_PBE_cleanup",
        "EVP_PBE_find",
        "EVP_PBE_find.part.0",
        "free_evp_pbe_ctl",
        "pbe2_cmp_BSEARCH_CMP_FN",
        "pbe_cmp"
    ],
    "evp/evp_pkey.o": [
        "EVP_PKCS82PKEY",
        "EVP_PKEY2PKCS8",
        "EVP_PKEY2PKCS8_broken",
        "EVP_PKEY_add1_attr",
        "EVP_PKEY_add1_attr_by_NID",
        "EVP_PKEY_add1_attr_by_OBJ",
        "EVP_PKEY_add1_attr_by_txt",
        "EVP_PKEY_delete_attr",
        "EVP_PKEY_get_attr",
        "EVP_PKEY_get_attr_by_NID",
        "EVP_PKEY_get_attr_by_OBJ",
        "EVP_PKEY_get_attr_count",
        "PKCS8_set_broken"
    ],
    "evp/m_dss.o": [
        "EVP_dss",
        "final",
        "init",
        "update"
    ],
    "evp/m_dss1.o": [
        "EVP_dss1",
        "final",
        "init",
        "update"
    ],
    "evp/m_ecdsa.o": [
        "EVP_ecdsa",
        "final",
        "init",
        "update"
    ],
    "evp/m_gost2814789.o": [
        "EVP_gost2814789imit",
        "gost2814789_final",
        "gost2814789_init",
        "gost2814789_md_ctrl",
        "gost2814789_update"
    ],
    "evp/m_gostr341194.o": [
        "EVP_gostr341194",
        "gostr341194_final",
        "gostr341194_init",
        "gostr341194_update"
    ],
    "evp/m_md4.o": [
        "EVP_md4",
        "final",
        "init",
        "update"
    ],
    "evp/m_md5.o": [
        "EVP_md5",
        "final",
        "init",
        "update"
    ],
    "evp/m_null.o": [
        "EVP_md_null",
        "final",
        "init",
        "update"
    ],
    "evp/m_ripemd.o": [
        "EVP_ripemd160",
        "final",
        "init",
        "update"
    ],
    "evp/m_sha1.o": [
        "ecall_EVP_sha1",
        "EVP_sha1",
        "EVP_sha224",
        "EVP_sha256",
        "EVP_sha384",
        "EVP_sha512",
        "final",
        "final256",
        "final512",
        "hprintf.constprop.0",
        "init",
        "init224",
        "init256",
        "init384",
        "init512",
        "update",
        "update256",
        "update512"
    ],
    "evp/m_sigver.o": [
        "do_sigver_init",
        "EVP_DigestSignFinal",
        "EVP_DigestSignInit",
        "EVP_DigestVerifyFinal",
        "EVP_DigestVerifyInit"
    ],
    "evp/m_streebog.o": [
        "EVP_streebog256",
        "EVP_streebog512",
        "streebog_final256",
        "streebog_final512",
        "streebog_init256",
        "streebog_init512",
        "streebog_update256",
        "streebog_update512"
    ],
    "evp/m_wp.o": [
        "EVP_whirlpool",
        "final",
        "init",
        "update"
    ],
    "evp/names.o": [
        "do_all_cipher_fn",
        "do_all_md_fn",
        "ecall_EVP_cleanup",
        "ecall_EVP_get_digestbyname",
        "EVP_add_cipher",
        "EVP_add_digest",
        "EVP_CIPHER_do_all",
        "EVP_CIPHER_do_all_sorted",
        "EVP_cleanup",
        "EVP_get_cipherbyname",
        "EVP_get_digestbyname",
        "EVP_MD_do_all",
        "EVP_MD_do_all_sorted",
        "hprintf.constprop.0"
    ],
    "evp/p5_crpt.o": [
        "PKCS5_PBE_add",
        "PKCS5_PBE_keyivgen"
    ],
    "evp/p5_crpt2.o": [
        "PKCS5_PBKDF2_HMAC",
        "PKCS5_PBKDF2_HMAC_SHA1",
        "PKCS5_v2_PBE_keyivgen",
        "PKCS5_v2_PBKDF2_keyivgen"
    ],
    "evp/p_dec.o": [
        "EVP_PKEY_decrypt_old"
    ],
    "evp/p_enc.o": [
        "EVP_PKEY_encrypt_old"
    ],
    "evp/p_lib.o": [
        "ecall_EVP_PKEY_bits",
        "ecall_EVP_PKEY_free",
        "ecall_EVP_PKEY_type",
        "EVP_PKEY_assign",
        "EVP_PKEY_base_id",
        "EVP_PKEY_bits",
        "EVP_PKEY_cmp",
        "EVP_PKEY_cmp_parameters",
        "EVP_PKEY_copy_parameters",
        "EVP_PKEY_free",
        "EVP_PKEY_free_it",
        "EVP_PKEY_get0",
        "EVP_PKEY_get1_DH",
        "EVP_PKEY_get1_DSA",
        "EVP_PKEY_get1_EC_KEY",
        "EVP_PKEY_get1_RSA",
        "EVP_PKEY_get_default_digest_nid",
        "EVP_PKEY_id",
        "EVP_PKEY_missing_parameters",
        "EVP_PKEY_new",
        "EVP_PKEY_print_params",
        "EVP_PKEY_print_private",
        "EVP_PKEY_print_public",
        "EVP_PKEY_save_parameters",
        "EVP_PKEY_set1_DH",
        "EVP_PKEY_set1_DSA",
        "EVP_PKEY_set1_EC_KEY",
        "EVP_PKEY_set1_RSA",
        "EVP_PKEY_set_type",
        "EVP_PKEY_set_type_str",
        "EVP_PKEY_size",
        "EVP_PKEY_type",
        "hprintf.constprop.0",
        "pkey_set_type",
        "unsup_alg.isra.0"
    ],
    "evp/p_open.o": [
        "EVP_OpenFinal",
        "EVP_OpenInit"
    ],
    "evp/p_seal.o": [
        "EVP_SealFinal",
        "EVP_SealInit"
    ],
    "evp/p_sign.o": [
        "EVP_SignFinal"
    ],
    "evp/p_verify.o": [
        "EVP_VerifyFinal"
    ],
    "evp/pmeth_fn.o": [
        "EVP_PKEY_decrypt",
        "EVP_PKEY_decrypt_init",
        "EVP_PKEY_derive",
        "EVP_PKEY_derive_init",
        "EVP_PKEY_derive_set_peer",
        "EVP_PKEY_encrypt",
        "EVP_PKEY_encrypt_init",
        "EVP_PKEY_sign",
        "EVP_PKEY_sign_init",
        "EVP_PKEY_verify",
        "EVP_PKEY_verify_init",
        "EVP_PKEY_verify_recover",
        "EVP_PKEY_verify_recover_init"
    ],
    "evp/pmeth_gn.o": [
        "EVP_PKEY_CTX_get_cb",
        "EVP_PKEY_CTX_get_keygen_info",
        "EVP_PKEY_CTX_set_cb",
        "EVP_PKEY_keygen",
        "EVP_PKEY_keygen_init",
        "EVP_PKEY_new_mac_key",
        "EVP_PKEY_paramgen",
        "EVP_PKEY_paramgen_init",
        "evp_pkey_set_cb_translate",
        "trans_cb"
    ],
    "evp/pmeth_lib.o": [
        "EVP_PKEY_CTX_ctrl",
        "EVP_PKEY_CTX_ctrl_str",
        "EVP_PKEY_CTX_dup",
        "EVP_PKEY_CTX_free",
        "EVP_PKEY_CTX_get0_peerkey",
        "EVP_PKEY_CTX_get0_pkey",
        "EVP_PKEY_CTX_get_app_data",
        "EVP_PKEY_CTX_get_data",
        "EVP_PKEY_CTX_get_operation",
        "EVP_PKEY_CTX_new",
        "EVP_PKEY_CTX_new_id",
        "EVP_PKEY_CTX_set0_keygen_info",
        "EVP_PKEY_CTX_set_app_data",
        "EVP_PKEY_CTX_set_data",
        "EVP_PKEY_meth_add0",
        "EVP_PKEY_meth_copy",
        "EVP_PKEY_meth_find",
        "EVP_PKEY_meth_free",
        "EVP_PKEY_meth_get0_info",
        "EVP_PKEY_meth_new",
        "EVP_PKEY_meth_set_cleanup",
        "EVP_PKEY_meth_set_copy",
        "EVP_PKEY_meth_set_ctrl",
        "EVP_PKEY_meth_set_decrypt",
        "EVP_PKEY_meth_set_derive",
        "EVP_PKEY_meth_set_encrypt",
        "EVP_PKEY_meth_set_init",
        "EVP_PKEY_meth_set_keygen",
        "EVP_PKEY_meth_set_paramgen",
        "EVP_PKEY_meth_set_sign",
        "EVP_PKEY_meth_set_signctx",
        "EVP_PKEY_meth_set_verify",
        "EVP_PKEY_meth_set_verifyctx",
        "EVP_PKEY_meth_set_verify_recover",
        "int_ctx_new",
        "pmeth_cmp",
        "pmeth_cmp_BSEARCH_CMP_FN"
    ],
    "gost/gost2814789.o": [
        "Gost2814789_cfb64_encrypt",
        "Gost2814789_cnt_encrypt",
        "Gost2814789_decrypt",
        "Gost2814789_ecb_encrypt",
        "Gost2814789_encrypt",
        "GOST2814789IMIT",
        "GOST2814789IMIT_Final",
        "GOST2814789IMIT_Init",
        "GOST2814789IMIT_Transform",
        "GOST2814789IMIT_Update",
        "GOST2814789IMIT_Update.part.0",
        "Gost2814789_mac"
    ],
    "gost/gost89_keywrap.o": [
        "gost_key_unwrap_crypto_pro",
        "gost_key_wrap_crypto_pro",
        "key_diversify_crypto_pro"
    ],
    "gost/gost89_params.o": [
        "Gost2814789_cryptopro_key_mesh",
        "Gost2814789_set_key",
        "Gost2814789_set_sbox"
    ],
    "gost/gost89imit_ameth.o": [
        "mac_ctrl_gost",
        "mackey_free_gost"
    ],
    "gost/gost89imit_pmeth.o": [
        "pkey_gost_mac_cleanup",
        "pkey_gost_mac_copy",
        "pkey_gost_mac_ctrl",
        "pkey_gost_mac_ctrl_str",
        "pkey_gost_mac_init",
        "pkey_gost_mac_keygen",
        "pkey_gost_mac_signctx",
        "pkey_gost_mac_signctx_init"
    ],
    "gost/gost_asn1.o": [
        "d2i_GOST_CIPHER_PARAMS",
        "d2i_GOST_KEY_AGREEMENT_INFO",
        "d2i_GOST_KEY_INFO",
        "d2i_GOST_KEY_PARAMS",
        "d2i_GOST_KEY_TRANSPORT",
        "GOST_CIPHER_PARAMS_free",
        "GOST_CIPHER_PARAMS_new",
        "GOST_KEY_AGREEMENT_INFO_free",
        "GOST_KEY_AGREEMENT_INFO_new",
        "GOST_KEY_INFO_free",
        "GOST_KEY_INFO_new",
        "GOST_KEY_PARAMS_free",
        "GOST_KEY_PARAMS_new",
        "GOST_KEY_TRANSPORT_free",
        "GOST_KEY_TRANSPORT_new",
        "i2d_GOST_CIPHER_PARAMS",
        "i2d_GOST_KEY_AGREEMENT_INFO",
        "i2d_GOST_KEY_INFO",
        "i2d_GOST_KEY_PARAMS",
        "i2d_GOST_KEY_TRANSPORT"
    ],
    "gost/gost_err.o": [
        "ERR_load_GOST_strings"
    ],
    "gost/gostr341001.o": [
        "gost2001_compute_public",
        "gost2001_do_sign",
        "gost2001_do_verify",
        "gost2001_keygen",
        "GOST_bn2le",
        "GOST_le2bn",
        "VKO_compute_key"
    ],
    "gost/gostr341001_ameth.o": [
        "decode_gost01_algor_params",
        "encode_gost01_algor_params.isra.0",
        "param_cmp_gost01",
        "param_copy_gost01",
        "param_decode_gost01",
        "param_encode_gost01",
        "param_missing_gost01",
        "param_print_gost01",
        "pkey_bits_gost01",
        "pkey_ctrl_gost01",
        "pkey_free_gost01",
        "pkey_size_gost01",
        "priv_decode_gost01",
        "priv_encode_gost01",
        "priv_print_gost01",
        "pub_cmp_gost01",
        "pub_decode_gost01",
        "pub_encode_gost01",
        "pub_print_gost01"
    ],
    "gost/gostr341001_key.o": [
        "GOST_KEY_check_key",
        "GOST_KEY_free",
        "GOST_KEY_get0_group",
        "GOST_KEY_get0_private_key",
        "GOST_KEY_get0_public_key",
        "GOST_KEY_get_digest",
        "GOST_KEY_get_size",
        "GOST_KEY_new",
        "GOST_KEY_set_digest",
        "GOST_KEY_set_group",
        "GOST_KEY_set_private_key",
        "GOST_KEY_set_public_key",
        "GOST_KEY_set_public_key_affine_coordinates"
    ],
    "gost/gostr341001_params.o": [
        "GostR3410_256_param_id",
        "GostR3410_512_param_id",
        "GostR3410_get_md_digest",
        "GostR3410_get_pk_digest"
    ],
    "gost/gostr341001_pmeth.o": [
        "gost01_VKO_key.isra.0",
        "pkey_gost01_cleanup",
        "pkey_gost01_copy",
        "pkey_gost01_ctrl",
        "pkey_gost01_ctrl_str",
        "pkey_gost01_decrypt",
        "pkey_gost01_derive",
        "pkey_gost01_encrypt",
        "pkey_gost01_init",
        "pkey_gost01_keygen",
        "pkey_gost01_paramgen",
        "pkey_gost01_sign",
        "pkey_gost01_verify"
    ],
    "gost/gostr341194.o": [
        "circle_xor8",
        "GOSTR341194",
        "GOSTR341194_block_data_order",
        "GOSTR341194_Final",
        "GOSTR341194_Init",
        "GOSTR341194_Transform",
        "GOSTR341194_Update",
        "GOSTR341194_Update.part.0",
        "hash_step",
        "transform_3"
    ],
    "gost/streebog.o": [
        "STREEBOG256",
        "STREEBOG256_Final",
        "STREEBOG256_Init",
        "STREEBOG256_Update",
        "STREEBOG512",
        "STREEBOG512_Final",
        "STREEBOG512_Init",
        "STREEBOG512_Transform",
        "STREEBOG512_Update",
        "streebog_single_block",
        "transform"
    ],
    "hmac/hm_ameth.o": [
        "hmac_key_free",
        "hmac_pkey_ctrl",
        "hmac_size",
        "old_hmac_decode",
        "old_hmac_encode"
    ],
    "hmac/hm_pmeth.o": [
        "hmac_signctx",
        "hmac_signctx_init",
        "int_update",
        "pkey_hmac_cleanup",
        "pkey_hmac_copy",
        "pkey_hmac_ctrl",
        "pkey_hmac_ctrl_str",
        "pkey_hmac_init",
        "pkey_hmac_keygen"
    ],
    "hmac/hmac.o": [
        "HMAC",
        "HMAC_CTX_cleanup",
        "HMAC_CTX_copy",
        "HMAC_CTX_init",
        "HMAC_CTX_set_flags",
        "HMAC_Final",
        "HMAC_Init",
        "HMAC_Init_ex",
        "HMAC_Update"
    ],
    "idea/i_cbc.o": [
        "idea_cbc_encrypt",
        "idea_encrypt"
    ],
    "idea/i_cfb64.o": [
        "idea_cfb64_encrypt"
    ],
    "idea/i_ecb.o": [
        "idea_ecb_encrypt",
        "idea_options"
    ],
    "idea/i_ofb64.o": [
        "idea_ofb64_encrypt"
    ],
    "idea/i_skey.o": [
        "idea_set_decrypt_key",
        "idea_set_encrypt_key"
    ],
    "krb5/krb5_asn.o": [
        "d2i_KRB5_APREQ",
        "d2i_KRB5_APREQBODY",
        "d2i_KRB5_AUTHDATA",
        "d2i_KRB5_AUTHENT",
        "d2i_KRB5_AUTHENTBODY",
        "d2i_KRB5_CHECKSUM",
        "d2i_KRB5_ENCDATA",
        "d2i_KRB5_ENCKEY",
        "d2i_KRB5_PRINCNAME",
        "d2i_KRB5_TICKET",
        "d2i_KRB5_TKTBODY",
        "i2d_KRB5_APREQ",
        "i2d_KRB5_APREQBODY",
        "i2d_KRB5_AUTHDATA",
        "i2d_KRB5_AUTHENT",
        "i2d_KRB5_AUTHENTBODY",
        "i2d_KRB5_CHECKSUM",
        "i2d_KRB5_ENCDATA",
        "i2d_KRB5_ENCKEY",
        "i2d_KRB5_PRINCNAME",
        "i2d_KRB5_TICKET",
        "i2d_KRB5_TKTBODY",
        "KRB5_APREQBODY_free",
        "KRB5_APREQBODY_new",
        "KRB5_APREQ_free",
        "KRB5_APREQ_new",
        "KRB5_AUTHDATA_free",
        "KRB5_AUTHDATA_new",
        "KRB5_AUTHENTBODY_free",
        "KRB5_AUTHENTBODY_new",
        "KRB5_AUTHENT_free",
        "KRB5_AUTHENT_new",
        "KRB5_CHECKSUM_free",
        "KRB5_CHECKSUM_new",
        "KRB5_ENCDATA_free",
        "KRB5_ENCDATA_new",
        "KRB5_ENCKEY_free",
        "KRB5_ENCKEY_new",
        "KRB5_PRINCNAME_free",
        "KRB5_PRINCNAME_new",
        "KRB5_TICKET_free",
        "KRB5_TICKET_new",
        "KRB5_TKTBODY_free",
        "KRB5_TKTBODY_new"
    ],
    "lhash/lh_stats.o": [
        "lh_node_stats",
        "lh_node_stats_bio",
        "lh_node_usage_stats",
        "lh_node_usage_stats_bio",
        "lh_stats",
        "lh_stats_bio"
    ],
    "lhash/lhash.o": [
        "getrn",
        "lh_delete",
        "lh_doall",
        "lh_doall_arg",
        "lh_free",
        "lh_insert",
        "lh_new",
        "lh_num_items",
        "lh_retrieve",
        "lh_strhash"
    ],
    "md4/md4_dgst.o": [
        "md4_block_data_order",
        "MD4_Final",
        "MD4_Init",
        "MD4_Transform",
        "MD4_Update"
    ],
    "md4/md4_one.o": [
        "MD4"
    ],
    "md5/md5_dgst.o": [
        "ecall_MD5_Final",
        "ecall_MD5_Init",
        "ecall_MD5_Update",
        "hprintf.constprop.0",
        "MD5_Final",
        "MD5_Init",
        "MD5_Transform",
        "MD5_Update",
        "MD5_Update.part.0"
    ],
    "md5/md5_one.o": [
        "MD5"
    ],
    "modes/cbc128.o": [
        "CRYPTO_cbc128_decrypt",
        "CRYPTO_cbc128_encrypt"
    ],
    "modes/ccm128.o": [
        "CRYPTO_ccm128_aad",
        "CRYPTO_ccm128_decrypt",
        "CRYPTO_ccm128_decrypt_ccm64",
        "CRYPTO_ccm128_encrypt",
        "CRYPTO_ccm128_encrypt_ccm64",
        "CRYPTO_ccm128_init",
        "CRYPTO_ccm128_setiv",
        "CRYPTO_ccm128_tag"
    ],
    "modes/cfb128.o": [
        "cfbr_encrypt_block",
        "CRYPTO_cfb128_1_encrypt",
        "CRYPTO_cfb128_8_encrypt",
        "CRYPTO_cfb128_encrypt"
    ],
    "modes/ctr128.o": [
        "CRYPTO_ctr128_encrypt",
        "CRYPTO_ctr128_encrypt_ctr32"
    ],
    "modes/cts128.o": [
        "CRYPTO_cts128_decrypt",
        "CRYPTO_cts128_decrypt_block",
        "CRYPTO_cts128_encrypt",
        "CRYPTO_cts128_encrypt_block",
        "CRYPTO_nistcts128_decrypt",
        "CRYPTO_nistcts128_decrypt_block",
        "CRYPTO_nistcts128_encrypt",
        "CRYPTO_nistcts128_encrypt_block"
    ],
    "modes/gcm128.o": [
        "CRYPTO_gcm128_aad",
        "CRYPTO_gcm128_decrypt",
        "CRYPTO_gcm128_decrypt_ctr32",
        "CRYPTO_gcm128_encrypt",
        "CRYPTO_gcm128_encrypt_ctr32",
        "CRYPTO_gcm128_finish",
        "CRYPTO_gcm128_init",
        "CRYPTO_gcm128_new",
        "CRYPTO_gcm128_release",
        "CRYPTO_gcm128_setiv",
        "CRYPTO_gcm128_tag"
    ],
    "modes/ofb128.o": [
        "CRYPTO_ofb128_encrypt"
    ],
    "modes/xts128.o": [
        "CRYPTO_xts128_encrypt"
    ],
    "objects/o_names.o": [
        "do_all_fn_LHASH_DOALL_ARG",
        "do_all_sorted_cmp",
        "do_all_sorted_fn",
        "name_funcs_free",
        "names_lh_free_LHASH_DOALL",
        "OBJ_NAME_add",
        "OBJ_NAME_cleanup",
        "OBJ_NAME_do_all",
        "OBJ_NAME_do_all_sorted",
        "OBJ_NAME_get",
        "OBJ_NAME_init",
        "OBJ_NAME_init.part.0",
        "obj_name_LHASH_COMP",
        "obj_name_LHASH_HASH",
        "OBJ_NAME_new_index",
        "OBJ_NAME_remove"
    ],
    "objects/obj_dat.o": [
        "added_obj_LHASH_COMP",
        "added_obj_LHASH_HASH",
        "check_defer",
        "cleanup1_LHASH_DOALL",
        "cleanup2_LHASH_DOALL",
        "cleanup3_LHASH_DOALL",
        "ecall_OBJ_create",
        "ecall_OBJ_nid2sn",
        "ecall_OBJ_obj2nid",
        "ecall_OBJ_sn2nid",
        "ecall_OBJ_txt2nid",
        "hprintf.constprop.0",
        "ln_cmp_BSEARCH_CMP_FN",
        "OBJ_add_object",
        "OBJ_bsearch_",
        "OBJ_bsearch_ex_",
        "OBJ_bsearch_ex_.part.0",
        "OBJ_cleanup",
        "obj_cmp_BSEARCH_CMP_FN",
        "OBJ_create",
        "OBJ_create_objects",
        "OBJ_ln2nid",
        "OBJ_new_nid",
        "OBJ_nid2ln",
        "OBJ_nid2obj",
        "OBJ_nid2sn",
        "OBJ_obj2nid",
        "OBJ_obj2txt",
        "OBJ_sn2nid",
        "OBJ_txt2nid",
        "OBJ_txt2obj",
        "sn_cmp_BSEARCH_CMP_FN"
    ],
    "objects/obj_err.o": [
        "ERR_load_OBJ_strings"
    ],
    "objects/obj_lib.o": [
        "OBJ_cmp",
        "OBJ_dup"
    ],
    "objects/obj_xref.o": [
        "OBJ_add_sigid",
        "OBJ_find_sigid_algs",
        "OBJ_find_sigid_by_algs",
        "OBJ_sigid_free",
        "sid_free",
        "sig_cmp_BSEARCH_CMP_FN",
        "sig_sk_cmp",
        "sigx_cmp",
        "sigx_cmp_BSEARCH_CMP_FN"
    ],
    "ocsp/ocsp_asn.o": [
        "d2i_OCSP_BASICRESP",
        "d2i_OCSP_CERTID",
        "d2i_OCSP_CERTSTATUS",
        "d2i_OCSP_CRLID",
        "d2i_OCSP_ONEREQ",
        "d2i_OCSP_REQINFO",
        "d2i_OCSP_REQUEST",
        "d2i_OCSP_RESPBYTES",
        "d2i_OCSP_RESPDATA",
        "d2i_OCSP_RESPID",
        "d2i_OCSP_RESPONSE",
        "d2i_OCSP_REVOKEDINFO",
        "d2i_OCSP_SERVICELOC",
        "d2i_OCSP_SIGNATURE",
        "d2i_OCSP_SINGLERESP",
        "i2d_OCSP_BASICRESP",
        "i2d_OCSP_CERTID",
        "i2d_OCSP_CERTSTATUS",
        "i2d_OCSP_CRLID",
        "i2d_OCSP_ONEREQ",
        "i2d_OCSP_REQINFO",
        "i2d_OCSP_REQUEST",
        "i2d_OCSP_RESPBYTES",
        "i2d_OCSP_RESPDATA",
        "i2d_OCSP_RESPID",
        "i2d_OCSP_RESPONSE",
        "i2d_OCSP_REVOKEDINFO",
        "i2d_OCSP_SERVICELOC",
        "i2d_OCSP_SIGNATURE",
        "i2d_OCSP_SINGLERESP",
        "OCSP_BASICRESP_free",
        "OCSP_BASICRESP_new",
        "OCSP_CERTID_free",
        "OCSP_CERTID_new",
        "OCSP_CERTSTATUS_free",
        "OCSP_CERTSTATUS_new",
        "OCSP_CRLID_free",
        "OCSP_CRLID_new",
        "OCSP_ONEREQ_free",
        "OCSP_ONEREQ_new",
        "OCSP_REQINFO_free",
        "OCSP_REQINFO_new",
        "OCSP_REQUEST_free",
        "OCSP_REQUEST_new",
        "OCSP_RESPBYTES_free",
        "OCSP_RESPBYTES_new",
        "OCSP_RESPDATA_free",
        "OCSP_RESPDATA_new",
        "OCSP_RESPID_free",
        "OCSP_RESPID_new",
        "OCSP_RESPONSE_free",
        "OCSP_RESPONSE_new",
        "OCSP_REVOKEDINFO_free",
        "OCSP_REVOKEDINFO_new",
        "OCSP_SERVICELOC_free",
        "OCSP_SERVICELOC_new",
        "OCSP_SIGNATURE_free",
        "OCSP_SIGNATURE_new",
        "OCSP_SINGLERESP_free",
        "OCSP_SINGLERESP_new"
    ],
    "ocsp/ocsp_cl.o": [
        "OCSP_check_validity",
        "OCSP_request_add0_id",
        "OCSP_request_add1_cert",
        "OCSP_request_set1_name",
        "OCSP_request_sign",
        "OCSP_resp_count",
        "OCSP_resp_find",
        "OCSP_resp_find_status",
        "OCSP_resp_get0",
        "OCSP_response_get1_basic",
        "OCSP_response_status",
        "OCSP_single_get0_status"
    ],
    "ocsp/ocsp_err.o": [
        "ERR_load_OCSP_strings"
    ],
    "ocsp/ocsp_ext.o": [
        "OCSP_accept_responses_new",
        "ocsp_add1_nonce",
        "OCSP_archive_cutoff_new",
        "OCSP_basic_add1_nonce",
        "OCSP_BASICRESP_add1_ext_i2d",
        "OCSP_BASICRESP_add_ext",
        "OCSP_BASICRESP_delete_ext",
        "OCSP_BASICRESP_get1_ext_d2i",
        "OCSP_BASICRESP_get_ext",
        "OCSP_BASICRESP_get_ext_by_critical",
        "OCSP_BASICRESP_get_ext_by_NID",
        "OCSP_BASICRESP_get_ext_by_OBJ",
        "OCSP_BASICRESP_get_ext_count",
        "OCSP_check_nonce",
        "OCSP_copy_nonce",
        "OCSP_crlID_new",
        "OCSP_ONEREQ_add1_ext_i2d",
        "OCSP_ONEREQ_add_ext",
        "OCSP_ONEREQ_delete_ext",
        "OCSP_ONEREQ_get1_ext_d2i",
        "OCSP_ONEREQ_get_ext",
        "OCSP_ONEREQ_get_ext_by_critical",
        "OCSP_ONEREQ_get_ext_by_NID",
        "OCSP_ONEREQ_get_ext_by_OBJ",
        "OCSP_ONEREQ_get_ext_count",
        "OCSP_REQUEST_add1_ext_i2d",
        "OCSP_request_add1_nonce",
        "OCSP_REQUEST_add_ext",
        "OCSP_REQUEST_delete_ext",
        "OCSP_REQUEST_get1_ext_d2i",
        "OCSP_REQUEST_get_ext",
        "OCSP_REQUEST_get_ext_by_critical",
        "OCSP_REQUEST_get_ext_by_NID",
        "OCSP_REQUEST_get_ext_by_OBJ",
        "OCSP_REQUEST_get_ext_count",
        "OCSP_SINGLERESP_add1_ext_i2d",
        "OCSP_SINGLERESP_add_ext",
        "OCSP_SINGLERESP_delete_ext",
        "OCSP_SINGLERESP_get1_ext_d2i",
        "OCSP_SINGLERESP_get_ext",
        "OCSP_SINGLERESP_get_ext_by_critical",
        "OCSP_SINGLERESP_get_ext_by_NID",
        "OCSP_SINGLERESP_get_ext_by_OBJ",
        "OCSP_SINGLERESP_get_ext_count",
        "OCSP_url_svcloc_new"
    ],
    "ocsp/ocsp_ht.o": [
        "OCSP_REQ_CTX_add1_header",
        "OCSP_REQ_CTX_free",
        "OCSP_REQ_CTX_set1_req",
        "OCSP_sendreq_bio",
        "OCSP_sendreq_nbio",
        "OCSP_sendreq_new"
    ],
    "ocsp/ocsp_lib.o": [
        "OCSP_CERTID_dup",
        "OCSP_cert_id_new",
        "OCSP_cert_to_id",
        "OCSP_id_cmp",
        "OCSP_id_issuer_cmp",
        "OCSP_parse_url"
    ],
    "ocsp/ocsp_prn.o": [
        "ocsp_certid_print",
        "OCSP_cert_status_str",
        "OCSP_crl_reason_str",
        "OCSP_REQUEST_print",
        "OCSP_RESPONSE_print",
        "OCSP_response_status_str"
    ],
    "ocsp/ocsp_srv.o": [
        "OCSP_basic_add1_cert",
        "OCSP_basic_add1_status",
        "OCSP_basic_sign",
        "OCSP_id_get0_info",
        "OCSP_onereq_get0_id",
        "OCSP_request_is_signed",
        "OCSP_request_onereq_count",
        "OCSP_request_onereq_get0",
        "OCSP_response_create"
    ],
    "ocsp/ocsp_vfy.o": [
        "OCSP_basic_verify",
        "ocsp_find_signer_sk.isra.0",
        "ocsp_match_issuerid",
        "OCSP_request_verify"
    ],
    "pem/pem_all.o": [
        "ecall_PEM_read_bio_DHparams",
        "ecall_PEM_read_bio_ECPKParameters",
        "hprintf.constprop.0",
        "PEM_read_bio_DHparams",
        "pem_read_bio_dhparams_fake_cb",
        "PEM_read_bio_DSAparams",
        "PEM_read_bio_DSAPrivateKey",
        "PEM_read_bio_DSA_PUBKEY",
        "PEM_read_bio_ECPKParameters",
        "pem_read_bio_ecpkparams_fake_cb",
        "PEM_read_bio_ECPrivateKey",
        "PEM_read_bio_EC_PUBKEY",
        "PEM_read_bio_NETSCAPE_CERT_SEQUENCE",
        "PEM_read_bio_PKCS7",
        "PEM_read_bio_PUBKEY",
        "PEM_read_bio_RSAPrivateKey",
        "PEM_read_bio_RSA_PUBKEY",
        "PEM_read_bio_RSAPublicKey",
        "PEM_read_bio_X509_CRL",
        "PEM_read_bio_X509_REQ",
        "PEM_read_DHparams",
        "PEM_read_DSAparams",
        "PEM_read_DSAPrivateKey",
        "PEM_read_DSA_PUBKEY",
        "PEM_read_ECPKParameters",
        "PEM_read_ECPrivateKey",
        "PEM_read_EC_PUBKEY",
        "PEM_read_NETSCAPE_CERT_SEQUENCE",
        "PEM_read_PKCS7",
        "PEM_read_PUBKEY",
        "PEM_read_RSAPrivateKey",
        "PEM_read_RSA_PUBKEY",
        "PEM_read_RSAPublicKey",
        "PEM_read_X509_CRL",
        "PEM_read_X509_REQ",
        "PEM_write_bio_DHparams",
        "PEM_write_bio_DSAparams",
        "PEM_write_bio_DSAPrivateKey",
        "PEM_write_bio_DSA_PUBKEY",
        "PEM_write_bio_ECPKParameters",
        "PEM_write_bio_ECPrivateKey",
        "PEM_write_bio_EC_PUBKEY",
        "PEM_write_bio_NETSCAPE_CERT_SEQUENCE",
        "PEM_write_bio_PKCS7",
        "PEM_write_bio_PUBKEY",
        "PEM_write_bio_RSAPrivateKey",
        "PEM_write_bio_RSA_PUBKEY",
        "PEM_write_bio_RSAPublicKey",
        "PEM_write_bio_X509_CRL",
        "PEM_write_bio_X509_REQ",
        "PEM_write_bio_X509_REQ_NEW",
        "PEM_write_DHparams",
        "PEM_write_DSAparams",
        "PEM_write_DSAPrivateKey",
        "PEM_write_DSA_PUBKEY",
        "PEM_write_ECPKParameters",
        "PEM_write_ECPrivateKey",
        "PEM_write_EC_PUBKEY",
        "PEM_write_NETSCAPE_CERT_SEQUENCE",
        "PEM_write_PKCS7",
        "PEM_write_PUBKEY",
        "PEM_write_RSAPrivateKey",
        "PEM_write_RSA_PUBKEY",
        "PEM_write_RSAPublicKey",
        "PEM_write_X509_CRL",
        "PEM_write_X509_REQ",
        "PEM_write_X509_REQ_NEW",
        "pkey_get_dsa",
        "pkey_get_eckey",
        "pkey_get_rsa"
    ],
    "pem/pem_err.o": [
        "ERR_load_PEM_strings"
    ],
    "pem/pem_info.o": [
        "PEM_X509_INFO_read",
        "PEM_X509_INFO_read_bio",
        "PEM_X509_INFO_write_bio"
    ],
    "pem/pem_lib.o": [
        "ecall_PEM_ASN1_write",
        "hprintf.constprop.0",
        "PEM_ASN1_read",
        "PEM_ASN1_write",
        "PEM_ASN1_write_bio",
        "PEM_bytes_read_bio",
        "pem_check_suffix",
        "PEM_def_callback",
        "PEM_dek_info",
        "PEM_do_header",
        "PEM_get_EVP_CIPHER_INFO",
        "PEM_proc_type",
        "PEM_read",
        "PEM_read_bio",
        "PEM_write",
        "PEM_write_bio"
    ],
    "pem/pem_oth.o": [
        "PEM_ASN1_read_bio"
    ],
    "pem/pem_pk8.o": [
        "d2i_PKCS8PrivateKey_bio",
        "d2i_PKCS8PrivateKey_fp",
        "do_pk8pkey",
        "do_pk8pkey_fp",
        "i2d_PKCS8PrivateKey_bio",
        "i2d_PKCS8PrivateKey_fp",
        "i2d_PKCS8PrivateKey_nid_bio",
        "i2d_PKCS8PrivateKey_nid_fp",
        "PEM_read_bio_PKCS8",
        "PEM_read_bio_PKCS8_PRIV_KEY_INFO",
        "PEM_read_PKCS8",
        "PEM_read_PKCS8_PRIV_KEY_INFO",
        "PEM_write_bio_PKCS8",
        "PEM_write_bio_PKCS8PrivateKey",
        "PEM_write_bio_PKCS8PrivateKey_nid",
        "PEM_write_bio_PKCS8_PRIV_KEY_INFO",
        "PEM_write_PKCS8",
        "PEM_write_PKCS8PrivateKey",
        "PEM_write_PKCS8PrivateKey_nid",
        "PEM_write_PKCS8_PRIV_KEY_INFO"
    ],
    "pem/pem_pkey.o": [
        "ecall_PEM_read_bio_PrivateKey",
        "hprintf.constprop.0",
        "PEM_read_bio_Parameters",
        "PEM_read_bio_PrivateKey",
        "pem_read_bio_privatekey_fake_cb",
        "PEM_read_PrivateKey",
        "PEM_write_bio_Parameters",
        "PEM_write_bio_PrivateKey",
        "PEM_write_PrivateKey"
    ],
    "pem/pem_seal.o": [
        "PEM_SealFinal",
        "PEM_SealInit",
        "PEM_SealUpdate"
    ],
    "pem/pem_sign.o": [
        "PEM_SignFinal",
        "PEM_SignInit",
        "PEM_SignUpdate"
    ],
    "pem/pem_x509.o": [
        "ecall_PEM_read_bio_X509",
        "hprintf.constprop.0",
        "PEM_read_bio_X509",
        "PEM_read_X509",
        "PEM_write_bio_X509",
        "PEM_write_X509"
    ],
    "pem/pem_xaux.o": [
        "ecall_PEM_read_bio_X509_AUX",
        "hprintf.constprop.0",
        "PEM_read_bio_X509_AUX",
        "PEM_read_bio_X509_CERT_PAIR",
        "PEM_read_X509_AUX",
        "PEM_read_X509_CERT_PAIR",
        "PEM_write_bio_X509_AUX",
        "PEM_write_bio_X509_CERT_PAIR",
        "PEM_write_X509_AUX",
        "PEM_write_X509_CERT_PAIR"
    ],
    "pem/pvkfmt.o": [
        "b2i_dss.isra.0",
        "b2i_PrivateKey",
        "b2i_PrivateKey_bio",
        "b2i_PublicKey",
        "b2i_PublicKey_bio",
        "b2i_PVK_bio",
        "b2i_rsa.isra.0",
        "derive_pvk_key",
        "do_b2i_bio",
        "do_b2i.isra.0",
        "do_blob_header",
        "do_i2b_bio",
        "do_i2b.isra.0",
        "do_PVK_body.isra.0",
        "i2b_PrivateKey_bio",
        "i2b_PublicKey_bio",
        "i2b_PVK_bio",
        "i2b_PVK.constprop.0",
        "read_lebn",
        "write_lebn"
    ],
    "pkcs12/p12_add.o": [
        "PKCS12_decrypt_skey",
        "PKCS12_item_pack_safebag",
        "PKCS12_MAKE_KEYBAG",
        "PKCS12_MAKE_SHKEYBAG",
        "PKCS12_pack_authsafes",
        "PKCS12_pack_p7data",
        "PKCS12_pack_p7encdata",
        "PKCS12_unpack_authsafes",
        "PKCS12_unpack_p7data",
        "PKCS12_unpack_p7encdata"
    ],
    "pkcs12/p12_asn.o": [
        "d2i_PKCS12",
        "d2i_PKCS12_BAGS",
        "d2i_PKCS12_MAC_DATA",
        "d2i_PKCS12_SAFEBAG",
        "i2d_PKCS12",
        "i2d_PKCS12_BAGS",
        "i2d_PKCS12_MAC_DATA",
        "i2d_PKCS12_SAFEBAG",
        "PKCS12_BAGS_free",
        "PKCS12_BAGS_new",
        "PKCS12_free",
        "PKCS12_MAC_DATA_free",
        "PKCS12_MAC_DATA_new",
        "PKCS12_new",
        "PKCS12_SAFEBAG_free",
        "PKCS12_SAFEBAG_new"
    ],
    "pkcs12/p12_attr.o": [
        "PKCS12_add_CSPName_asc",
        "PKCS12_add_friendlyname_asc",
        "PKCS12_add_friendlyname_uni",
        "PKCS12_add_localkeyid",
        "PKCS12_get_attr_gen",
        "PKCS12_get_attr_gen.part.0",
        "PKCS12_get_friendlyname",
        "PKCS8_add_keyusage"
    ],
    "pkcs12/p12_crpt.o": [
        "PKCS12_PBE_add",
        "PKCS12_PBE_keyivgen"
    ],
    "pkcs12/p12_crt.o": [
        "copy_bag_attr",
        "pkcs12_add_bag",
        "PKCS12_add_cert",
        "PKCS12_add_key",
        "PKCS12_add_safe",
        "PKCS12_add_safes",
        "PKCS12_create"
    ],
    "pkcs12/p12_decr.o": [
        "PKCS12_item_decrypt_d2i",
        "PKCS12_item_i2d_encrypt",
        "PKCS12_pbe_crypt"
    ],
    "pkcs12/p12_init.o": [
        "PKCS12_init"
    ],
    "pkcs12/p12_key.o": [
        "PKCS12_key_gen_asc",
        "PKCS12_key_gen_uni"
    ],
    "pkcs12/p12_kiss.o": [
        "parse_bags.constprop.0",
        "PKCS12_parse"
    ],
    "pkcs12/p12_mutl.o": [
        "PKCS12_gen_mac",
        "PKCS12_gen_mac.part.0",
        "PKCS12_set_mac",
        "PKCS12_setup_mac",
        "PKCS12_verify_mac"
    ],
    "pkcs12/p12_npas.o": [
        "alg_get.isra.0",
        "PKCS12_newpass"
    ],
    "pkcs12/p12_p8d.o": [
        "PKCS8_decrypt"
    ],
    "pkcs12/p12_p8e.o": [
        "PKCS8_encrypt"
    ],
    "pkcs12/p12_utl.o": [
        "d2i_PKCS12_bio",
        "d2i_PKCS12_fp",
        "i2d_PKCS12_bio",
        "i2d_PKCS12_fp",
        "OPENSSL_asc2uni",
        "OPENSSL_uni2asc",
        "PKCS12_certbag2x509",
        "PKCS12_certbag2x509crl",
        "PKCS12_x5092certbag",
        "PKCS12_x509crl2certbag"
    ],
    "pkcs12/pk12err.o": [
        "ERR_load_PKCS12_strings"
    ],
    "pkcs7/bio_pk7.o": [
        "BIO_new_PKCS7"
    ],
    "pkcs7/pk7_asn1.o": [
        "d2i_PKCS7",
        "d2i_PKCS7_DIGEST",
        "d2i_PKCS7_ENC_CONTENT",
        "d2i_PKCS7_ENCRYPT",
        "d2i_PKCS7_ENVELOPE",
        "d2i_PKCS7_ISSUER_AND_SERIAL",
        "d2i_PKCS7_RECIP_INFO",
        "d2i_PKCS7_SIGNED",
        "d2i_PKCS7_SIGN_ENVELOPE",
        "d2i_PKCS7_SIGNER_INFO",
        "i2d_PKCS7",
        "i2d_PKCS7_DIGEST",
        "i2d_PKCS7_ENC_CONTENT",
        "i2d_PKCS7_ENCRYPT",
        "i2d_PKCS7_ENVELOPE",
        "i2d_PKCS7_ISSUER_AND_SERIAL",
        "i2d_PKCS7_NDEF",
        "i2d_PKCS7_RECIP_INFO",
        "i2d_PKCS7_SIGNED",
        "i2d_PKCS7_SIGN_ENVELOPE",
        "i2d_PKCS7_SIGNER_INFO",
        "pk7_cb",
        "PKCS7_DIGEST_free",
        "PKCS7_DIGEST_new",
        "PKCS7_dup",
        "PKCS7_ENC_CONTENT_free",
        "PKCS7_ENC_CONTENT_new",
        "PKCS7_ENCRYPT_free",
        "PKCS7_ENCRYPT_new",
        "PKCS7_ENVELOPE_free",
        "PKCS7_ENVELOPE_new",
        "PKCS7_free",
        "PKCS7_ISSUER_AND_SERIAL_free",
        "PKCS7_ISSUER_AND_SERIAL_new",
        "PKCS7_new",
        "PKCS7_print_ctx",
        "PKCS7_RECIP_INFO_free",
        "PKCS7_RECIP_INFO_new",
        "PKCS7_SIGNED_free",
        "PKCS7_SIGNED_new",
        "PKCS7_SIGN_ENVELOPE_free",
        "PKCS7_SIGN_ENVELOPE_new",
        "PKCS7_SIGNER_INFO_free",
        "PKCS7_SIGNER_INFO_new",
        "ri_cb",
        "si_cb"
    ],
    "pkcs7/pk7_attr.o": [
        "PKCS7_add0_attrib_signing_time",
        "PKCS7_add1_attrib_digest",
        "PKCS7_add_attrib_content_type",
        "PKCS7_add_attrib_smimecap",
        "PKCS7_get_smimecap",
        "PKCS7_simple_smimecap"
    ],
    "pkcs7/pk7_doit.o": [
        "add_attribute",
        "get_attribute",
        "PKCS7_add_attribute",
        "PKCS7_add_signed_attribute",
        "PKCS7_bio_add_digest.isra.0",
        "PKCS7_dataDecode",
        "PKCS7_dataFinal",
        "PKCS7_dataInit",
        "PKCS7_dataVerify",
        "pkcs7_decrypt_rinfo",
        "PKCS7_digest_from_attributes",
        "PKCS7_find_digest",
        "PKCS7_get_attribute",
        "PKCS7_get_issuer_and_serial",
        "PKCS7_get_octet_string",
        "PKCS7_get_signed_attribute",
        "PKCS7_set_attributes",
        "PKCS7_set_signed_attributes",
        "PKCS7_signatureVerify",
        "PKCS7_SIGNER_INFO_sign"
    ],
    "pkcs7/pk7_lib.o": [
        "PKCS7_add_certificate",
        "PKCS7_add_crl",
        "PKCS7_add_recipient",
        "PKCS7_add_recipient_info",
        "PKCS7_add_signature",
        "PKCS7_add_signer",
        "PKCS7_cert_from_signer_info",
        "PKCS7_content_new",
        "PKCS7_ctrl",
        "PKCS7_get_signer_info",
        "PKCS7_RECIP_INFO_get0_alg",
        "PKCS7_RECIP_INFO_set",
        "PKCS7_set0_type_other",
        "PKCS7_set_cipher",
        "PKCS7_set_content",
        "PKCS7_set_digest",
        "PKCS7_set_type",
        "PKCS7_SIGNER_INFO_get0_algs",
        "PKCS7_SIGNER_INFO_set",
        "PKCS7_stream"
    ],
    "pkcs7/pk7_mime.o": [
        "i2d_PKCS7_bio_stream",
        "PEM_write_bio_PKCS7_stream",
        "SMIME_read_PKCS7",
        "SMIME_write_PKCS7"
    ],
    "pkcs7/pk7_smime.o": [
        "add_cipher_smcap",
        "add_digest_smcap.constprop.0",
        "PKCS7_decrypt",
        "PKCS7_encrypt",
        "PKCS7_final",
        "PKCS7_get0_signers",
        "PKCS7_sign",
        "PKCS7_sign_add_signer",
        "PKCS7_verify"
    ],
    "pkcs7/pkcs7err.o": [
        "ERR_load_PKCS7_strings"
    ],
    "poly1305/poly1305.o": [
        "CRYPTO_poly1305_finish",
        "CRYPTO_poly1305_init",
        "CRYPTO_poly1305_update",
        "poly1305_blocks"
    ],
    "rand/rand_err.o": [
        "ERR_load_RAND_strings"
    ],
    "rand/rand_lib.o": [
        "RAND_add",
        "RAND_bytes",
        "RAND_cleanup",
        "RAND_get_rand_method",
        "RAND_poll",
        "RAND_pseudo_bytes",
        "RAND_seed",
        "RAND_set_rand_engine",
        "RAND_set_rand_method",
        "RAND_SSLeay",
        "RAND_status"
    ],
    "rand/randfile.o": [
        "RAND_file_name",
        "RAND_load_file",
        "RAND_write_file"
    ],
    "rc2/rc2_cbc.o": [
        "RC2_cbc_encrypt",
        "RC2_decrypt",
        "RC2_encrypt"
    ],
    "rc2/rc2_ecb.o": [
        "RC2_ecb_encrypt"
    ],
    "rc2/rc2_skey.o": [
        "RC2_set_key"
    ],
    "rc2/rc2cfb64.o": [
        "RC2_cfb64_encrypt"
    ],
    "rc2/rc2ofb64.o": [
        "RC2_ofb64_encrypt"
    ],
    "ripemd/rmd_dgst.o": [
        "ripemd160_block_data_order",
        "RIPEMD160_Final",
        "RIPEMD160_Init",
        "RIPEMD160_Transform",
        "RIPEMD160_Update"
    ],
    "ripemd/rmd_one.o": [
        "RIPEMD160"
    ],
    "rsa/rsa_ameth.o": [
        "do_rsa_print",
        "int_rsa_free",
        "int_rsa_size",
        "old_rsa_priv_decode",
        "old_rsa_priv_encode",
        "rsa_bits",
        "rsa_item_sign",
        "rsa_item_verify",
        "rsa_pkey_ctrl",
        "rsa_priv_decode",
        "rsa_priv_encode",
        "rsa_priv_print",
        "rsa_pss_decode.isra.0",
        "rsa_pub_cmp",
        "rsa_pub_decode",
        "rsa_pub_encode",
        "rsa_pub_print",
        "rsa_sig_print",
        "update_buflen.part.0"
    ],
    "rsa/rsa_asn1.o": [
        "d2i_RSAPrivateKey",
        "d2i_RSA_PSS_PARAMS",
        "d2i_RSAPublicKey",
        "i2d_RSAPrivateKey",
        "i2d_RSA_PSS_PARAMS",
        "i2d_RSAPublicKey",
        "rsa_cb",
        "RSAPrivateKey_dup",
        "RSA_PSS_PARAMS_free",
        "RSA_PSS_PARAMS_new",
        "RSAPublicKey_dup"
    ],
    "rsa/rsa_chk.o": [
        "RSA_check_key"
    ],
    "rsa/rsa_crpt.o": [
        "RSA_blinding_off",
        "RSA_blinding_on",
        "RSA_flags",
        "RSA_private_decrypt",
        "RSA_private_encrypt",
        "RSA_public_decrypt",
        "RSA_public_encrypt",
        "RSA_setup_blinding",
        "RSA_size"
    ],
    "rsa/rsa_depr.o": [
        "RSA_generate_key"
    ],
    "rsa/rsa_eay.o": [
        "rsa_blinding_convert",
        "RSA_eay_finish",
        "RSA_eay_init",
        "RSA_eay_mod_exp",
        "RSA_eay_private_decrypt",
        "RSA_eay_private_encrypt",
        "RSA_eay_public_decrypt",
        "RSA_eay_public_encrypt",
        "rsa_get_blinding",
        "RSA_PKCS1_SSLeay"
    ],
    "rsa/rsa_err.o": [
        "ERR_load_RSA_strings"
    ],
    "rsa/rsa_gen.o": [
        "RSA_generate_key_ex"
    ],
    "rsa/rsa_lib.o": [
        "RSA_free",
        "RSA_get_default_method",
        "RSA_get_ex_data",
        "RSA_get_ex_new_index",
        "RSA_get_method",
        "RSA_new",
        "RSA_new_method",
        "RSA_set_default_method",
        "RSA_set_ex_data",
        "RSA_set_method",
        "RSA_up_ref"
    ],
    "rsa/rsa_none.o": [
        "RSA_padding_add_none",
        "RSA_padding_check_none"
    ],
    "rsa/rsa_oaep.o": [
        "PKCS1_MGF1",
        "RSA_padding_add_PKCS1_OAEP",
        "RSA_padding_check_PKCS1_OAEP"
    ],
    "rsa/rsa_pk1.o": [
        "RSA_padding_add_PKCS1_type_1",
        "RSA_padding_add_PKCS1_type_2",
        "RSA_padding_check_PKCS1_type_1",
        "RSA_padding_check_PKCS1_type_2"
    ],
    "rsa/rsa_pmeth.o": [
        "check_padding_md",
        "pkey_rsa_cleanup",
        "pkey_rsa_copy",
        "pkey_rsa_ctrl",
        "pkey_rsa_ctrl_str",
        "pkey_rsa_decrypt",
        "pkey_rsa_encrypt",
        "pkey_rsa_init",
        "pkey_rsa_keygen",
        "pkey_rsa_sign",
        "pkey_rsa_verify",
        "pkey_rsa_verifyrecover",
        "setup_tbuf.isra.0.part.0"
    ],
    "rsa/rsa_prn.o": [
        "RSA_print",
        "RSA_print_fp"
    ],
    "rsa/rsa_pss.o": [
        "RSA_padding_add_PKCS1_PSS",
        "RSA_padding_add_PKCS1_PSS_mgf1",
        "RSA_verify_PKCS1_PSS",
        "RSA_verify_PKCS1_PSS_mgf1"
    ],
    "rsa/rsa_saos.o": [
        "RSA_sign_ASN1_OCTET_STRING",
        "RSA_verify_ASN1_OCTET_STRING"
    ],
    "rsa/rsa_sign.o": [
        "int_rsa_verify",
        "RSA_sign",
        "RSA_verify"
    ],
    "rsa/rsa_ssl.o": [
        "RSA_padding_add_SSLv23",
        "RSA_padding_check_SSLv23"
    ],
    "rsa/rsa_x931.o": [
        "RSA_padding_add_X931",
        "RSA_padding_check_X931",
        "RSA_X931_hash_id"
    ],
    "sha/sha1_one.o": [
        "SHA1"
    ],
    "sha/sha1dgst.o": [
        "SHA1_Final",
        "SHA1_Init",
        "SHA1_Transform",
        "SHA1_Update"
    ],
    "sha/sha256.o": [
        "SHA224",
        "SHA224_Final",
        "SHA224_Init",
        "SHA224_Update",
        "SHA256",
        "SHA256_Final",
        "SHA256_Init",
        "SHA256_Transform",
        "SHA256_Update",
        "SHA256_Update.part.0"
    ],
    "sha/sha512.o": [
        "SHA384",
        "SHA384_Final",
        "SHA384_Init",
        "SHA384_Update",
        "SHA512",
        "SHA512_Final",
        "SHA512_Init",
        "SHA512_Transform",
        "SHA512_Update"
    ],
    "stack/stack.o": [
        "ecall_sk_new_null",
        "ecall_sk_num",
        "ecall_sk_pop_free",
        "ecall_sk_value",
        "hprintf.constprop.0",
        "internal_find",
        "sk_delete",
        "sk_delete_ptr",
        "sk_dup",
        "sk_find",
        "sk_find_ex",
        "sk_free",
        "sk_free.part.0",
        "sk_insert",
        "sk_is_sorted",
        "sk_new",
        "sk_new_null",
        "sk_num",
        "sk_pop",
        "sk_pop_free",
        "sk_pop_free_fake_cb",
        "sk_pop_free.part.0",
        "sk_push",
        "sk_set",
        "sk_set_cmp_func",
        "sk_shift",
        "sk_sort",
        "sk_unshift",
        "sk_value",
        "sk_zero"
    ],
    "ts/ts_asn1.o": [
        "d2i_ESS_CERT_ID",
        "d2i_ESS_ISSUER_SERIAL",
        "d2i_ESS_SIGNING_CERT",
        "d2i_TS_ACCURACY",
        "d2i_TS_MSG_IMPRINT",
        "d2i_TS_MSG_IMPRINT_bio",
        "d2i_TS_MSG_IMPRINT_fp",
        "d2i_TS_REQ",
        "d2i_TS_REQ_bio",
        "d2i_TS_REQ_fp",
        "d2i_TS_RESP",
        "d2i_TS_RESP_bio",
        "d2i_TS_RESP_fp",
        "d2i_TS_STATUS_INFO",
        "d2i_TS_TST_INFO",
        "d2i_TS_TST_INFO_bio",
        "d2i_TS_TST_INFO_fp",
        "ESS_CERT_ID_dup",
        "ESS_CERT_ID_free",
        "ESS_CERT_ID_new",
        "ESS_ISSUER_SERIAL_dup",
        "ESS_ISSUER_SERIAL_free",
        "ESS_ISSUER_SERIAL_new",
        "ESS_SIGNING_CERT_dup",
        "ESS_SIGNING_CERT_free",
        "ESS_SIGNING_CERT_new",
        "i2d_ESS_CERT_ID",
        "i2d_ESS_ISSUER_SERIAL",
        "i2d_ESS_SIGNING_CERT",
        "i2d_TS_ACCURACY",
        "i2d_TS_MSG_IMPRINT",
        "i2d_TS_MSG_IMPRINT_bio",
        "i2d_TS_MSG_IMPRINT_fp",
        "i2d_TS_REQ",
        "i2d_TS_REQ_bio",
        "i2d_TS_REQ_fp",
        "i2d_TS_RESP",
        "i2d_TS_RESP_bio",
        "i2d_TS_RESP_fp",
        "i2d_TS_STATUS_INFO",
        "i2d_TS_TST_INFO",
        "i2d_TS_TST_INFO_bio",
        "i2d_TS_TST_INFO_fp",
        "PKCS7_to_TS_TST_INFO",
        "TS_ACCURACY_dup",
        "TS_ACCURACY_free",
        "TS_ACCURACY_new",
        "TS_MSG_IMPRINT_dup",
        "TS_MSG_IMPRINT_free",
        "TS_MSG_IMPRINT_new",
        "TS_REQ_dup",
        "TS_REQ_free",
        "TS_REQ_new",
        "ts_resp_cb",
        "TS_RESP_dup",
        "TS_RESP_free",
        "TS_RESP_new",
        "TS_STATUS_INFO_dup",
        "TS_STATUS_INFO_free",
        "TS_STATUS_INFO_new",
        "TS_TST_INFO_dup",
        "TS_TST_INFO_free",
        "TS_TST_INFO_new"
    ],
    "ts/ts_conf.o": [
        "TS_CONF_add_flag",
        "TS_CONF_get_tsa_section",
        "TS_CONF_load_cert",
        "TS_CONF_load_certs",
        "TS_CONF_load_key",
        "TS_CONF_set_accuracy",
        "TS_CONF_set_certs",
        "TS_CONF_set_clock_precision_digits",
        "TS_CONF_set_crypto_device",
        "TS_CONF_set_default_engine",
        "TS_CONF_set_def_policy",
        "TS_CONF_set_digests",
        "TS_CONF_set_ess_cert_id_chain",
        "TS_CONF_set_ordering",
        "TS_CONF_set_policies",
        "TS_CONF_set_serial",
        "TS_CONF_set_signer_cert",
        "TS_CONF_set_signer_key",
        "TS_CONF_set_tsa_name"
    ],
    "ts/ts_err.o": [
        "ERR_load_TS_strings"
    ],
    "ts/ts_lib.o": [
        "TS_ASN1_INTEGER_print_bio",
        "TS_ext_print_bio",
        "TS_MSG_IMPRINT_print_bio",
        "TS_OBJ_print_bio",
        "TS_X509_ALGOR_print_bio"
    ],
    "ts/ts_req_print.o": [
        "TS_REQ_print_bio"
    ],
    "ts/ts_req_utils.o": [
        "TS_MSG_IMPRINT_get_algo",
        "TS_MSG_IMPRINT_get_msg",
        "TS_MSG_IMPRINT_set_algo",
        "TS_MSG_IMPRINT_set_msg",
        "TS_REQ_add_ext",
        "TS_REQ_delete_ext",
        "TS_REQ_ext_free",
        "TS_REQ_get_cert_req",
        "TS_REQ_get_ext",
        "TS_REQ_get_ext_by_critical",
        "TS_REQ_get_ext_by_NID",
        "TS_REQ_get_ext_by_OBJ",
        "TS_REQ_get_ext_count",
        "TS_REQ_get_ext_d2i",
        "TS_REQ_get_exts",
        "TS_REQ_get_msg_imprint",
        "TS_REQ_get_nonce",
        "TS_REQ_get_policy_id",
        "TS_REQ_get_version",
        "TS_REQ_set_cert_req",
        "TS_REQ_set_msg_imprint",
        "TS_REQ_set_nonce",
        "TS_REQ_set_policy_id",
        "TS_REQ_set_version"
    ],
    "ts/ts_rsp_print.o": [
        "TS_RESP_print_bio",
        "TS_STATUS_INFO_print_bio",
        "TS_TST_INFO_print_bio",
        "TS_TST_INFO_print_bio.part.0"
    ],
    "ts/ts_rsp_sign.o": [
        "def_extension_cb",
        "def_serial_cb",
        "def_time_cb",
        "ESS_CERT_ID_new_init",
        "TS_RESP_create_response",
        "TS_RESP_CTX_add_failure_info",
        "TS_RESP_CTX_add_flags",
        "TS_RESP_CTX_add_md",
        "TS_RESP_CTX_add_policy",
        "TS_RESP_CTX_free",
        "TS_RESP_CTX_get_request",
        "TS_RESP_CTX_get_tst_info",
        "TS_RESP_CTX_new",
        "TS_RESP_CTX_set_accuracy",
        "TS_RESP_CTX_set_certs",
        "TS_RESP_CTX_set_clock_precision_digits",
        "TS_RESP_CTX_set_def_policy",
        "TS_RESP_CTX_set_extension_cb",
        "TS_RESP_CTX_set_serial_cb",
        "TS_RESP_CTX_set_signer_cert",
        "TS_RESP_CTX_set_signer_key",
        "TS_RESP_CTX_set_status_info",
        "TS_RESP_CTX_set_status_info_cond"
    ],
    "ts/ts_rsp_utils.o": [
        "TS_ACCURACY_get_micros",
        "TS_ACCURACY_get_millis",
        "TS_ACCURACY_get_seconds",
        "TS_ACCURACY_set_micros",
        "TS_ACCURACY_set_millis",
        "TS_ACCURACY_set_seconds",
        "TS_RESP_get_status_info",
        "TS_RESP_get_token",
        "TS_RESP_get_tst_info",
        "TS_RESP_set_status_info",
        "TS_RESP_set_tst_info",
        "TS_TST_INFO_add_ext",
        "TS_TST_INFO_delete_ext",
        "TS_TST_INFO_ext_free",
        "TS_TST_INFO_get_accuracy",
        "TS_TST_INFO_get_ext",
        "TS_TST_INFO_get_ext_by_critical",
        "TS_TST_INFO_get_ext_by_NID",
        "TS_TST_INFO_get_ext_by_OBJ",
        "TS_TST_INFO_get_ext_count",
        "TS_TST_INFO_get_ext_d2i",
        "TS_TST_INFO_get_exts",
        "TS_TST_INFO_get_msg_imprint",
        "TS_TST_INFO_get_nonce",
        "TS_TST_INFO_get_ordering",
        "TS_TST_INFO_get_policy_id",
        "TS_TST_INFO_get_serial",
        "TS_TST_INFO_get_time",
        "TS_TST_INFO_get_tsa",
        "TS_TST_INFO_get_version",
        "TS_TST_INFO_set_accuracy",
        "TS_TST_INFO_set_msg_imprint",
        "TS_TST_INFO_set_nonce",
        "TS_TST_INFO_set_ordering",
        "TS_TST_INFO_set_policy_id",
        "TS_TST_INFO_set_serial",
        "TS_TST_INFO_set_time",
        "TS_TST_INFO_set_tsa",
        "TS_TST_INFO_set_version"
    ],
    "ts/ts_rsp_verify.o": [
        "int_TS_RESP_verify_token",
        "TS_check_imprints",
        "TS_check_signer_name",
        "TS_compute_imprint",
        "TS_find_cert",
        "TS_RESP_verify_response",
        "TS_RESP_verify_signature",
        "TS_RESP_verify_token"
    ],
    "ts/ts_verify_ctx.o": [
        "TS_REQ_to_TS_VERIFY_CTX",
        "TS_VERIFY_CTX_cleanup",
        "TS_VERIFY_CTX_cleanup.part.0",
        "TS_VERIFY_CTX_free",
        "TS_VERIFY_CTX_init",
        "TS_VERIFY_CTX_new"
    ],
    "txt_db/txt_db.o": [
        "TXT_DB_create_index",
        "TXT_DB_free",
        "TXT_DB_get_by_index",
        "TXT_DB_insert",
        "TXT_DB_read",
        "TXT_DB_write"
    ],
    "whrlpool/wp_dgst.o": [
        "WHIRLPOOL",
        "WHIRLPOOL_BitUpdate",
        "WHIRLPOOL_Final",
        "WHIRLPOOL_Init",
        "WHIRLPOOL_Update"
    ],
    "x509/by_dir.o": [
        "add_cert_dir.isra.0",
        "by_dir_entry_free",
        "by_dir_hash_cmp",
        "by_dir_hash_free",
        "dir_ctrl",
        "free_dir",
        "get_cert_by_subject",
        "new_dir",
        "X509_LOOKUP_hash_dir"
    ],
    "x509/by_file.o": [
        "by_file_ctrl",
        "X509_load_cert_crl_file",
        "X509_load_cert_crl_file.part.0",
        "X509_load_cert_file",
        "X509_load_cert_file.part.0",
        "X509_load_crl_file",
        "X509_LOOKUP_file"
    ],
    "x509/by_mem.o": [
        "by_mem_ctrl",
        "X509_LOOKUP_mem"
    ],
    "x509/x509_att.o": [
        "X509at_add1_attr",
        "X509at_add1_attr_by_NID",
        "X509at_add1_attr_by_OBJ",
        "X509at_add1_attr_by_txt",
        "X509at_delete_attr",
        "X509at_get0_data_by_OBJ",
        "X509at_get_attr",
        "X509at_get_attr_by_NID",
        "X509at_get_attr_by_OBJ",
        "X509at_get_attr_count",
        "X509_ATTRIBUTE_count",
        "X509_ATTRIBUTE_create_by_NID",
        "X509_ATTRIBUTE_create_by_OBJ",
        "X509_ATTRIBUTE_create_by_txt",
        "X509_ATTRIBUTE_get0_data",
        "X509_ATTRIBUTE_get0_object",
        "X509_ATTRIBUTE_get0_type",
        "X509_ATTRIBUTE_set1_data",
        "X509_ATTRIBUTE_set1_object"
    ],
    "x509/x509_cmp.o": [
        "ecall_X509_check_private_key",
        "ecall_X509_get_cert_key_algor_algorithm",
        "ecall_X509_get_serialNumber",
        "ecall_X509_get_subject_name",
        "hprintf.constprop.0",
        "X509_check_private_key",
        "X509_cmp",
        "X509_CRL_cmp",
        "X509_CRL_match",
        "X509_find_by_issuer_and_serial",
        "X509_find_by_subject",
        "X509_get0_pubkey_bitstr",
        "X509_get_cert_key_algor_algorithm",
        "X509_get_issuer_name",
        "X509_get_pubkey",
        "X509_get_serialNumber",
        "X509_get_subject_name",
        "X509_issuer_and_serial_cmp",
        "X509_issuer_and_serial_hash",
        "X509_issuer_name_cmp",
        "X509_issuer_name_hash",
        "X509_issuer_name_hash_old",
        "X509_NAME_cmp",
        "X509_NAME_hash",
        "X509_NAME_hash_old",
        "X509_subject_name_cmp",
        "X509_subject_name_hash",
        "X509_subject_name_hash_old"
    ],
    "x509/x509_d2.o": [
        "X509_STORE_load_locations",
        "X509_STORE_load_mem",
        "X509_STORE_set_default_paths"
    ],
    "x509/x509_def.o": [
        "X509_get_default_cert_area",
        "X509_get_default_cert_dir",
        "X509_get_default_cert_dir_env",
        "X509_get_default_cert_file",
        "X509_get_default_cert_file_env",
        "X509_get_default_private_dir"
    ],
    "x509/x509_err.o": [
        "ERR_load_X509_strings"
    ],
    "x509/x509_ext.o": [
        "ecall_X509_add_ext",
        "ecall_X509_get_ext",
        "ecall_X509_get_ext_by_NID",
        "ecall_X509_get_ext_d2i",
        "hprintf.constprop.0",
        "X509_add1_ext_i2d",
        "X509_add_ext",
        "X509_CRL_add1_ext_i2d",
        "X509_CRL_add_ext",
        "X509_CRL_delete_ext",
        "X509_CRL_get_ext",
        "X509_CRL_get_ext_by_critical",
        "X509_CRL_get_ext_by_NID",
        "X509_CRL_get_ext_by_OBJ",
        "X509_CRL_get_ext_count",
        "X509_CRL_get_ext_d2i",
        "X509_delete_ext",
        "X509_get_ext",
        "X509_get_ext_by_critical",
        "X509_get_ext_by_NID",
        "X509_get_ext_by_OBJ",
        "X509_get_ext_count",
        "X509_get_ext_d2i",
        "X509_REVOKED_add1_ext_i2d",
        "X509_REVOKED_add_ext",
        "X509_REVOKED_delete_ext",
        "X509_REVOKED_get_ext",
        "X509_REVOKED_get_ext_by_critical",
        "X509_REVOKED_get_ext_by_NID",
        "X509_REVOKED_get_ext_by_OBJ",
        "X509_REVOKED_get_ext_count",
        "X509_REVOKED_get_ext_d2i"
    ],
    "x509/x509_lu.o": [
        "cleanup",
        "X509_LOOKUP_by_alias",
        "X509_LOOKUP_by_fingerprint",
        "X509_LOOKUP_by_issuer_serial",
        "X509_LOOKUP_by_subject",
        "X509_LOOKUP_ctrl",
        "X509_LOOKUP_free",
        "X509_LOOKUP_init",
        "X509_LOOKUP_new",
        "X509_LOOKUP_shutdown",
        "x509_object_cmp",
        "X509_OBJECT_free_contents",
        "X509_OBJECT_idx_by_subject",
        "x509_object_idx_cnt",
        "X509_OBJECT_retrieve_by_subject",
        "X509_OBJECT_retrieve_match",
        "X509_OBJECT_up_ref_count",
        "X509_STORE_add_cert",
        "X509_STORE_add_crl",
        "X509_STORE_add_lookup",
        "X509_STORE_CTX_get1_issuer",
        "X509_STORE_free",
        "X509_STORE_get1_certs",
        "X509_STORE_get1_crls",
        "X509_STORE_get_by_subject",
        "X509_STORE_new",
        "X509_STORE_set1_param",
        "X509_STORE_set_depth",
        "X509_STORE_set_flags",
        "X509_STORE_set_purpose",
        "X509_STORE_set_trust",
        "X509_STORE_set_verify_cb"
    ],
    "x509/x509_obj.o": [
        "ecall_X509_get_algorithm",
        "ecall_X509_NAME_oneline",
        "hprintf.constprop.0",
        "X509_get_algorithm",
        "X509_NAME_oneline"
    ],
    "x509/x509_r2x.o": [
        "X509_REQ_to_X509"
    ],
    "x509/x509_req.o": [
        "X509_REQ_add1_attr",
        "X509_REQ_add1_attr_by_NID",
        "X509_REQ_add1_attr_by_OBJ",
        "X509_REQ_add1_attr_by_txt",
        "X509_REQ_add_extensions",
        "X509_REQ_add_extensions_nid",
        "X509_REQ_check_private_key",
        "X509_REQ_delete_attr",
        "X509_REQ_extension_nid",
        "X509_REQ_get_attr",
        "X509_REQ_get_attr_by_NID",
        "X509_REQ_get_attr_by_OBJ",
        "X509_REQ_get_attr_count",
        "X509_REQ_get_extension_nids",
        "X509_REQ_get_extensions",
        "X509_REQ_get_pubkey",
        "X509_REQ_set_extension_nids",
        "X509_to_X509_REQ"
    ],
    "x509/x509_set.o": [
        "ecall_X509_set_issuer_name",
        "ecall_X509_set_notAfter",
        "ecall_X509_set_notBefore",
        "ecall_X509_set_pubkey",
        "ecall_X509_set_subject_name",
        "ecall_X509_set_version",
        "hprintf.constprop.0",
        "X509_set_issuer_name",
        "X509_set_notAfter",
        "X509_set_notBefore",
        "X509_set_pubkey",
        "X509_set_serialNumber",
        "X509_set_subject_name",
        "X509_set_version"
    ],
    "x509/x509_trs.o": [
        "obj_trust",
        "tr_cmp",
        "trtable_free",
        "trust_1oid",
        "trust_1oidany",
        "trust_compat",
        "X509_check_trust",
        "X509_check_trust.cold",
        "X509_TRUST_add",
        "X509_TRUST_cleanup",
        "X509_TRUST_get0",
        "X509_TRUST_get0_name",
        "X509_TRUST_get_by_id",
        "X509_TRUST_get_by_id.part.0",
        "X509_TRUST_get_count",
        "X509_TRUST_get_flags",
        "X509_TRUST_get_trust",
        "X509_TRUST_set",
        "X509_TRUST_set_default"
    ],
    "x509/x509_txt.o": [
        "X509_verify_cert_error_string"
    ],
    "x509/x509_v3.o": [
        "X509_EXTENSION_create_by_NID",
        "X509_EXTENSION_create_by_OBJ",
        "X509_EXTENSION_get_critical",
        "X509_EXTENSION_get_data",
        "X509_EXTENSION_get_object",
        "X509_EXTENSION_set_critical",
        "X509_EXTENSION_set_data",
        "X509_EXTENSION_set_object",
        "X509v3_add_ext",
        "X509v3_delete_ext",
        "X509v3_get_ext",
        "X509v3_get_ext_by_critical",
        "X509v3_get_ext_by_NID",
        "X509v3_get_ext_by_OBJ",
        "X509v3_get_ext_count"
    ],
    "x509/x509_vfy.o": [
        "cert_crl",
        "check_crl",
        "check_crl_time",
        "check_issued",
        "check_policy",
        "check_revocation",
        "crl_extension_match",
        "ecall_X509_get_notAfter",
        "ecall_X509_get_notBefore",
        "find_issuer",
        "get_crl_sk",
        "get_issuer_sk",
        "hprintf.constprop.0",
        "internal_verify",
        "null_callback",
        "x509_check_cert_time",
        "X509_cmp_current_time",
        "X509_cmp_time",
        "X509_get_notAfter",
        "X509_get_notBefore",
        "X509_get_pubkey_parameters",
        "X509_gmtime_adj",
        "X509_STORE_CTX_cleanup",
        "X509_STORE_CTX_free",
        "X509_STORE_CTX_get0_current_crl",
        "X509_STORE_CTX_get0_current_issuer",
        "X509_STORE_CTX_get0_param",
        "X509_STORE_CTX_get0_parent_ctx",
        "X509_STORE_CTX_get0_policy_tree",
        "X509_STORE_CTX_get1_chain",
        "X509_STORE_CTX_get_chain",
        "X509_STORE_CTX_get_current_cert",
        "X509_STORE_CTX_get_error",
        "X509_STORE_CTX_get_error_depth",
        "X509_STORE_CTX_get_ex_data",
        "X509_STORE_CTX_get_ex_new_index",
        "X509_STORE_CTX_get_explicit_policy",
        "X509_STORE_CTX_init",
        "X509_STORE_CTX_new",
        "X509_STORE_CTX_purpose_inherit",
        "X509_STORE_CTX_set0_crls",
        "X509_STORE_CTX_set0_param",
        "X509_STORE_CTX_set_cert",
        "X509_STORE_CTX_set_chain",
        "X509_STORE_CTX_set_default",
        "X509_STORE_CTX_set_depth",
        "X509_STORE_CTX_set_error",
        "X509_STORE_CTX_set_ex_data",
        "X509_STORE_CTX_set_flags",
        "X509_STORE_CTX_set_purpose",
        "X509_STORE_CTX_set_time",
        "X509_STORE_CTX_set_trust",
        "X509_STORE_CTX_set_verify_cb",
        "X509_STORE_CTX_trusted_stack",
        "X509_time_adj",
        "X509_time_adj_ex",
        "X509_verify_cert"
    ],
    "x509/x509_vpm.o": [
        "param_cmp",
        "table_cmp_BSEARCH_CMP_FN",
        "X509_VERIFY_PARAM_add0_policy",
        "X509_VERIFY_PARAM_add0_table",
        "X509_VERIFY_PARAM_clear_flags",
        "X509_VERIFY_PARAM_free",
        "X509_VERIFY_PARAM_get_depth",
        "X509_VERIFY_PARAM_get_flags",
        "X509_VERIFY_PARAM_inherit",
        "X509_VERIFY_PARAM_lookup",
        "X509_VERIFY_PARAM_new",
        "X509_VERIFY_PARAM_set1",
        "X509_VERIFY_PARAM_set1_name",
        "X509_VERIFY_PARAM_set1_policies",
        "X509_VERIFY_PARAM_set_depth",
        "X509_VERIFY_PARAM_set_flags",
        "X509_VERIFY_PARAM_set_purpose",
        "X509_VERIFY_PARAM_set_time",
        "X509_VERIFY_PARAM_set_trust",
        "X509_VERIFY_PARAM_table_cleanup",
        "x509_verify_param_zero"
    ],
    "x509/x509cset.o": [
        "X509_CRL_set_issuer_name",
        "X509_CRL_set_lastUpdate",
        "X509_CRL_set_nextUpdate",
        "X509_CRL_set_version",
        "X509_CRL_sort",
        "X509_REVOKED_set_revocationDate",
        "X509_REVOKED_set_serialNumber"
    ],
    "x509/x509name.o": [
        "ecall_X509_NAME_add_entry_by_NID",
        "ecall_X509_NAME_delete_entry",
        "ecall_X509_NAME_ENTRY_get_data",
        "ecall_X509_NAME_get_entry",
        "ecall_X509_NAME_get_index_by_NID",
        "ecall_X509_NAME_get_text_by_NID",
        "hprintf.constprop.0",
        "X509_NAME_add_entry",
        "X509_NAME_add_entry_by_NID",
        "X509_NAME_add_entry_by_OBJ",
        "X509_NAME_add_entry_by_txt",
        "X509_NAME_add_entry.part.0",
        "X509_NAME_delete_entry",
        "X509_NAME_entry_count",
        "X509_NAME_ENTRY_create_by_NID",
        "X509_NAME_ENTRY_create_by_OBJ",
        "X509_NAME_ENTRY_create_by_txt",
        "X509_NAME_ENTRY_get_data",
        "X509_NAME_ENTRY_get_object",
        "X509_NAME_ENTRY_set_data",
        "X509_NAME_ENTRY_set_object",
        "X509_NAME_get_entry",
        "X509_NAME_get_index_by_NID",
        "X509_NAME_get_index_by_OBJ",
        "X509_NAME_get_text_by_NID",
        "X509_NAME_get_text_by_OBJ",
        "X509_NAME_get_text_by_OBJ.cold"
    ],
    "x509/x509rset.o": [
        "X509_REQ_set_pubkey",
        "X509_REQ_set_subject_name",
        "X509_REQ_set_version"
    ],
    "x509/x509spki.o": [
        "NETSCAPE_SPKI_b64_decode",
        "NETSCAPE_SPKI_b64_encode",
        "NETSCAPE_SPKI_get_pubkey",
        "NETSCAPE_SPKI_set_pubkey"
    ],
    "x509/x509type.o": [
        "X509_certificate_type"
    ],
    "x509/x_all.o": [
        "d2i_DSAPrivateKey_bio",
        "d2i_DSAPrivateKey_fp",
        "d2i_DSA_PUBKEY_bio",
        "d2i_DSA_PUBKEY_fp",
        "d2i_ECPrivateKey_bio",
        "d2i_ECPrivateKey_fp",
        "d2i_EC_PUBKEY_bio",
        "d2i_EC_PUBKEY_fp",
        "d2i_PKCS7_bio",
        "d2i_PKCS7_fp",
        "d2i_PKCS8_bio",
        "d2i_PKCS8_fp",
        "d2i_PKCS8_PRIV_KEY_INFO_bio",
        "d2i_PKCS8_PRIV_KEY_INFO_fp",
        "d2i_PrivateKey_bio",
        "d2i_PrivateKey_fp",
        "d2i_PUBKEY_bio",
        "d2i_PUBKEY_fp",
        "d2i_RSAPrivateKey_bio",
        "d2i_RSAPrivateKey_fp",
        "d2i_RSA_PUBKEY_bio",
        "d2i_RSA_PUBKEY_fp",
        "d2i_RSAPublicKey_bio",
        "d2i_RSAPublicKey_fp",
        "d2i_X509_bio",
        "d2i_X509_CRL_bio",
        "d2i_X509_CRL_fp",
        "d2i_X509_fp",
        "d2i_X509_REQ_bio",
        "d2i_X509_REQ_fp",
        "ecall_X509_digest",
        "ecall_X509_pubkey_digest",
        "ecall_X509_sign",
        "hprintf.constprop.0",
        "i2d_DSAPrivateKey_bio",
        "i2d_DSAPrivateKey_fp",
        "i2d_DSA_PUBKEY_bio",
        "i2d_DSA_PUBKEY_fp",
        "i2d_ECPrivateKey_bio",
        "i2d_ECPrivateKey_fp",
        "i2d_EC_PUBKEY_bio",
        "i2d_EC_PUBKEY_fp",
        "i2d_PKCS7_bio",
        "i2d_PKCS7_fp",
        "i2d_PKCS8_bio",
        "i2d_PKCS8_fp",
        "i2d_PKCS8PrivateKeyInfo_bio",
        "i2d_PKCS8PrivateKeyInfo_fp",
        "i2d_PKCS8_PRIV_KEY_INFO_bio",
        "i2d_PKCS8_PRIV_KEY_INFO_fp",
        "i2d_PrivateKey_bio",
        "i2d_PrivateKey_fp",
        "i2d_PUBKEY_bio",
        "i2d_PUBKEY_fp",
        "i2d_RSAPrivateKey_bio",
        "i2d_RSAPrivateKey_fp",
        "i2d_RSA_PUBKEY_bio",
        "i2d_RSA_PUBKEY_fp",
        "i2d_RSAPublicKey_bio",
        "i2d_RSAPublicKey_fp",
        "i2d_X509_bio",
        "i2d_X509_CRL_bio",
        "i2d_X509_CRL_fp",
        "i2d_X509_fp",
        "i2d_X509_REQ_bio",
        "i2d_X509_REQ_fp",
        "NETSCAPE_SPKI_sign",
        "NETSCAPE_SPKI_verify",
        "PKCS7_ISSUER_AND_SERIAL_digest",
        "X509_CRL_digest",
        "X509_CRL_sign",
        "X509_CRL_sign_ctx",
        "X509_digest",
        "X509_NAME_digest",
        "X509_pubkey_digest",
        "X509_REQ_digest",
        "X509_REQ_sign",
        "X509_REQ_sign_ctx",
        "X509_REQ_verify",
        "X509_sign",
        "X509_sign_ctx",
        "X509_verify"
    ],
    "x509v3/pcy_cache.o": [
        "policy_cache_find_data",
        "policy_cache_free",
        "policy_cache_set",
        "policy_data_cmp"
    ],
    "x509v3/pcy_data.o": [
        "policy_data_free",
        "policy_data_new"
    ],
    "x509v3/pcy_lib.o": [
        "X509_policy_level_get0_node",
        "X509_policy_level_node_count",
        "X509_policy_node_get0_parent",
        "X509_policy_node_get0_policy",
        "X509_policy_node_get0_qualifiers",
        "X509_policy_tree_get0_level",
        "X509_policy_tree_get0_policies",
        "X509_policy_tree_get0_user_policies",
        "X509_policy_tree_level_count"
    ],
    "x509v3/pcy_map.o": [
        "policy_cache_set_mapping"
    ],
    "x509v3/pcy_node.o": [
        "level_add_node",
        "level_find_node",
        "node_cmp",
        "policy_node_cmp_new",
        "policy_node_free",
        "policy_node_match",
        "tree_find_sk"
    ],
    "x509v3/pcy_tree.o": [
        "exnode_free",
        "tree_add_auth_node",
        "tree_add_unmatched.isra.0",
        "X509_policy_check",
        "X509_policy_tree_free",
        "X509_policy_tree_free.part.0"
    ],
    "x509v3/v3_akey.o": [
        "i2v_AUTHORITY_KEYID",
        "v2i_AUTHORITY_KEYID"
    ],
    "x509v3/v3_akeya.o": [
        "AUTHORITY_KEYID_free",
        "AUTHORITY_KEYID_new",
        "d2i_AUTHORITY_KEYID",
        "i2d_AUTHORITY_KEYID"
    ],
    "x509v3/v3_alt.o": [
        "a2i_GENERAL_NAME",
        "copy_email",
        "GENERAL_NAME_print",
        "i2v_GENERAL_NAME",
        "i2v_GENERAL_NAMES",
        "v2i_GENERAL_NAME",
        "v2i_GENERAL_NAME_ex",
        "v2i_GENERAL_NAMES",
        "v2i_issuer_alt",
        "v2i_subject_alt"
    ],
    "x509v3/v3_bcons.o": [
        "BASIC_CONSTRAINTS_free",
        "BASIC_CONSTRAINTS_new",
        "d2i_BASIC_CONSTRAINTS",
        "ecall_BASIC_CONSTRAINTS_free",
        "ecall_X509_BC_get_pathlen",
        "hprintf.constprop.0",
        "i2d_BASIC_CONSTRAINTS",
        "i2v_BASIC_CONSTRAINTS",
        "v2i_BASIC_CONSTRAINTS",
        "X509_BC_get_pathlen"
    ],
    "x509v3/v3_bitst.o": [
        "i2v_ASN1_BIT_STRING",
        "v2i_ASN1_BIT_STRING"
    ],
    "x509v3/v3_conf.o": [
        "conf_lhash_get_section",
        "conf_lhash_get_string",
        "do_ext_i2d.isra.0",
        "do_ext_nconf",
        "nconf_get_section",
        "nconf_get_string",
        "v3_check_critical",
        "v3_check_generic",
        "v3_generic_extension",
        "X509V3_EXT_add_conf",
        "X509V3_EXT_add_nconf",
        "X509V3_EXT_add_nconf_sk",
        "X509V3_EXT_conf",
        "X509V3_EXT_conf_nid",
        "X509V3_EXT_CRL_add_conf",
        "X509V3_EXT_CRL_add_nconf",
        "X509V3_EXT_i2d",
        "X509V3_EXT_nconf",
        "X509V3_EXT_nconf_nid",
        "X509V3_EXT_REQ_add_conf",
        "X509V3_EXT_REQ_add_nconf",
        "X509V3_get_section",
        "X509V3_get_string",
        "X509V3_section_free",
        "X509V3_set_conf_lhash",
        "X509V3_set_ctx",
        "X509V3_set_nconf",
        "X509V3_string_free"
    ],
    "x509v3/v3_cpols.o": [
        "CERTIFICATEPOLICIES_free",
        "CERTIFICATEPOLICIES_new",
        "d2i_CERTIFICATEPOLICIES",
        "d2i_NOTICEREF",
        "d2i_POLICYINFO",
        "d2i_POLICYQUALINFO",
        "d2i_USERNOTICE",
        "i2d_CERTIFICATEPOLICIES",
        "i2d_NOTICEREF",
        "i2d_POLICYINFO",
        "i2d_POLICYQUALINFO",
        "i2d_USERNOTICE",
        "i2r_certpol",
        "NOTICEREF_free",
        "NOTICEREF_new",
        "POLICYINFO_free",
        "POLICYINFO_new",
        "POLICYQUALINFO_free",
        "POLICYQUALINFO_new",
        "print_qualifiers",
        "r2i_certpol",
        "USERNOTICE_free",
        "USERNOTICE_new",
        "X509_POLICY_NODE_print"
    ],
    "x509v3/v3_crld.o": [
        "CRL_DIST_POINTS_free",
        "CRL_DIST_POINTS_new",
        "d2i_CRL_DIST_POINTS",
        "d2i_DIST_POINT",
        "d2i_DIST_POINT_NAME",
        "d2i_ISSUING_DIST_POINT",
        "DIST_POINT_free",
        "DIST_POINT_NAME_free",
        "DIST_POINT_NAME_new",
        "DIST_POINT_new",
        "DIST_POINT_set_dpname",
        "dpn_cb",
        "gnames_from_sectname",
        "i2d_CRL_DIST_POINTS",
        "i2d_DIST_POINT",
        "i2d_DIST_POINT_NAME",
        "i2d_ISSUING_DIST_POINT",
        "i2r_crldp",
        "i2r_idp",
        "ISSUING_DIST_POINT_free",
        "ISSUING_DIST_POINT_new",
        "print_distpoint.isra.0",
        "print_gens",
        "print_reasons",
        "set_dist_point_name.isra.0",
        "set_reasons.part.0",
        "v2i_crld",
        "v2i_idp"
    ],
    "x509v3/v3_enum.o": [
        "i2s_ASN1_ENUMERATED_TABLE"
    ],
    "x509v3/v3_extku.o": [
        "d2i_EXTENDED_KEY_USAGE",
        "EXTENDED_KEY_USAGE_free",
        "EXTENDED_KEY_USAGE_new",
        "i2d_EXTENDED_KEY_USAGE",
        "i2v_EXTENDED_KEY_USAGE",
        "v2i_EXTENDED_KEY_USAGE"
    ],
    "x509v3/v3_genn.o": [
        "d2i_EDIPARTYNAME",
        "d2i_GENERAL_NAME",
        "d2i_GENERAL_NAMES",
        "d2i_OTHERNAME",
        "ecall_GENERAL_NAME_free",
        "EDIPARTYNAME_free",
        "EDIPARTYNAME_new",
        "GENERAL_NAME_cmp",
        "GENERAL_NAME_dup",
        "GENERAL_NAME_free",
        "GENERAL_NAME_get0_otherName",
        "GENERAL_NAME_get0_value",
        "GENERAL_NAME_get0_value.cold",
        "GENERAL_NAME_new",
        "GENERAL_NAME_set0_othername",
        "GENERAL_NAME_set0_value",
        "GENERAL_NAMES_free",
        "GENERAL_NAMES_new",
        "hprintf.constprop.0",
        "i2d_EDIPARTYNAME",
        "i2d_GENERAL_NAME",
        "i2d_GENERAL_NAMES",
        "i2d_OTHERNAME",
        "OTHERNAME_cmp",
        "OTHERNAME_free",
        "OTHERNAME_new"
    ],
    "x509v3/v3_ia5.o": [
        "i2s_ASN1_IA5STRING",
        "s2i_ASN1_IA5STRING"
    ],
    "x509v3/v3_info.o": [
        "ACCESS_DESCRIPTION_free",
        "ACCESS_DESCRIPTION_new",
        "AUTHORITY_INFO_ACCESS_free",
        "AUTHORITY_INFO_ACCESS_new",
        "d2i_ACCESS_DESCRIPTION",
        "d2i_AUTHORITY_INFO_ACCESS",
        "i2a_ACCESS_DESCRIPTION",
        "i2d_ACCESS_DESCRIPTION",
        "i2d_AUTHORITY_INFO_ACCESS",
        "i2v_AUTHORITY_INFO_ACCESS",
        "v2i_AUTHORITY_INFO_ACCESS"
    ],
    "x509v3/v3_int.o": [
        "s2i_asn1_int"
    ],
    "x509v3/v3_lib.o": [
        "ext_cmp",
        "ext_cmp_BSEARCH_CMP_FN",
        "ext_list_free",
        "X509V3_add1_i2d",
        "X509V3_add_standard_extensions",
        "X509V3_EXT_add",
        "X509V3_EXT_add_alias",
        "X509V3_EXT_add_list",
        "X509V3_EXT_cleanup",
        "X509V3_EXT_d2i",
        "X509V3_EXT_get",
        "X509V3_EXT_get_nid",
        "X509V3_get_d2i"
    ],
    "x509v3/v3_ncons.o": [
        "do_i2r_name_constraints.isra.0",
        "GENERAL_SUBTREE_free",
        "GENERAL_SUBTREE_new",
        "i2r_NAME_CONSTRAINTS",
        "NAME_CONSTRAINTS_check",
        "NAME_CONSTRAINTS_free",
        "NAME_CONSTRAINTS_new",
        "nc_match.isra.0",
        "nc_match_single.isra.0",
        "v2i_NAME_CONSTRAINTS"
    ],
    "x509v3/v3_ocsp.o": [
        "d2i_ocsp_nonce",
        "i2d_ocsp_nonce",
        "i2r_object",
        "i2r_ocsp_acutoff",
        "i2r_ocsp_crlid",
        "i2r_ocsp_nocheck",
        "i2r_ocsp_nonce",
        "i2r_ocsp_serviceloc",
        "ocsp_nonce_free",
        "ocsp_nonce_new",
        "s2i_ocsp_nocheck"
    ],
    "x509v3/v3_pci.o": [
        "i2r_pci",
        "process_pci_value",
        "r2i_pci"
    ],
    "x509v3/v3_pcia.o": [
        "d2i_PROXY_CERT_INFO_EXTENSION",
        "d2i_PROXY_POLICY",
        "i2d_PROXY_CERT_INFO_EXTENSION",
        "i2d_PROXY_POLICY",
        "PROXY_CERT_INFO_EXTENSION_free",
        "PROXY_CERT_INFO_EXTENSION_new",
        "PROXY_POLICY_free",
        "PROXY_POLICY_new"
    ],
    "x509v3/v3_pcons.o": [
        "i2v_POLICY_CONSTRAINTS",
        "POLICY_CONSTRAINTS_free",
        "POLICY_CONSTRAINTS_new",
        "v2i_POLICY_CONSTRAINTS"
    ],
    "x509v3/v3_pku.o": [
        "d2i_PKEY_USAGE_PERIOD",
        "i2d_PKEY_USAGE_PERIOD",
        "i2r_PKEY_USAGE_PERIOD",
        "PKEY_USAGE_PERIOD_free",
        "PKEY_USAGE_PERIOD_new"
    ],
    "x509v3/v3_pmaps.o": [
        "i2v_POLICY_MAPPINGS",
        "POLICY_MAPPING_free",
        "POLICY_MAPPING_new",
        "v2i_POLICY_MAPPINGS"
    ],
    "x509v3/v3_prn.o": [
        "unknown_ext_print.isra.0",
        "X509V3_extensions_print",
        "X509V3_EXT_print",
        "X509V3_EXT_print_fp",
        "X509V3_EXT_val_prn"
    ],
    "x509v3/v3_purp.o": [
        "check_ca",
        "check_purpose_crl_sign",
        "check_purpose_ns_ssl_server",
        "check_purpose_smime_encrypt",
        "check_purpose_smime_sign",
        "check_purpose_ssl_client",
        "check_purpose_ssl_server",
        "check_purpose_timestamp_sign",
        "check_ssl_ca",
        "ecall_X509_check_issued",
        "hprintf.constprop.0",
        "nid_cmp_BSEARCH_CMP_FN",
        "no_check",
        "ocsp_helper",
        "purpose_smime",
        "X509_check_akid",
        "X509_check_ca",
        "X509_check_issued",
        "X509_check_purpose",
        "X509_check_purpose.cold",
        "X509_PURPOSE_add",
        "X509_PURPOSE_cleanup",
        "X509_PURPOSE_get0",
        "X509_PURPOSE_get0_name",
        "X509_PURPOSE_get0.part.0",
        "X509_PURPOSE_get0_sname",
        "X509_PURPOSE_get_by_id",
        "X509_PURPOSE_get_by_id.part.0",
        "X509_PURPOSE_get_by_sname",
        "X509_PURPOSE_get_by_sname.cold",
        "X509_PURPOSE_get_count",
        "X509_PURPOSE_get_id",
        "X509_PURPOSE_get_trust",
        "X509_PURPOSE_set",
        "X509_supported_extension",
        "x509v3_cache_extensions.part.0",
        "xp_cmp",
        "xptable_free"
    ],
    "x509v3/v3_skey.o": [
        "i2s_ASN1_OCTET_STRING",
        "s2i_ASN1_OCTET_STRING",
        "s2i_skey_id"
    ],
    "x509v3/v3_sxnet.o": [
        "d2i_SXNET",
        "d2i_SXNETID",
        "i2d_SXNET",
        "i2d_SXNETID",
        "SXNET_add_id_asc",
        "SXNET_add_id_INTEGER",
        "SXNET_add_id_ulong",
        "SXNET_free",
        "SXNET_get_id_asc",
        "SXNET_get_id_INTEGER",
        "SXNET_get_id_ulong",
        "sxnet_i2r",
        "SXNETID_free",
        "SXNETID_new",
        "SXNET_new",
        "sxnet_v2i"
    ],
    "x509v3/v3_utl.o": [
        "a2i_ipadd",
        "a2i_IPADDRESS",
        "a2i_IPADDRESS_NC",
        "append_ia5",
        "get_email",
        "hex_to_string",
        "i2s_ASN1_ENUMERATED",
        "i2s_ASN1_INTEGER",
        "ipv4_from_asc",
        "ipv6_cb",
        "name_cmp",
        "s2i_ASN1_INTEGER",
        "sk_strcmp",
        "str_free",
        "string_to_hex",
        "strip_spaces",
        "X509_email_free",
        "X509_get1_email",
        "X509_get1_ocsp",
        "X509_REQ_get1_email",
        "X509V3_add_value",
        "X509V3_add_value_bool",
        "X509V3_add_value_bool_nf",
        "X509V3_add_value_int",
        "X509V3_add_value_uchar",
        "X509V3_conf_free",
        "X509V3_get_value_bool",
        "X509V3_get_value_int",
        "X509V3_NAME_from_section",
        "X509V3_parse_list"
    ],
    "x509v3/v3err.o": [
        "ERR_load_X509V3_strings"
    ],
    "ui/ui_err.o": [
        "ERR_load_UI_strings"
    ],
    "ui/ui_lib.o": [
        "free_string",
        "general_allocate_boolean.constprop.0",
        "general_allocate_prompt.isra.0",
        "general_allocate_string",
        "print_error",
        "UI_add_error_string",
        "UI_add_info_string",
        "UI_add_input_boolean",
        "UI_add_input_string",
        "UI_add_user_data",
        "UI_add_verify_string",
        "UI_construct_prompt",
        "UI_create_method",
        "UI_ctrl",
        "UI_destroy_method",
        "UI_dup_error_string",
        "UI_dup_info_string",
        "UI_dup_input_boolean",
        "UI_dup_input_string",
        "UI_dup_verify_string",
        "UI_free",
        "UI_get0_action_string",
        "UI_get0_output_string",
        "UI_get0_result",
        "UI_get0_result_string",
        "UI_get0_test_string",
        "UI_get0_user_data",
        "UI_get_default_method",
        "UI_get_ex_data",
        "UI_get_ex_new_index",
        "UI_get_input_flags",
        "UI_get_method",
        "UI_get_result_maxsize",
        "UI_get_result_minsize",
        "UI_get_string_type",
        "UI_method_get_closer",
        "UI_method_get_flusher",
        "UI_method_get_opener",
        "UI_method_get_prompt_constructor",
        "UI_method_get_reader",
        "UI_method_get_writer",
        "UI_method_set_closer",
        "UI_method_set_flusher",
        "UI_method_set_opener",
        "UI_method_set_prompt_constructor",
        "UI_method_set_reader",
        "UI_method_set_writer",
        "UI_new",
        "UI_new_method",
        "UI_process",
        "UI_set_default_method",
        "UI_set_ex_data",
        "UI_set_method",
        "UI_set_result"
    ],
    "ui/ui_openssl.o": [
        "close_console",
        "open_console",
        "read_string",
        "read_string_inner",
        "recsig",
        "UI_OpenSSL",
        "write_string"
    ],
    "ui/ui_util.o": [
        "_ossl_old_des_read_pw",
        "_ossl_old_des_read_pw_string",
        "UI_UTIL_read_pw",
        "UI_UTIL_read_pw_string"
    ],
    "dso/dso_dlfcn.o": [
        "DSO_METHOD_dlfcn"
    ],
    "dso/dso_err.o": [
        "ERR_load_DSO_strings"
    ],
    "dso/dso_lib.o": [
        "DSO_bind_func",
        "DSO_bind_var",
        "DSO_convert_filename",
        "DSO_ctrl",
        "DSO_flags",
        "DSO_free",
        "DSO_get_default_method",
        "DSO_get_filename",
        "DSO_get_loaded_filename",
        "DSO_get_method",
        "DSO_global_lookup",
        "DSO_load",
        "DSO_merge",
        "DSO_new",
        "DSO_new_method",
        "DSO_pathbyaddr",
        "DSO_set_default_method",
        "DSO_set_filename",
        "DSO_set_method",
        "DSO_set_name_converter",
        "DSO_up_ref"
    ],
    "dso/dso_null.o": [
        "DSO_METHOD_null"
    ],
    "dso/dso_openssl.o": [
        "DSO_METHOD_openssl"
    ],
    "../ssl/bio_ssl.o": [
        "BIO_f_ssl",
        "BIO_new_buffer_ssl_connect",
        "BIO_new_ssl",
        "BIO_new_ssl_connect",
        "BIO_ssl_copy_session_id",
        "BIO_ssl_shutdown",
        "ssl_callback_ctrl",
        "ssl_ctrl",
        "ssl_free",
        "ssl_new",
        "ssl_puts",
        "ssl_read",
        "ssl_write"
    ],
    "../ssl/bs_ber.o": [
        "CBS_asn1_indefinite_to_definite",
        "cbs_convert_indefinite",
        "cbs_find_indefinite"
    ],
    "../ssl/bs_cbb.o": [
        "CBB_add_asn1",
        "CBB_add_asn1_uint64",
        "CBB_add_bytes",
        "cbb_add_length_prefixed",
        "CBB_add_space",
        "CBB_add_u16",
        "CBB_add_u16_length_prefixed",
        "CBB_add_u24",
        "CBB_add_u24_length_prefixed",
        "CBB_add_u8",
        "CBB_add_u8_length_prefixed",
        "cbb_add_u.part.0",
        "cbb_buffer_add",
        "CBB_cleanup",
        "CBB_finish",
        "CBB_flush",
        "CBB_init",
        "CBB_init_fixed"
    ],
    "../ssl/bs_cbs.o": [
        "CBS_contains_zero_byte",
        "CBS_data",
        "CBS_dup",
        "CBS_get_any_asn1_element",
        "cbs_get_any_asn1_element_internal",
        "cbs_get_asn1",
        "CBS_get_asn1",
        "CBS_get_asn1_element",
        "CBS_get_asn1_uint64",
        "CBS_get_bytes",
        "cbs_get_length_prefixed",
        "CBS_get_optional_asn1",
        "CBS_get_optional_asn1_bool",
        "CBS_get_optional_asn1_octet_string",
        "CBS_get_optional_asn1_uint64",
        "CBS_get_u16",
        "CBS_get_u16_length_prefixed",
        "CBS_get_u24",
        "CBS_get_u24_length_prefixed",
        "CBS_get_u32",
        "CBS_get_u8",
        "CBS_get_u8_length_prefixed",
        "cbs_get_u.part.0",
        "CBS_init",
        "CBS_len",
        "CBS_mem_equal",
        "CBS_offset",
        "CBS_peek_asn1_tag",
        "CBS_skip",
        "CBS_stow",
        "CBS_strdup",
        "CBS_write_bytes"
    ],
    "../ssl/d1_both.o": [
        "dtls1_add_cert_to_buf",
        "dtls1_buffer_message",
        "dtls1_clear_record_buffer",
        "dtls1_do_write",
        "dtls1_get_ccs_header",
        "dtls1_get_message",
        "dtls1_get_message_fragment.isra.0",
        "dtls1_get_message_header",
        "dtls1_get_queue_priority",
        "dtls1_hm_fragment_free",
        "dtls1_hm_fragment_new",
        "dtls1_min_mtu",
        "dtls1_output_cert_chain",
        "dtls1_preprocess_fragment",
        "dtls1_read_failed",
        "dtls1_reassemble_fragment",
        "dtls1_retransmit_buffered_messages",
        "dtls1_retransmit_message",
        "dtls1_send_change_cipher_spec",
        "dtls1_set_message_header",
        "dtls1_shutdown"
    ],
    "../ssl/d1_clnt.o": [
        "dtls1_connect",
        "dtls1_get_client_method",
        "dtls1_send_client_certificate",
        "DTLSv1_client_method"
    ],
    "../ssl/d1_enc.o": [
        "dtls1_enc"
    ],
    "../ssl/d1_lib.o": [
        "dtls1_build_sequence_number",
        "dtls1_check_timeout_num",
        "dtls1_clear",
        "dtls1_clear_queues.isra.0",
        "dtls1_ctrl",
        "dtls1_default_timeout",
        "dtls1_double_timeout",
        "dtls1_free",
        "dtls1_get_cipher",
        "dtls1_get_timeout",
        "dtls1_handle_timeout",
        "dtls1_is_timer_expired",
        "dtls1_listen",
        "dtls1_new",
        "dtls1_start_timer",
        "dtls1_stop_timer"
    ],
    "../ssl/d1_meth.o": [
        "dtls1_get_method",
        "DTLSv1_method"
    ],
    "../ssl/d1_pkt.o": [
        "do_dtls1_write",
        "dtls1_buffer_record.isra.0",
        "dtls1_copy_record.isra.0",
        "dtls1_dispatch_alert",
        "dtls1_get_record",
        "dtls1_process_record",
        "dtls1_read_bytes",
        "dtls1_record_bitmap_update.isra.0",
        "dtls1_reset_seq_numbers",
        "dtls1_retrieve_buffered_record.isra.0",
        "dtls1_write_app_data_bytes",
        "dtls1_write_bytes",
        "satsub64be"
    ],
    "../ssl/d1_srtp.o": [
        "ssl_add_clienthello_use_srtp_ext",
        "ssl_add_serverhello_use_srtp_ext",
        "ssl_ctx_make_profiles",
        "SSL_CTX_set_tlsext_use_srtp",
        "SSL_get_selected_srtp_profile",
        "SSL_get_srtp_profiles",
        "SSL_get_srtp_profiles.part.0",
        "ssl_parse_clienthello_use_srtp_ext",
        "ssl_parse_serverhello_use_srtp_ext",
        "SSL_set_tlsext_use_srtp"
    ],
    "../ssl/d1_srvr.o": [
        "dtls1_accept",
        "dtls1_get_server_method",
        "dtls1_send_server_certificate",
        "DTLSv1_server_method"
    ],
    "../ssl/pqueue.o": [
        "pitem_free",
        "pitem_new",
        "pqueue_find",
        "pqueue_free",
        "pqueue_insert",
        "pqueue_iterator",
        "pqueue_new",
        "pqueue_next",
        "pqueue_peek",
        "pqueue_pop",
        "pqueue_size"
    ],
    "../ssl/s23_clnt.o": [
        "ssl23_connect"
    ],
    "../ssl/s23_lib.o": [
        "ssl23_default_timeout",
        "ssl23_peek",
        "ssl23_read",
        "ssl23_write"
    ],
    "../ssl/s23_pkt.o": [
        "ssl23_read_bytes",
        "ssl23_write_bytes"
    ],
    "../ssl/s23_srvr.o": [
        "ssl23_accept",
        "ssl23_get_client_hello"
    ],
    "../ssl/s3_both.o": [
        "ssl3_add_cert_to_buf",
        "ssl3_do_write",
        "ssl3_get_finished",
        "ssl3_get_message",
        "ssl3_output_cert_chain",
        "ssl3_release_read_buffer",
        "ssl3_release_write_buffer",
        "ssl3_send_change_cipher_spec",
        "ssl3_send_finished",
        "ssl3_setup_buffers",
        "ssl3_setup_init_buffer",
        "ssl3_setup_read_buffer",
        "ssl3_setup_write_buffer",
        "ssl_cert_type",
        "ssl_verify_alarm_type"
    ],
    "../ssl/s3_cbc.o": [
        "ssl3_cbc_copy_mac",
        "ssl3_cbc_digest_record",
        "ssl3_cbc_record_digest_supported",
        "tls1_cbc_remove_padding",
        "tls1_md5_final_raw",
        "tls1_sha1_final_raw",
        "tls1_sha256_final_raw",
        "tls1_sha512_final_raw"
    ],
    "../ssl/s3_clnt.o": [
        "ca_dn_cmp",
        "ssl3_check_cert_and_algorithm",
        "ssl3_check_finished",
        "ssl3_client_hello",
        "ssl3_connect",
        "ssl3_get_certificate_request",
        "ssl3_get_cert_status",
        "ssl3_get_key_exchange",
        "ssl3_get_new_session_ticket",
        "ssl3_get_server_certificate",
        "ssl3_get_server_done",
        "ssl3_get_server_hello",
        "ssl3_send_client_certificate",
        "ssl3_send_client_kex_gost.isra.0",
        "ssl3_send_client_key_exchange",
        "ssl3_send_client_verify",
        "ssl3_send_next_proto",
        "ssl_do_client_cert_cb"
    ],
    "../ssl/s3_lib.o": [
        "ecall_ssl3_get_cipher_name_by_char",
        "hprintf.constprop.0",
        "ssl3_callback_ctrl",
        "ssl3_choose_cipher",
        "ssl3_cipher_get_value",
        "ssl3_clear",
        "ssl3_ctrl",
        "ssl3_ctx_callback_ctrl",
        "ssl3_ctx_ctrl",
        "ssl3_free",
        "ssl3_get_cipher",
        "ssl3_get_cipher_by_char",
        "ssl3_get_cipher_by_id",
        "ssl3_get_cipher_by_value",
        "ssl3_get_req_cert_type",
        "ssl3_handshake_msg_finish",
        "ssl3_handshake_msg_hdr_len",
        "ssl3_handshake_msg_start",
        "ssl3_handshake_write",
        "ssl3_new",
        "ssl3_num_ciphers",
        "ssl3_peek",
        "ssl3_pending",
        "ssl3_put_cipher_by_char",
        "ssl3_read",
        "ssl3_read_internal",
        "ssl3_renegotiate",
        "ssl3_renegotiate_check",
        "ssl3_shutdown",
        "ssl3_write",
        "ssl_get_algorithm2"
    ],
    "../ssl/s3_pkt.o": [
        "do_ssl3_write",
        "ssl3_dispatch_alert",
        "ssl3_do_change_cipher_spec",
        "ssl3_read_bytes",
        "ssl3_read_n",
        "ssl3_send_alert",
        "ssl3_write_bytes",
        "ssl3_write_pending"
    ],
    "../ssl/s3_srvr.o": [
        "ssl3_accept",
        "ssl3_get_cert_verify",
        "ssl3_get_client_certificate",
        "ssl3_get_client_hello",
        "ssl3_get_client_key_exchange",
        "ssl3_get_next_proto",
        "ssl3_send_certificate_request",
        "ssl3_send_cert_status",
        "ssl3_send_hello_request",
        "ssl3_send_newsession_ticket",
        "ssl3_send_server_certificate",
        "ssl3_send_server_done",
        "ssl3_send_server_hello",
        "ssl3_send_server_key_exchange"
    ],
    "../ssl/ssl_algs.o": [
        "ecall_SSL_library_init",
        "hprintf.constprop.0",
        "SSL_library_init"
    ],
    "../ssl/ssl_asn1.o": [
        "d2i_SSL_SESSION",
        "ecall_d2i_SSL_SESSION",
        "ecall_i2d_SSL_SESSION",
        "hprintf.constprop.0",
        "i2d_SSL_SESSION",
        "i2d_SSL_SESSION.part.0",
        "smart_free"
    ],
    "../ssl/ssl_cert.o": [
        "add_client_CA",
        "ecall_SSL_CTX_get_client_CA_list",
        "hprintf.constprop.0",
        "SSL_add_client_CA",
        "SSL_add_dir_cert_subjects_to_stack",
        "SSL_add_file_cert_subjects_to_stack",
        "ssl_cert_dup",
        "ssl_cert_free",
        "ssl_cert_inst",
        "ssl_cert_new",
        "ssl_cert_set_default_md.constprop.0",
        "SSL_CTX_add_client_CA",
        "SSL_CTX_get_client_CA_list",
        "SSL_CTX_set_client_CA_list",
        "SSL_dup_CA_list",
        "SSL_get_client_CA_list",
        "SSL_get_ex_data_X509_STORE_CTX_idx",
        "SSL_load_client_CA_file",
        "ssl_sess_cert_free",
        "ssl_sess_cert_new",
        "SSL_set_client_CA_list",
        "ssl_verify_cert_chain",
        "xname_cmp"
    ],
    "../ssl/ssl_ciph.o": [
        "ecall_SSL_CIPHER_description",
        "ecall_SSL_CIPHER_get_name",
        "hprintf.constprop.0",
        "ssl_cipher_apply_rule.isra.0",
        "SSL_CIPHER_description",
        "SSL_CIPHER_get_bits",
        "SSL_CIPHER_get_by_id",
        "SSL_CIPHER_get_by_value",
        "ssl_cipher_get_evp",
        "ssl_cipher_get_evp_aead",
        "SSL_CIPHER_get_id",
        "SSL_CIPHER_get_name",
        "SSL_CIPHER_get_value",
        "SSL_CIPHER_get_version",
        "ssl_cipher_process_rulestr",
        "ssl_cipher_strength_sort",
        "SSL_COMP_add_compression_method",
        "SSL_COMP_get_compression_methods",
        "SSL_COMP_get_name",
        "ssl_create_cipher_list",
        "ssl_get_handshake_digest",
        "ssl_load_ciphers"
    ],
    "../ssl/ssl_err.o": [
        "ERR_load_SSL_strings"
    ],
    "../ssl/ssl_err2.o": [
        "ecall_SSL_load_error_strings",
        "hprintf.constprop.0",
        "SSL_load_error_strings"
    ],
    "../ssl/ssl_lib.o": [
        "callback_trampoline",
        "crypto_ex_free_cb_wrapper",
        "ecall_SSL_accept",
        "ecall_SSL_connect",
        "ecall_SSL_ctrl",
        "ecall_SSL_CTX_callback_ctrl",
        "ecall_SSL_CTX_check_private_key",
        "ecall_SSL_CTX_ctrl",
        "ecall_SSL_CTX_free",
        "ecall_SSL_CTX_get_cert_store",
        "ecall_SSL_CTX_get_ex_data",
        "ecall_SSL_CTX_get_ex_new_index",
        "ecall_SSL_CTX_get_verify_callback",
        "ecall_SSL_CTX_get_verify_mode",
        "ecall_SSL_CTX_new",
        "ecall_SSL_CTX_set_alpn_select_cb",
        "ecall_SSL_CTX_set_cert_verify_callback",
        "ecall_SSL_CTX_set_cipher_list",
        "ecall_SSL_CTX_set_default_passwd_cb",
        "ecall_SSL_CTX_set_default_verify_paths",
        "ecall_SSL_CTX_set_ex_data",
        "ecall_SSL_CTX_set_next_protos_advertised_cb",
        "ecall_SSL_CTX_set_next_proto_select_cb",
        "ecall_SSL_CTX_set_session_id_context",
        "ecall_SSL_CTX_set_tmp_dh_callback",
        "ecall_SSL_CTX_set_tmp_rsa_callback",
        "ecall_SSL_CTX_set_verify",
        "ecall_SSL_CTX_set_verify_depth",
        "ecall_SSL_do_handshake",
        "ecall_SSL_free",
        "ecall_SSL_get_certificate",
        "ecall_SSL_get_ciphers",
        "ecall_SSL_get_current_cipher",
        "ecall_SSL_get_error",
        "ecall_SSL_get_ex_new_index",
        "ecall_SSL_get_peer_certificate",
        "ecall_SSL_get_privatekey",
        "ecall_SSL_get_rbio",
        "ecall_SSL_get_servername",
        "ecall_SSL_get_shutdown",
        "ecall_SSL_get_SSL_CTX",
        "ecall_SSL_get_verify_mode",
        "ecall_SSL_get_verify_result",
        "ecall_SSL_get_version_as_int",
        "ecall_SSL_get_wbio",
        "ecall_SSL_new",
        "ecall_SSL_pending",
        "ecall_SSL_read",
        "ecall_SSL_select_next_proto",
        "ecall_SSL_set_accept_state",
        "ecall_SSL_set_alpn_protos",
        "ecall_SSL_set_bio",
        "ecall_SSL_set_cipher_list",
        "ecall_SSL_set_connect_state",
        "ecall_SSL_set_fd",
        "ecall_SSL_set_info_callback",
        "ecall_SSL_set_quiet_shutdown",
        "ecall_SSL_set_session_id_context",
        "ecall_SSL_set_shutdown",
        "ecall_SSL_set_SSL_CTX",
        "ecall_SSL_set_verify",
        "ecall_SSL_set_verify_depth",
        "ecall_SSL_set_verify_result",
        "ecall_SSL_shutdown",
        "ecall_SSL_state",
        "ecall_SSL_write",
        "ecall_start_sgx_thread",
        "fake_crypto_ex_dup_cb",
        "fake_crypto_ex_free_cb",
        "fake_crypto_ex_new_cb",
        "get_ssl_hardening",
        "hprintf.constprop.0",
        "lthread_main_handler",
        "OBJ_bsearch_ssl_cipher_id",
        "ocall_alpn_select_cb_wrapper",
        "ocall_get_session_cb_trampoline",
        "ocall_next_protos_advertised_cb_wrapper",
        "ocall_sk_pop_free_cb_wrapper",
        "pem_password_cb_for_ocall",
        "SSL_accept",
        "ssl_bytes_to_cipher_list",
        "SSL_cache_hit",
        "SSL_callback_ctrl",
        "SSL_callback_ctrl.part.0",
        "SSL_check_private_key",
        "ssl_check_srvr_ecc_cert_and_alg",
        "ssl_cipher_id_cmp",
        "ssl_cipher_id_cmp_BSEARCH_CMP_FN",
        "ssl_cipher_list_to_bytes",
        "ssl_cipher_ptr_id_cmp",
        "SSL_clear",
        "ssl_clear_cipher_ctx",
        "ssl_clear_hash_ctx",
        "SSL_connect",
        "SSL_copy_fields_to_in_struct",
        "SSL_copy_fields_to_out_struct",
        "SSL_copy_session_id",
        "SSL_ctrl",
        "SSL_CTX_callback_ctrl",
        "SSL_CTX_callback_ctrl.part.0",
        "SSL_CTX_check_private_key",
        "SSL_CTX_ctrl",
        "SSL_CTX_free",
        "SSL_CTX_get_cert_store",
        "SSL_CTX_get_ex_data",
        "SSL_CTX_get_ex_new_index",
        "SSL_CTX_get_quiet_shutdown",
        "SSL_CTX_get_verify_callback",
        "SSL_CTX_get_verify_depth",
        "SSL_CTX_get_verify_mode",
        "ssl_ctx_info_fake_cb",
        "SSL_CTX_load_verify_locations",
        "SSL_CTX_load_verify_mem",
        "SSL_CTX_new",
        "SSL_CTX_sessions",
        "SSL_CTX_set1_param",
        "SSL_CTX_set_alpn_protos",
        "SSL_CTX_set_alpn_select_cb",
        "SSL_CTX_set_cert_store",
        "SSL_CTX_set_cert_verify_callback",
        "ssl_ctx_set_cert_verify_fake_cb",
        "SSL_CTX_set_cipher_list",
        "SSL_CTX_set_default_passwd_cb",
        "SSL_CTX_set_default_passwd_cb_userdata",
        "SSL_CTX_set_default_verify_paths",
        "SSL_CTX_set_ex_data",
        "SSL_CTX_set_generate_session_id",
        "SSL_CTX_set_msg_callback",
        "SSL_CTX_set_next_protos_advertised_cb",
        "SSL_CTX_set_next_proto_select_cb",
        "ssl_ctx_set_next_proto_select_fake_cb",
        "SSL_CTX_set_purpose",
        "SSL_CTX_set_quiet_shutdown",
        "SSL_CTX_set_session_id_context",
        "SSL_CTX_set_ssl_version",
        "SSL_CTX_set_tmp_dh_callback",
        "SSL_CTX_set_tmp_dh_fake_cb",
        "SSL_CTX_set_tmp_ecdh_callback",
        "SSL_CTX_set_tmp_rsa_callback",
        "ssl_ctx_set_tmp_rsa_fake_callback",
        "SSL_CTX_set_trust",
        "SSL_CTX_set_verify",
        "SSL_CTX_set_verify_depth",
        "ssl_ctx_set_verify_fake_callback",
        "SSL_do_handshake",
        "SSL_dup",
        "SSL_export_keying_material",
        "SSL_free",
        "ssl_free_wbio_buffer",
        "SSL_get0_alpn_selected",
        "SSL_get0_next_proto_negotiated",
        "ssl_get_auto_dh",
        "SSL_get_certificate",
        "SSL_get_cipher_list",
        "SSL_get_ciphers",
        "ssl_get_ciphers_by_id",
        "SSL_get_current_cipher",
        "SSL_get_current_compression",
        "SSL_get_current_expansion",
        "SSL_get_default_timeout",
        "SSL_get_error",
        "SSL_get_ex_data",
        "SSL_get_ex_new_index",
        "SSL_get_fd",
        "SSL_get_finished",
        "SSL_get_info_callback",
        "SSL_get_in_pointer",
        "SSL_get_peer_cert_chain",
        "SSL_get_peer_certificate",
        "SSL_get_peer_finished",
        "SSL_get_privatekey",
        "SSL_get_quiet_shutdown",
        "SSL_get_rbio",
        "SSL_get_read_ahead",
        "SSL_get_rfd",
        "SSL_get_servername",
        "SSL_get_servername_type",
        "ssl_get_server_send_cert",
        "ssl_get_server_send_pkey",
        "SSL_get_shared_ciphers",
        "SSL_get_shutdown",
        "ssl_get_sign_pkey",
        "SSL_get_SSL_CTX",
        "SSL_get_ssl_method",
        "SSL_get_verify_callback",
        "SSL_get_verify_depth",
        "SSL_get_verify_mode",
        "SSL_get_verify_result",
        "SSL_get_version",
        "SSL_get_wbio",
        "SSL_get_wfd",
        "SSL_has_matching_session_id",
        "ssl_init_wbio_buffer",
        "ssl_max_server_version",
        "SSL_new",
        "ssl_ok",
        "SSL_peek",
        "SSL_pending",
        "SSL_read",
        "SSL_renegotiate",
        "SSL_renegotiate_abbreviated",
        "SSL_renegotiate_pending",
        "SSL_select_next_proto",
        "ssl_session_LHASH_COMP",
        "ssl_session_LHASH_HASH",
        "SSL_set1_param",
        "SSL_set_accept_state",
        "SSL_set_alpn_protos",
        "SSL_set_bio",
        "ssl_set_cert_masks",
        "SSL_set_cipher_list",
        "SSL_set_connect_state",
        "SSL_set_debug",
        "SSL_set_ex_data",
        "SSL_set_fd",
        "SSL_set_generate_session_id",
        "SSL_set_info_callback",
        "SSL_set_info_fake_callback",
        "SSL_set_msg_callback",
        "SSL_set_purpose",
        "SSL_set_quiet_shutdown",
        "SSL_set_read_ahead",
        "SSL_set_rfd",
        "SSL_set_session_id_context",
        "SSL_set_shutdown",
        "SSL_set_SSL_CTX",
        "SSL_set_ssl_method",
        "SSL_set_state",
        "SSL_set_tmp_dh_callback",
        "SSL_set_tmp_ecdh_callback",
        "SSL_set_tmp_rsa_callback",
        "SSL_set_trust",
        "SSL_set_verify",
        "SSL_set_verify_depth",
        "ssl_set_verify_fake_cb",
        "SSL_set_verify_result",
        "SSL_set_wfd",
        "SSL_shutdown",
        "SSL_state",
        "ssl_undefined_const_function",
        "ssl_undefined_function",
        "ssl_undefined_void_function",
        "ssl_update_cache",
        "SSL_version",
        "ssl_version_string",
        "SSL_want",
        "SSL_write"
    ],
    "../ssl/ssl_rsa.o": [
        "ecall_SSL_CTX_use_certificate",
        "ecall_SSL_CTX_use_certificate_chain_file",
        "ecall_SSL_CTX_use_certificate_file",
        "ecall_SSL_CTX_use_PrivateKey",
        "ecall_SSL_CTX_use_PrivateKey_file",
        "ecall_SSL_use_certificate",
        "ecall_SSL_use_PrivateKey",
        "hprintf.constprop.0",
        "SSL_CTX_use_certificate",
        "SSL_CTX_use_certificate_ASN1",
        "ssl_ctx_use_certificate_chain_bio",
        "SSL_CTX_use_certificate_chain_file",
        "SSL_CTX_use_certificate_chain_mem",
        "SSL_CTX_use_certificate_file",
        "SSL_CTX_use_PrivateKey",
        "SSL_CTX_use_PrivateKey_ASN1",
        "SSL_CTX_use_PrivateKey_file",
        "SSL_CTX_use_RSAPrivateKey",
        "SSL_CTX_use_RSAPrivateKey_ASN1",
        "SSL_CTX_use_RSAPrivateKey_file",
        "ssl_set_cert",
        "ssl_set_pkey",
        "SSL_use_certificate",
        "SSL_use_certificate_ASN1",
        "SSL_use_certificate_file",
        "SSL_use_PrivateKey",
        "SSL_use_PrivateKey_ASN1",
        "SSL_use_PrivateKey_file",
        "SSL_use_RSAPrivateKey",
        "SSL_use_RSAPrivateKey_ASN1",
        "SSL_use_RSAPrivateKey_file"
    ],
    "../ssl/ssl_sess.o": [
        "def_generate_session_id",
        "ecall_SSL_CTX_get_timeout",
        "ecall_SSL_CTX_sess_set_get_cb",
        "ecall_SSL_CTX_sess_set_new_cb",
        "ecall_SSL_CTX_sess_set_remove_cb",
        "ecall_SSL_CTX_set_info_callback",
        "ecall_SSL_CTX_set_timeout",
        "ecall_SSL_SESSION_get_id",
        "ecall_SSL_SESSION_set_timeout",
        "hprintf.constprop.0",
        "PEM_read_bio_SSL_SESSION",
        "PEM_read_SSL_SESSION",
        "PEM_write_bio_SSL_SESSION",
        "PEM_write_SSL_SESSION",
        "remove_session_lock.part.0",
        "ssl_clear_bad_session",
        "SSL_CTX_add_session",
        "SSL_CTX_flush_sessions",
        "SSL_CTX_get_client_cert_cb",
        "SSL_CTX_get_info_callback",
        "SSL_CTX_get_timeout",
        "SSL_CTX_remove_session",
        "SSL_CTX_sess_get_get_cb",
        "SSL_CTX_sess_get_new_cb",
        "SSL_CTX_sess_get_remove_cb",
        "SSL_CTX_sess_set_get_cb",
        "SSL_CTX_sess_set_new_cb",
        "SSL_CTX_sess_set_remove_cb",
        "SSL_CTX_set_client_cert_cb",
        "SSL_CTX_set_client_cert_engine",
        "SSL_CTX_set_cookie_generate_cb",
        "SSL_CTX_set_cookie_verify_cb",
        "SSL_CTX_set_info_callback",
        "SSL_CTX_set_timeout",
        "SSL_get1_session",
        "ssl_get_new_session",
        "ssl_get_prev_session",
        "ssl_get_prev_session.cold",
        "SSL_get_session",
        "SSL_SESSION_free",
        "SSL_SESSION_get0_peer",
        "SSL_SESSION_get_compress_id",
        "SSL_SESSION_get_ex_data",
        "SSL_SESSION_get_ex_new_index",
        "SSL_SESSION_get_id",
        "SSL_SESSION_get_time",
        "SSL_SESSION_get_timeout",
        "SSL_SESSION_list_remove.isra.0",
        "SSL_SESSION_new",
        "SSL_SESSION_set1_id_context",
        "SSL_SESSION_set_ex_data",
        "SSL_SESSION_set_time",
        "SSL_SESSION_set_timeout",
        "SSL_set_session",
        "SSL_set_session_secret_cb",
        "SSL_set_session_ticket_ext",
        "SSL_set_session_ticket_ext_cb",
        "timeout_LHASH_DOALL_ARG"
    ],
    "../ssl/ssl_stat.o": [
        "ecall_SSL_state_string_long",
        "hprintf.constprop.0",
        "SSL_alert_desc_string",
        "SSL_alert_desc_string_long",
        "SSL_alert_type_string",
        "SSL_alert_type_string_long",
        "SSL_rstate_string",
        "SSL_rstate_string_long",
        "SSL_state_string",
        "SSL_state_string_long"
    ],
    "../ssl/ssl_txt.o": [
        "SSL_SESSION_print",
        "SSL_SESSION_print_fp"
    ],
    "../ssl/t1_clnt.o": [
        "ecall_SSLv23_client_method",
        "hprintf.constprop.0",
        "SSLv23_client_method",
        "tls1_get_client_method",
        "TLS_client_method",
        "TLSv1_1_client_method",
        "TLSv1_2_client_method",
        "TLSv1_client_method"
    ],
    "../ssl/t1_enc.o": [
        "tls1_aead_ctx_init",
        "tls1_alert_code",
        "tls1_cert_verify_mac",
        "tls1_change_cipher_state",
        "tls1_cleanup_key_block",
        "tls1_digest_cached_records",
        "tls1_enc",
        "tls1_export_keying_material",
        "tls1_final_finish_mac",
        "tls1_finish_mac",
        "tls1_free_digest_list",
        "tls1_free_digest_list.part.0",
        "tls1_generate_master_secret",
        "tls1_init_finished_mac",
        "tls1_mac",
        "tls1_PRF.constprop.0",
        "tls1_record_sequence_increment",
        "tls1_setup_key_block"
    ],
    "../ssl/t1_lib.o": [
        "ssl_add_clienthello_tlsext",
        "ssl_add_serverhello_tlsext",
        "ssl_check_clienthello_tlsext_early",
        "ssl_check_clienthello_tlsext_late",
        "ssl_check_serverhello_tlsext",
        "ssl_parse_clienthello_tlsext",
        "ssl_parse_serverhello_tlsext",
        "tls12_get_hash",
        "tls12_get_req_sig_algs",
        "tls12_get_sigandhash",
        "tls12_get_sigid",
        "tls1_check_curve",
        "tls1_check_ec_key",
        "tls1_check_ec_server_key",
        "tls1_check_ec_tmp_key",
        "tls1_clear",
        "tls1_default_timeout",
        "tls1_ec_curve_id2nid",
        "tls1_ec_nid2curve_id",
        "tls1_free",
        "tls1_get_shared_curve",
        "tls1_get_shared_curve.part.0",
        "tls1_new",
        "tls1_process_sigalgs",
        "tls1_process_ticket",
        "tls1_set_ec_id.part.0"
    ],
    "../ssl/t1_meth.o": [
        "ecall_SSLv23_method",
        "hprintf.constprop.0",
        "SSLv23_method",
        "tls1_get_method",
        "TLS_method",
        "TLSv1_1_method",
        "TLSv1_2_method",
        "TLSv1_method"
    ],
    "../ssl/t1_reneg.o": [
        "ssl_add_clienthello_renegotiate_ext",
        "ssl_add_serverhello_renegotiate_ext",
        "ssl_parse_clienthello_renegotiate_ext",
        "ssl_parse_serverhello_renegotiate_ext"
    ],
    "../ssl/t1_srvr.o": [
        "ecall_SSLv23_server_method",
        "hprintf.constprop.0",
        "SSLv23_server_method",
        "tls1_get_server_method",
        "TLS_server_method",
        "TLSv1_1_server_method",
        "TLSv1_2_server_method",
        "TLSv1_server_method"
    ],
    "compat/strlcat.o": [
        "strlcat"
    ],
    "compat/strlcpy.o": [
        "strlcpy"
    ],
    "compat/reallocarray.o": [
        "reallocarray"
    ],
    "compat/timingsafe_memcmp.o": [
        "timingsafe_memcmp"
    ],
    "compat/timingsafe_bcmp.o": [
        "timingsafe_bcmp"
    ],
    "compat/arc4random.o": [
        "arc4random",
        "arc4random_buf"
    ],
    "compat/explicit_bzero.o": [
        "explicit_bzero"
    ],
    "compat/getentropy_linux.o": [
        "getentropy"
    ],
    "logpoint.o": [
        "tls_processing_module_init"
    ]
}